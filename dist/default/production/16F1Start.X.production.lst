

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May  5 22:08:31 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Generated 28/03/2023 GMT
    54                           ; 
    55                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1509 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011D                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  018E                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0197                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0216                     	;# 
   179  0217                     	;# 
   180  0217                     	;# 
   181  0391                     	;# 
   182  0392                     	;# 
   183  0393                     	;# 
   184  0394                     	;# 
   185  0395                     	;# 
   186  0396                     	;# 
   187  0498                     	;# 
   188  0498                     	;# 
   189  0499                     	;# 
   190  049A                     	;# 
   191  049B                     	;# 
   192  049B                     	;# 
   193  049C                     	;# 
   194  049D                     	;# 
   195  049E                     	;# 
   196  049F                     	;# 
   197  0611                     	;# 
   198  0612                     	;# 
   199  0613                     	;# 
   200  0613                     	;# 
   201  0614                     	;# 
   202  0615                     	;# 
   203  0616                     	;# 
   204  0616                     	;# 
   205  0617                     	;# 
   206  0618                     	;# 
   207  0619                     	;# 
   208  0619                     	;# 
   209  061A                     	;# 
   210  061B                     	;# 
   211  061C                     	;# 
   212  061C                     	;# 
   213  0691                     	;# 
   214  0692                     	;# 
   215  0693                     	;# 
   216  0694                     	;# 
   217  0695                     	;# 
   218  0F0F                     	;# 
   219  0F10                     	;# 
   220  0F11                     	;# 
   221  0F12                     	;# 
   222  0F13                     	;# 
   223  0F14                     	;# 
   224  0F15                     	;# 
   225  0F16                     	;# 
   226  0F17                     	;# 
   227  0F18                     	;# 
   228  0F19                     	;# 
   229  0F1A                     	;# 
   230  0F1B                     	;# 
   231  0F1C                     	;# 
   232  0F1D                     	;# 
   233  0F1E                     	;# 
   234  0F1F                     	;# 
   235  0F20                     	;# 
   236  0F21                     	;# 
   237  0F22                     	;# 
   238  0F23                     	;# 
   239  0F24                     	;# 
   240  0F25                     	;# 
   241  0F26                     	;# 
   242  0F27                     	;# 
   243  0F28                     	;# 
   244  0F29                     	;# 
   245  0F2A                     	;# 
   246  0F2B                     	;# 
   247  0F2C                     	;# 
   248  0F2D                     	;# 
   249  0F2E                     	;# 
   250  0F2F                     	;# 
   251  0F8C                     	;# 
   252  0F8D                     	;# 
   253  0F91                     	;# 
   254  0F95                     	;# 
   255  0F96                     	;# 
   256  0F97                     	;# 
   257  0F9C                     	;# 
   258  0F9D                     	;# 
   259  0F9E                     	;# 
   260  0FE3                     	;# 
   261  0FE4                     	;# 
   262  0FE5                     	;# 
   263  0FE6                     	;# 
   264  0FE7                     	;# 
   265  0FE8                     	;# 
   266  0FE9                     	;# 
   267  0FEA                     	;# 
   268  0FEB                     	;# 
   269  0FED                     	;# 
   270  0FEE                     	;# 
   271  0FEF                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0008                     	;# 
   281  0009                     	;# 
   282  000A                     	;# 
   283  000B                     	;# 
   284  000C                     	;# 
   285  000D                     	;# 
   286  000E                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0013                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  008E                     	;# 
   302  0091                     	;# 
   303  0092                     	;# 
   304  0093                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  0111                     	;# 
   320  0112                     	;# 
   321  0113                     	;# 
   322  0114                     	;# 
   323  0115                     	;# 
   324  0116                     	;# 
   325  0117                     	;# 
   326  0118                     	;# 
   327  0119                     	;# 
   328  011D                     	;# 
   329  018C                     	;# 
   330  018D                     	;# 
   331  018E                     	;# 
   332  0191                     	;# 
   333  0191                     	;# 
   334  0192                     	;# 
   335  0193                     	;# 
   336  0193                     	;# 
   337  0194                     	;# 
   338  0195                     	;# 
   339  0196                     	;# 
   340  0197                     	;# 
   341  0199                     	;# 
   342  019A                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019C                     	;# 
   346  019D                     	;# 
   347  019E                     	;# 
   348  019F                     	;# 
   349  020C                     	;# 
   350  020D                     	;# 
   351  0211                     	;# 
   352  0211                     	;# 
   353  0212                     	;# 
   354  0212                     	;# 
   355  0213                     	;# 
   356  0213                     	;# 
   357  0214                     	;# 
   358  0214                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0216                     	;# 
   363  0216                     	;# 
   364  0217                     	;# 
   365  0217                     	;# 
   366  0391                     	;# 
   367  0392                     	;# 
   368  0393                     	;# 
   369  0394                     	;# 
   370  0395                     	;# 
   371  0396                     	;# 
   372  0498                     	;# 
   373  0498                     	;# 
   374  0499                     	;# 
   375  049A                     	;# 
   376  049B                     	;# 
   377  049B                     	;# 
   378  049C                     	;# 
   379  049D                     	;# 
   380  049E                     	;# 
   381  049F                     	;# 
   382  0611                     	;# 
   383  0612                     	;# 
   384  0613                     	;# 
   385  0613                     	;# 
   386  0614                     	;# 
   387  0615                     	;# 
   388  0616                     	;# 
   389  0616                     	;# 
   390  0617                     	;# 
   391  0618                     	;# 
   392  0619                     	;# 
   393  0619                     	;# 
   394  061A                     	;# 
   395  061B                     	;# 
   396  061C                     	;# 
   397  061C                     	;# 
   398  0691                     	;# 
   399  0692                     	;# 
   400  0693                     	;# 
   401  0694                     	;# 
   402  0695                     	;# 
   403  0F0F                     	;# 
   404  0F10                     	;# 
   405  0F11                     	;# 
   406  0F12                     	;# 
   407  0F13                     	;# 
   408  0F14                     	;# 
   409  0F15                     	;# 
   410  0F16                     	;# 
   411  0F17                     	;# 
   412  0F18                     	;# 
   413  0F19                     	;# 
   414  0F1A                     	;# 
   415  0F1B                     	;# 
   416  0F1C                     	;# 
   417  0F1D                     	;# 
   418  0F1E                     	;# 
   419  0F1F                     	;# 
   420  0F20                     	;# 
   421  0F21                     	;# 
   422  0F22                     	;# 
   423  0F23                     	;# 
   424  0F24                     	;# 
   425  0F25                     	;# 
   426  0F26                     	;# 
   427  0F27                     	;# 
   428  0F28                     	;# 
   429  0F29                     	;# 
   430  0F2A                     	;# 
   431  0F2B                     	;# 
   432  0F2C                     	;# 
   433  0F2D                     	;# 
   434  0F2E                     	;# 
   435  0F2F                     	;# 
   436  0F8C                     	;# 
   437  0F8D                     	;# 
   438  0F91                     	;# 
   439  0F95                     	;# 
   440  0F96                     	;# 
   441  0F97                     	;# 
   442  0F9C                     	;# 
   443  0F9D                     	;# 
   444  0F9E                     	;# 
   445  0FE3                     	;# 
   446  0FE4                     	;# 
   447  0FE5                     	;# 
   448  0FE6                     	;# 
   449  0FE7                     	;# 
   450  0FE8                     	;# 
   451  0FE9                     	;# 
   452  0FEA                     	;# 
   453  0FEB                     	;# 
   454  0FED                     	;# 
   455  0FEE                     	;# 
   456  0FEF                     	;# 
   457  0000                     	;# 
   458  0001                     	;# 
   459  0002                     	;# 
   460  0003                     	;# 
   461  0004                     	;# 
   462  0005                     	;# 
   463  0006                     	;# 
   464  0007                     	;# 
   465  0008                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  0091                     	;# 
   488  0092                     	;# 
   489  0093                     	;# 
   490  0095                     	;# 
   491  0096                     	;# 
   492  0097                     	;# 
   493  0099                     	;# 
   494  009A                     	;# 
   495  009B                     	;# 
   496  009B                     	;# 
   497  009C                     	;# 
   498  009D                     	;# 
   499  009E                     	;# 
   500  009F                     	;# 
   501  010C                     	;# 
   502  010D                     	;# 
   503  010E                     	;# 
   504  0111                     	;# 
   505  0112                     	;# 
   506  0113                     	;# 
   507  0114                     	;# 
   508  0115                     	;# 
   509  0116                     	;# 
   510  0117                     	;# 
   511  0118                     	;# 
   512  0119                     	;# 
   513  011D                     	;# 
   514  018C                     	;# 
   515  018D                     	;# 
   516  018E                     	;# 
   517  0191                     	;# 
   518  0191                     	;# 
   519  0192                     	;# 
   520  0193                     	;# 
   521  0193                     	;# 
   522  0194                     	;# 
   523  0195                     	;# 
   524  0196                     	;# 
   525  0197                     	;# 
   526  0199                     	;# 
   527  019A                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019C                     	;# 
   531  019D                     	;# 
   532  019E                     	;# 
   533  019F                     	;# 
   534  020C                     	;# 
   535  020D                     	;# 
   536  0211                     	;# 
   537  0211                     	;# 
   538  0212                     	;# 
   539  0212                     	;# 
   540  0213                     	;# 
   541  0213                     	;# 
   542  0214                     	;# 
   543  0214                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0216                     	;# 
   548  0216                     	;# 
   549  0217                     	;# 
   550  0217                     	;# 
   551  0391                     	;# 
   552  0392                     	;# 
   553  0393                     	;# 
   554  0394                     	;# 
   555  0395                     	;# 
   556  0396                     	;# 
   557  0498                     	;# 
   558  0498                     	;# 
   559  0499                     	;# 
   560  049A                     	;# 
   561  049B                     	;# 
   562  049B                     	;# 
   563  049C                     	;# 
   564  049D                     	;# 
   565  049E                     	;# 
   566  049F                     	;# 
   567  0611                     	;# 
   568  0612                     	;# 
   569  0613                     	;# 
   570  0613                     	;# 
   571  0614                     	;# 
   572  0615                     	;# 
   573  0616                     	;# 
   574  0616                     	;# 
   575  0617                     	;# 
   576  0618                     	;# 
   577  0619                     	;# 
   578  0619                     	;# 
   579  061A                     	;# 
   580  061B                     	;# 
   581  061C                     	;# 
   582  061C                     	;# 
   583  0691                     	;# 
   584  0692                     	;# 
   585  0693                     	;# 
   586  0694                     	;# 
   587  0695                     	;# 
   588  0F0F                     	;# 
   589  0F10                     	;# 
   590  0F11                     	;# 
   591  0F12                     	;# 
   592  0F13                     	;# 
   593  0F14                     	;# 
   594  0F15                     	;# 
   595  0F16                     	;# 
   596  0F17                     	;# 
   597  0F18                     	;# 
   598  0F19                     	;# 
   599  0F1A                     	;# 
   600  0F1B                     	;# 
   601  0F1C                     	;# 
   602  0F1D                     	;# 
   603  0F1E                     	;# 
   604  0F1F                     	;# 
   605  0F20                     	;# 
   606  0F21                     	;# 
   607  0F22                     	;# 
   608  0F23                     	;# 
   609  0F24                     	;# 
   610  0F25                     	;# 
   611  0F26                     	;# 
   612  0F27                     	;# 
   613  0F28                     	;# 
   614  0F29                     	;# 
   615  0F2A                     	;# 
   616  0F2B                     	;# 
   617  0F2C                     	;# 
   618  0F2D                     	;# 
   619  0F2E                     	;# 
   620  0F2F                     	;# 
   621  0F8C                     	;# 
   622  0F8D                     	;# 
   623  0F91                     	;# 
   624  0F95                     	;# 
   625  0F96                     	;# 
   626  0F97                     	;# 
   627  0F9C                     	;# 
   628  0F9D                     	;# 
   629  0F9E                     	;# 
   630  0FE3                     	;# 
   631  0FE4                     	;# 
   632  0FE5                     	;# 
   633  0FE6                     	;# 
   634  0FE7                     	;# 
   635  0FE8                     	;# 
   636  0FE9                     	;# 
   637  0FEA                     	;# 
   638  0FEB                     	;# 
   639  0FED                     	;# 
   640  0FEE                     	;# 
   641  0FEF                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0008                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0013                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001B                     	;# 
   668  001C                     	;# 
   669  008C                     	;# 
   670  008D                     	;# 
   671  008E                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0093                     	;# 
   675  0095                     	;# 
   676  0096                     	;# 
   677  0097                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009B                     	;# 
   682  009C                     	;# 
   683  009D                     	;# 
   684  009E                     	;# 
   685  009F                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010E                     	;# 
   689  0111                     	;# 
   690  0112                     	;# 
   691  0113                     	;# 
   692  0114                     	;# 
   693  0115                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  0118                     	;# 
   697  0119                     	;# 
   698  011D                     	;# 
   699  018C                     	;# 
   700  018D                     	;# 
   701  018E                     	;# 
   702  0191                     	;# 
   703  0191                     	;# 
   704  0192                     	;# 
   705  0193                     	;# 
   706  0193                     	;# 
   707  0194                     	;# 
   708  0195                     	;# 
   709  0196                     	;# 
   710  0197                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  019D                     	;# 
   717  019E                     	;# 
   718  019F                     	;# 
   719  020C                     	;# 
   720  020D                     	;# 
   721  0211                     	;# 
   722  0211                     	;# 
   723  0212                     	;# 
   724  0212                     	;# 
   725  0213                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0214                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0391                     	;# 
   737  0392                     	;# 
   738  0393                     	;# 
   739  0394                     	;# 
   740  0395                     	;# 
   741  0396                     	;# 
   742  0498                     	;# 
   743  0498                     	;# 
   744  0499                     	;# 
   745  049A                     	;# 
   746  049B                     	;# 
   747  049B                     	;# 
   748  049C                     	;# 
   749  049D                     	;# 
   750  049E                     	;# 
   751  049F                     	;# 
   752  0611                     	;# 
   753  0612                     	;# 
   754  0613                     	;# 
   755  0613                     	;# 
   756  0614                     	;# 
   757  0615                     	;# 
   758  0616                     	;# 
   759  0616                     	;# 
   760  0617                     	;# 
   761  0618                     	;# 
   762  0619                     	;# 
   763  0619                     	;# 
   764  061A                     	;# 
   765  061B                     	;# 
   766  061C                     	;# 
   767  061C                     	;# 
   768  0691                     	;# 
   769  0692                     	;# 
   770  0693                     	;# 
   771  0694                     	;# 
   772  0695                     	;# 
   773  0F0F                     	;# 
   774  0F10                     	;# 
   775  0F11                     	;# 
   776  0F12                     	;# 
   777  0F13                     	;# 
   778  0F14                     	;# 
   779  0F15                     	;# 
   780  0F16                     	;# 
   781  0F17                     	;# 
   782  0F18                     	;# 
   783  0F19                     	;# 
   784  0F1A                     	;# 
   785  0F1B                     	;# 
   786  0F1C                     	;# 
   787  0F1D                     	;# 
   788  0F1E                     	;# 
   789  0F1F                     	;# 
   790  0F20                     	;# 
   791  0F21                     	;# 
   792  0F22                     	;# 
   793  0F23                     	;# 
   794  0F24                     	;# 
   795  0F25                     	;# 
   796  0F26                     	;# 
   797  0F27                     	;# 
   798  0F28                     	;# 
   799  0F29                     	;# 
   800  0F2A                     	;# 
   801  0F2B                     	;# 
   802  0F2C                     	;# 
   803  0F2D                     	;# 
   804  0F2E                     	;# 
   805  0F2F                     	;# 
   806  0F8C                     	;# 
   807  0F8D                     	;# 
   808  0F91                     	;# 
   809  0F95                     	;# 
   810  0F96                     	;# 
   811  0F97                     	;# 
   812  0F9C                     	;# 
   813  0F9D                     	;# 
   814  0F9E                     	;# 
   815  0FE3                     	;# 
   816  0FE4                     	;# 
   817  0FE5                     	;# 
   818  0FE6                     	;# 
   819  0FE7                     	;# 
   820  0FE8                     	;# 
   821  0FE9                     	;# 
   822  0FEA                     	;# 
   823  0FEB                     	;# 
   824  0FED                     	;# 
   825  0FEE                     	;# 
   826  0FEF                     	;# 
   827  0000                     	;# 
   828  0001                     	;# 
   829  0002                     	;# 
   830  0003                     	;# 
   831  0004                     	;# 
   832  0005                     	;# 
   833  0006                     	;# 
   834  0007                     	;# 
   835  0008                     	;# 
   836  0009                     	;# 
   837  000A                     	;# 
   838  000B                     	;# 
   839  000C                     	;# 
   840  000D                     	;# 
   841  000E                     	;# 
   842  0011                     	;# 
   843  0012                     	;# 
   844  0013                     	;# 
   845  0015                     	;# 
   846  0016                     	;# 
   847  0016                     	;# 
   848  0017                     	;# 
   849  0018                     	;# 
   850  0019                     	;# 
   851  001A                     	;# 
   852  001B                     	;# 
   853  001C                     	;# 
   854  008C                     	;# 
   855  008D                     	;# 
   856  008E                     	;# 
   857  0091                     	;# 
   858  0092                     	;# 
   859  0093                     	;# 
   860  0095                     	;# 
   861  0096                     	;# 
   862  0097                     	;# 
   863  0099                     	;# 
   864  009A                     	;# 
   865  009B                     	;# 
   866  009B                     	;# 
   867  009C                     	;# 
   868  009D                     	;# 
   869  009E                     	;# 
   870  009F                     	;# 
   871  010C                     	;# 
   872  010D                     	;# 
   873  010E                     	;# 
   874  0111                     	;# 
   875  0112                     	;# 
   876  0113                     	;# 
   877  0114                     	;# 
   878  0115                     	;# 
   879  0116                     	;# 
   880  0117                     	;# 
   881  0118                     	;# 
   882  0119                     	;# 
   883  011D                     	;# 
   884  018C                     	;# 
   885  018D                     	;# 
   886  018E                     	;# 
   887  0191                     	;# 
   888  0191                     	;# 
   889  0192                     	;# 
   890  0193                     	;# 
   891  0193                     	;# 
   892  0194                     	;# 
   893  0195                     	;# 
   894  0196                     	;# 
   895  0197                     	;# 
   896  0199                     	;# 
   897  019A                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019C                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  020C                     	;# 
   905  020D                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0391                     	;# 
   922  0392                     	;# 
   923  0393                     	;# 
   924  0394                     	;# 
   925  0395                     	;# 
   926  0396                     	;# 
   927  0498                     	;# 
   928  0498                     	;# 
   929  0499                     	;# 
   930  049A                     	;# 
   931  049B                     	;# 
   932  049B                     	;# 
   933  049C                     	;# 
   934  049D                     	;# 
   935  049E                     	;# 
   936  049F                     	;# 
   937  0611                     	;# 
   938  0612                     	;# 
   939  0613                     	;# 
   940  0613                     	;# 
   941  0614                     	;# 
   942  0615                     	;# 
   943  0616                     	;# 
   944  0616                     	;# 
   945  0617                     	;# 
   946  0618                     	;# 
   947  0619                     	;# 
   948  0619                     	;# 
   949  061A                     	;# 
   950  061B                     	;# 
   951  061C                     	;# 
   952  061C                     	;# 
   953  0691                     	;# 
   954  0692                     	;# 
   955  0693                     	;# 
   956  0694                     	;# 
   957  0695                     	;# 
   958  0F0F                     	;# 
   959  0F10                     	;# 
   960  0F11                     	;# 
   961  0F12                     	;# 
   962  0F13                     	;# 
   963  0F14                     	;# 
   964  0F15                     	;# 
   965  0F16                     	;# 
   966  0F17                     	;# 
   967  0F18                     	;# 
   968  0F19                     	;# 
   969  0F1A                     	;# 
   970  0F1B                     	;# 
   971  0F1C                     	;# 
   972  0F1D                     	;# 
   973  0F1E                     	;# 
   974  0F1F                     	;# 
   975  0F20                     	;# 
   976  0F21                     	;# 
   977  0F22                     	;# 
   978  0F23                     	;# 
   979  0F24                     	;# 
   980  0F25                     	;# 
   981  0F26                     	;# 
   982  0F27                     	;# 
   983  0F28                     	;# 
   984  0F29                     	;# 
   985  0F2A                     	;# 
   986  0F2B                     	;# 
   987  0F2C                     	;# 
   988  0F2D                     	;# 
   989  0F2E                     	;# 
   990  0F2F                     	;# 
   991  0F8C                     	;# 
   992  0F8D                     	;# 
   993  0F91                     	;# 
   994  0F95                     	;# 
   995  0F96                     	;# 
   996  0F97                     	;# 
   997  0F9C                     	;# 
   998  0F9D                     	;# 
   999  0F9E                     	;# 
  1000  0FE3                     	;# 
  1001  0FE4                     	;# 
  1002  0FE5                     	;# 
  1003  0FE6                     	;# 
  1004  0FE7                     	;# 
  1005  0FE8                     	;# 
  1006  0FE9                     	;# 
  1007  0FEA                     	;# 
  1008  0FEB                     	;# 
  1009  0FED                     	;# 
  1010  0FEE                     	;# 
  1011  0FEF                     	;# 
  1012  0000                     	;# 
  1013  0001                     	;# 
  1014  0002                     	;# 
  1015  0003                     	;# 
  1016  0004                     	;# 
  1017  0005                     	;# 
  1018  0006                     	;# 
  1019  0007                     	;# 
  1020  0008                     	;# 
  1021  0009                     	;# 
  1022  000A                     	;# 
  1023  000B                     	;# 
  1024  000C                     	;# 
  1025  000D                     	;# 
  1026  000E                     	;# 
  1027  0011                     	;# 
  1028  0012                     	;# 
  1029  0013                     	;# 
  1030  0015                     	;# 
  1031  0016                     	;# 
  1032  0016                     	;# 
  1033  0017                     	;# 
  1034  0018                     	;# 
  1035  0019                     	;# 
  1036  001A                     	;# 
  1037  001B                     	;# 
  1038  001C                     	;# 
  1039  008C                     	;# 
  1040  008D                     	;# 
  1041  008E                     	;# 
  1042  0091                     	;# 
  1043  0092                     	;# 
  1044  0093                     	;# 
  1045  0095                     	;# 
  1046  0096                     	;# 
  1047  0097                     	;# 
  1048  0099                     	;# 
  1049  009A                     	;# 
  1050  009B                     	;# 
  1051  009B                     	;# 
  1052  009C                     	;# 
  1053  009D                     	;# 
  1054  009E                     	;# 
  1055  009F                     	;# 
  1056  010C                     	;# 
  1057  010D                     	;# 
  1058  010E                     	;# 
  1059  0111                     	;# 
  1060  0112                     	;# 
  1061  0113                     	;# 
  1062  0114                     	;# 
  1063  0115                     	;# 
  1064  0116                     	;# 
  1065  0117                     	;# 
  1066  0118                     	;# 
  1067  0119                     	;# 
  1068  011D                     	;# 
  1069  018C                     	;# 
  1070  018D                     	;# 
  1071  018E                     	;# 
  1072  0191                     	;# 
  1073  0191                     	;# 
  1074  0192                     	;# 
  1075  0193                     	;# 
  1076  0193                     	;# 
  1077  0194                     	;# 
  1078  0195                     	;# 
  1079  0196                     	;# 
  1080  0197                     	;# 
  1081  0199                     	;# 
  1082  019A                     	;# 
  1083  019B                     	;# 
  1084  019B                     	;# 
  1085  019C                     	;# 
  1086  019D                     	;# 
  1087  019E                     	;# 
  1088  019F                     	;# 
  1089  020C                     	;# 
  1090  020D                     	;# 
  1091  0211                     	;# 
  1092  0211                     	;# 
  1093  0212                     	;# 
  1094  0212                     	;# 
  1095  0213                     	;# 
  1096  0213                     	;# 
  1097  0214                     	;# 
  1098  0214                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0216                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0217                     	;# 
  1106  0391                     	;# 
  1107  0392                     	;# 
  1108  0393                     	;# 
  1109  0394                     	;# 
  1110  0395                     	;# 
  1111  0396                     	;# 
  1112  0498                     	;# 
  1113  0498                     	;# 
  1114  0499                     	;# 
  1115  049A                     	;# 
  1116  049B                     	;# 
  1117  049B                     	;# 
  1118  049C                     	;# 
  1119  049D                     	;# 
  1120  049E                     	;# 
  1121  049F                     	;# 
  1122  0611                     	;# 
  1123  0612                     	;# 
  1124  0613                     	;# 
  1125  0613                     	;# 
  1126  0614                     	;# 
  1127  0615                     	;# 
  1128  0616                     	;# 
  1129  0616                     	;# 
  1130  0617                     	;# 
  1131  0618                     	;# 
  1132  0619                     	;# 
  1133  0619                     	;# 
  1134  061A                     	;# 
  1135  061B                     	;# 
  1136  061C                     	;# 
  1137  061C                     	;# 
  1138  0691                     	;# 
  1139  0692                     	;# 
  1140  0693                     	;# 
  1141  0694                     	;# 
  1142  0695                     	;# 
  1143  0F0F                     	;# 
  1144  0F10                     	;# 
  1145  0F11                     	;# 
  1146  0F12                     	;# 
  1147  0F13                     	;# 
  1148  0F14                     	;# 
  1149  0F15                     	;# 
  1150  0F16                     	;# 
  1151  0F17                     	;# 
  1152  0F18                     	;# 
  1153  0F19                     	;# 
  1154  0F1A                     	;# 
  1155  0F1B                     	;# 
  1156  0F1C                     	;# 
  1157  0F1D                     	;# 
  1158  0F1E                     	;# 
  1159  0F1F                     	;# 
  1160  0F20                     	;# 
  1161  0F21                     	;# 
  1162  0F22                     	;# 
  1163  0F23                     	;# 
  1164  0F24                     	;# 
  1165  0F25                     	;# 
  1166  0F26                     	;# 
  1167  0F27                     	;# 
  1168  0F28                     	;# 
  1169  0F29                     	;# 
  1170  0F2A                     	;# 
  1171  0F2B                     	;# 
  1172  0F2C                     	;# 
  1173  0F2D                     	;# 
  1174  0F2E                     	;# 
  1175  0F2F                     	;# 
  1176  0F8C                     	;# 
  1177  0F8D                     	;# 
  1178  0F91                     	;# 
  1179  0F95                     	;# 
  1180  0F96                     	;# 
  1181  0F97                     	;# 
  1182  0F9C                     	;# 
  1183  0F9D                     	;# 
  1184  0F9E                     	;# 
  1185  0FE3                     	;# 
  1186  0FE4                     	;# 
  1187  0FE5                     	;# 
  1188  0FE6                     	;# 
  1189  0FE7                     	;# 
  1190  0FE8                     	;# 
  1191  0FE9                     	;# 
  1192  0FEA                     	;# 
  1193  0FEB                     	;# 
  1194  0FED                     	;# 
  1195  0FEE                     	;# 
  1196  0FEF                     	;# 
  1197                           
  1198                           	psect	idataBANK0
  1199  0F9E                     __pidataBANK0:
  1200                           
  1201                           ;initializer for _velocity
  1202  0F9E  3432               	retlw	50
  1203  0F9F  3400               	retlw	0
  1204                           
  1205                           ;initializer for _cursor
  1206  0FA0  3401               	retlw	1
  1207  0FA1  3400               	retlw	0
  1208                           
  1209                           ;initializer for _life
  1210  0FA2  3403               	retlw	3
  1211                           
  1212                           	psect	idataBANK1
  1213  0002                     __pidataBANK1:
  1214                           
  1215                           ;initializer for _target
  1216  0002  3401               	retlw	1
  1217  0003  3400               	retlw	0
  1218                           
  1219                           	psect	nvBANK1
  1220  00A0                     __pnvBANK1:
  1221  00A0                     _TMR0_InterruptHandler:
  1222  00A0                     	ds	2
  1223  000E                     _PORTCbits	set	14
  1224  000B                     _INTCONbits	set	11
  1225  0015                     _TMR0	set	21
  1226  0095                     _OPTION_REG	set	149
  1227  0095                     _OPTION_REGbits	set	149
  1228  008E                     _TRISC	set	142
  1229  008D                     _TRISB	set	141
  1230  008C                     _TRISA	set	140
  1231  0097                     _WDTCON	set	151
  1232  0099                     _OSCCON	set	153
  1233  011D                     _APFCON	set	285
  1234  010E                     _LATC	set	270
  1235  010D                     _LATB	set	269
  1236  010C                     _LATA	set	268
  1237  0116                     _BORCON	set	278
  1238  018C                     _ANSELA	set	396
  1239  018D                     _ANSELB	set	397
  1240  018E                     _ANSELC	set	398
  1241  020C                     _WPUA	set	524
  1242  020D                     _WPUB	set	525
  1243  049E                     _NCO1CONbits	set	1182
  1244  049B                     _NCO1INCL	set	1179
  1245  049C                     _NCO1INCH	set	1180
  1246  0498                     _NCO1ACCL	set	1176
  1247  0499                     _NCO1ACCH	set	1177
  1248  049A                     _NCO1ACCU	set	1178
  1249  049F                     _NCO1CLK	set	1183
  1250  049E                     _NCO1CON	set	1182
  1251  24F6                     _N1OE	set	9462
  1252                           
  1253                           	psect	cinit
  1254  0015                     start_initialization:	
  1255                           ; #config settings
  1256                           
  1257  0015                     __initialization:
  1258                           
  1259                           ; Initialize objects allocated to BANK0
  1260  0015  309E               	movlw	low __pidataBANK0
  1261  0016  0084               	movwf	4
  1262  0017  308F               	movlw	(high __pidataBANK0)| (0+128)
  1263  0018  0085               	movwf	5
  1264  0019  0012               	moviw fsr0++
  1265  001A  00EB               	movwf	__pdataBANK0& (0+127)
  1266  001B  0012               	moviw fsr0++
  1267  001C  00EC               	movwf	(__pdataBANK0+1)& (0+127)
  1268  001D  0012               	moviw fsr0++
  1269  001E  00ED               	movwf	(__pdataBANK0+2)& (0+127)
  1270  001F  0012               	moviw fsr0++
  1271  0020  00EE               	movwf	(__pdataBANK0+3)& (0+127)
  1272  0021  0012               	moviw fsr0++
  1273  0022  00EF               	movwf	(__pdataBANK0+4)& (0+127)
  1274                           
  1275                           ; Initialize objects allocated to BANK1
  1276  0023  0021               	movlb	1	; select bank1
  1277  0024  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  1278  0027  00A2               	movwf	__pdataBANK1& (0+127)
  1279  0028  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  1280  002B  00A3               	movwf	(__pdataBANK1+1)& (0+127)
  1281                           
  1282                           ; Clear objects allocated to COMMON
  1283  002C  01FC               	clrf	__pbssCOMMON& (0+127)
  1284                           
  1285                           ; Clear objects allocated to BANK0
  1286  002D  3059               	movlw	low __pbssBANK0
  1287  002E  0084               	movwf	4
  1288  002F  3000               	movlw	high __pbssBANK0
  1289  0030  0085               	movwf	5
  1290  0031  3012               	movlw	18
  1291  0032  318F  27AF  3180   	fcall	clear_ram0
  1292  0035                     end_of_initialization:	
  1293                           ;End of C runtime variable initialization code
  1294                           
  1295  0035                     __end_of__initialization:
  1296  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1297  0036  0020               	movlb	0
  1298  0037  3180  2839         	ljmp	_main	;jump to C main() function
  1299                           
  1300                           	psect	bssCOMMON
  1301  007C                     __pbssCOMMON:
  1302  007C                     _timer0ReloadVal:
  1303  007C                     	ds	1
  1304                           
  1305                           	psect	bssBANK0
  1306  0059                     __pbssBANK0:
  1307  0059                     flashing@bdisp:
  1308  0059                     	ds	2
  1309  005B                     _point:
  1310  005B                     	ds	2
  1311  005D                     B_BTN_run@bflag:
  1312  005D                     	ds	1
  1313  005E                     R_BTN_run@rflag:
  1314  005E                     	ds	1
  1315  005F                     _shiftToL:
  1316  005F                     	ds	1
  1317  0060                     _great:
  1318  0060                     	ds	1
  1319  0061                     _brightflip:
  1320  0061                     	ds	1
  1321  0062                     _gameflag:
  1322  0062                     	ds	1
  1323  0063                     _inloop:
  1324  0063                     	ds	1
  1325  0064                     random_TMR0@now:
  1326  0064                     	ds	1
  1327  0065                     TMR0_DefaultInterruptHandler@isrTMR0count:
  1328  0065                     	ds	1
  1329  0066                     _TMR0flipper:
  1330  0066                     	ds	1
  1331  0067                     _seed:
  1332  0067                     	ds	4
  1333                           
  1334                           	psect	dataBANK0
  1335  006B                     __pdataBANK0:
  1336  006B                     _velocity:
  1337  006B                     	ds	2
  1338  006D                     _cursor:
  1339  006D                     	ds	2
  1340  006F                     _life:
  1341  006F                     	ds	1
  1342                           
  1343                           	psect	dataBANK1
  1344  00A2                     __pdataBANK1:
  1345  00A2                     _target:
  1346  00A2                     	ds	2
  1347                           
  1348                           	psect	clrtext
  1349  0FAF                     clear_ram0:	
  1350                           ;	Called with FSR0 containing the base address, and
  1351                           ;	WREG with the size to clear
  1352                           
  1353  0FAF  0064               	clrwdt	;clear the watchdog before getting into this loop
  1354  0FB0                     clrloop0:
  1355  0FB0  0180               	clrf	0	;clear RAM location pointed to by FSR
  1356  0FB1  3101               	addfsr 0,1
  1357  0FB2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1358  0FB3  2FB0               	goto	clrloop0	;have we reached the end yet?
  1359  0FB4  3400               	retlw	0	;all done for this memory range, return
  1360                           
  1361                           	psect	cstackCOMMON
  1362  0070                     __pcstackCOMMON:
  1363  0070                     ?_PIN_MANAGER_Initialize:
  1364  0070                     ?_OSCILLATOR_Initialize:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ?_WDT_Initialize:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ?_NCO1_Initialize:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ?_TMR0_Initialize:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ?_TMR0_DefaultInterruptHandler:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ??_TMR0_DefaultInterruptHandler:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ?_SYSTEM_Initialize:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ?_TMR0_ReadTimer:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_TMR0_ISR:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ?_noTone:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?_shiftL:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ?_shiftR:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ?_shiftInv:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ?_flashing:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ?_dispExact:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ?_start:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ?_collect:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ?_incollect:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ?_checkHit:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_result:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ?_main:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ?_INTERRUPT_InterruptManager:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430                           
  1431                           ; 1 bytes @ 0x0
  1432  0070                     	ds	1
  1433  0071                     ??_PIN_MANAGER_Initialize:
  1434  0071                     ??_OSCILLATOR_Initialize:	
  1435                           ; 1 bytes @ 0x1
  1436                           
  1437  0071                     ??_WDT_Initialize:	
  1438                           ; 1 bytes @ 0x1
  1439                           
  1440  0071                     ??_NCO1_Initialize:	
  1441                           ; 1 bytes @ 0x1
  1442                           
  1443  0071                     ?_TMR0_SetInterruptHandler:	
  1444                           ; 1 bytes @ 0x1
  1445                           
  1446  0071                     ??_TMR0_ReadTimer:	
  1447                           ; 1 bytes @ 0x1
  1448                           
  1449  0071                     ??_TMR0_ISR:	
  1450                           ; 1 bytes @ 0x1
  1451                           
  1452  0071                     ?_tone:	
  1453                           ; 1 bytes @ 0x1
  1454                           
  1455  0071                     ??_noTone:	
  1456                           ; 1 bytes @ 0x1
  1457                           
  1458  0071                     ??_shiftInv:	
  1459                           ; 1 bytes @ 0x1
  1460                           
  1461  0071                     ??_INTERRUPT_InterruptManager:	
  1462                           ; 1 bytes @ 0x1
  1463                           
  1464  0071                     ?___lbmod:	
  1465                           ; 1 bytes @ 0x1
  1466                           
  1467  0071                     ?___lwdiv:	
  1468                           ; 1 bytes @ 0x1
  1469                           
  1470  0071                     ?___lmul:	
  1471                           ; 2 bytes @ 0x1
  1472                           
  1473  0071                     ___lbmod@divisor:	
  1474                           ; 4 bytes @ 0x1
  1475                           
  1476  0071                     TMR0_SetInterruptHandler@InterruptHandler:	
  1477                           ; 1 bytes @ 0x1
  1478                           
  1479  0071                     tone@freq:	
  1480                           ; 2 bytes @ 0x1
  1481                           
  1482  0071                     ___lwdiv@divisor:	
  1483                           ; 2 bytes @ 0x1
  1484                           
  1485  0071                     ___lmul@multiplier:	
  1486                           ; 2 bytes @ 0x1
  1487                           
  1488                           
  1489                           ; 4 bytes @ 0x1
  1490  0071                     	ds	1
  1491  0072                     ??___lbmod:
  1492  0072                     TMR0_ReadTimer@readVal:	
  1493                           ; 1 bytes @ 0x2
  1494                           
  1495                           
  1496                           ; 1 bytes @ 0x2
  1497  0072                     	ds	1
  1498  0073                     ??_TMR0_Initialize:
  1499  0073                     ??_TMR0_SetInterruptHandler:	
  1500                           ; 1 bytes @ 0x3
  1501                           
  1502  0073                     ?_srand:	
  1503                           ; 1 bytes @ 0x3
  1504                           
  1505  0073                     ??_SYSTEM_Initialize:	
  1506                           ; 1 bytes @ 0x3
  1507                           
  1508  0073                     ??_tone:	
  1509                           ; 1 bytes @ 0x3
  1510                           
  1511  0073                     ___lwdiv@dividend:	
  1512                           ; 1 bytes @ 0x3
  1513                           
  1514  0073                     srand@s:	
  1515                           ; 2 bytes @ 0x3
  1516                           
  1517                           
  1518                           ; 2 bytes @ 0x3
  1519  0073                     	ds	1
  1520  0074                     ___lbmod@dividend:
  1521                           
  1522                           ; 1 bytes @ 0x4
  1523  0074                     	ds	1
  1524  0075                     ??_srand:
  1525  0075                     ??_shiftL:	
  1526                           ; 1 bytes @ 0x5
  1527                           
  1528  0075                     ??_shiftR:	
  1529                           ; 1 bytes @ 0x5
  1530                           
  1531  0075                     ??_start:	
  1532                           ; 1 bytes @ 0x5
  1533                           
  1534  0075                     ??_incollect:	
  1535                           ; 1 bytes @ 0x5
  1536                           
  1537  0075                     ??___lwdiv:	
  1538                           ; 1 bytes @ 0x5
  1539                           
  1540  0075                     ___lbmod@counter:	
  1541                           ; 1 bytes @ 0x5
  1542                           
  1543  0075                     ___lmul@multiplicand:	
  1544                           ; 1 bytes @ 0x5
  1545                           
  1546                           
  1547                           ; 4 bytes @ 0x5
  1548  0075                     	ds	1
  1549  0076                     ___lbmod@rem:
  1550  0076                     ___lwdiv@quotient:	
  1551                           ; 1 bytes @ 0x6
  1552                           
  1553                           
  1554                           ; 2 bytes @ 0x6
  1555  0076                     	ds	1
  1556  0077                     ?_R_BTN_run:
  1557  0077                     ?_B_BTN_run:	
  1558                           ; 1 bytes @ 0x7
  1559                           
  1560  0077                     incollect@i:	
  1561                           ; 1 bytes @ 0x7
  1562                           
  1563  0077                     R_BTN_run@ffptr:	
  1564                           ; 1 bytes @ 0x7
  1565                           
  1566  0077                     B_BTN_run@ffptr:	
  1567                           ; 2 bytes @ 0x7
  1568                           
  1569                           
  1570                           ; 2 bytes @ 0x7
  1571  0077                     	ds	1
  1572  0078                     ___lwdiv@counter:
  1573                           
  1574                           ; 1 bytes @ 0x8
  1575  0078                     	ds	1
  1576  0079                     ??_random_TMR0:
  1577  0079                     ??___lmul:	
  1578                           ; 1 bytes @ 0x9
  1579                           
  1580  0079                     R_BTN_run@lfptr:	
  1581                           ; 1 bytes @ 0x9
  1582                           
  1583  0079                     B_BTN_run@lfptr:	
  1584                           ; 2 bytes @ 0x9
  1585                           
  1586                           
  1587                           ; 2 bytes @ 0x9
  1588  0079                     	ds	2
  1589  007B                     random_TMR0@reSeed:
  1590                           
  1591                           ; 1 bytes @ 0xB
  1592  007B                     	ds	1
  1593                           
  1594                           	psect	cstackBANK0
  1595  0020                     __pcstackBANK0:
  1596  0020                     ??_R_BTN_run:
  1597  0020                     ??_B_BTN_run:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600  0020                     ___lmul@product:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603                           
  1604                           ; 4 bytes @ 0x0
  1605  0020                     	ds	4
  1606  0024                     ?_rand:
  1607                           
  1608                           ; 2 bytes @ 0x4
  1609  0024                     	ds	2
  1610  0026                     ??_rand:
  1611                           
  1612                           ; 1 bytes @ 0x6
  1613  0026                     	ds	4
  1614  002A                     ?_random_TMR0:
  1615                           
  1616                           ; 2 bytes @ 0xA
  1617  002A                     	ds	2
  1618  002C                     ?___lwmod:
  1619  002C                     ___lwmod@divisor:	
  1620                           ; 2 bytes @ 0xC
  1621                           
  1622                           
  1623                           ; 2 bytes @ 0xC
  1624  002C                     	ds	2
  1625  002E                     ___lwmod@dividend:
  1626                           
  1627                           ; 2 bytes @ 0xE
  1628  002E                     	ds	2
  1629  0030                     ??___lwmod:
  1630                           
  1631                           ; 1 bytes @ 0x10
  1632  0030                     	ds	1
  1633  0031                     ___lwmod@counter:
  1634                           
  1635                           ; 1 bytes @ 0x11
  1636  0031                     	ds	1
  1637  0032                     ?_flashLED:
  1638  0032                     flashLED@disp:	
  1639                           ; 1 bytes @ 0x12
  1640                           
  1641                           
  1642                           ; 2 bytes @ 0x12
  1643  0032                     	ds	2
  1644  0034                     flashLED@segs:
  1645                           
  1646                           ; 2 bytes @ 0x14
  1647  0034                     	ds	2
  1648  0036                     ??_flashLED:
  1649                           
  1650                           ; 1 bytes @ 0x16
  1651  0036                     	ds	1
  1652  0037                     flashLED@i:
  1653                           
  1654                           ; 1 bytes @ 0x17
  1655  0037                     	ds	1
  1656  0038                     ??_flashing:
  1657  0038                     ??_dispExact:	
  1658                           ; 1 bytes @ 0x18
  1659                           
  1660  0038                     ??_result:	
  1661                           ; 1 bytes @ 0x18
  1662                           
  1663                           
  1664                           ; 1 bytes @ 0x18
  1665  0038                     	ds	2
  1666  003A                     dispExact@i_316:
  1667                           
  1668                           ; 2 bytes @ 0x1A
  1669  003A                     	ds	2
  1670  003C                     dispExact@disp:
  1671                           
  1672                           ; 2 bytes @ 0x1C
  1673  003C                     	ds	2
  1674  003E                     dispExact@i:
  1675                           
  1676                           ; 1 bytes @ 0x1E
  1677  003E                     	ds	1
  1678  003F                     dispExact@m:
  1679                           
  1680                           ; 1 bytes @ 0x1F
  1681  003F                     	ds	1
  1682  0040                     dispExact@i_314:
  1683                           
  1684                           ; 1 bytes @ 0x20
  1685  0040                     	ds	1
  1686  0041                     dispExact@m_315:
  1687                           
  1688                           ; 1 bytes @ 0x21
  1689  0041                     	ds	6
  1690  0047                     flashing@nowdisp:
  1691                           
  1692                           ; 2 bytes @ 0x27
  1693  0047                     	ds	2
  1694  0049                     ??_collect:
  1695                           
  1696                           ; 1 bytes @ 0x29
  1697  0049                     	ds	1
  1698  004A                     collect@i:
  1699                           
  1700                           ; 1 bytes @ 0x2A
  1701  004A                     	ds	1
  1702  004B                     ??_checkHit:
  1703                           
  1704                           ; 1 bytes @ 0x2B
  1705  004B                     	ds	2
  1706  004D                     ??_main:
  1707                           
  1708                           ; 1 bytes @ 0x2D
  1709  004D                     	ds	2
  1710  004F                     main@i:
  1711                           
  1712                           ; 2 bytes @ 0x2F
  1713  004F                     	ds	2
  1714  0051                     main@i_342:
  1715                           
  1716                           ; 2 bytes @ 0x31
  1717  0051                     	ds	2
  1718  0053                     main@i_344:
  1719                           
  1720                           ; 2 bytes @ 0x33
  1721  0053                     	ds	2
  1722  0055                     main@i_345:
  1723                           
  1724                           ; 2 bytes @ 0x35
  1725  0055                     	ds	2
  1726  0057                     main@t:
  1727                           
  1728                           ; 2 bytes @ 0x37
  1729  0057                     	ds	2
  1730                           
  1731                           	psect	maintext
  1732  0039                     __pmaintext:	
  1733 ;;
  1734 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1735 ;;
  1736 ;; *************** function _main *****************
  1737 ;; Defined at:
  1738 ;;		line 312 in file "main.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  i               2   53[BANK0 ] unsigned short 
  1743 ;;  i               2   51[BANK0 ] unsigned short 
  1744 ;;  i               2   49[BANK0 ] unsigned short 
  1745 ;;  i               2   47[BANK0 ] unsigned short 
  1746 ;;  t               2   55[BANK0 ] unsigned short 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0, pclath, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : B1F/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1756 ;;      Params:         0       0       0       0       0       0       0       0
  1757 ;;      Locals:         0      10       0       0       0       0       0       0
  1758 ;;      Temps:          0       2       0       0       0       0       0       0
  1759 ;;      Totals:         0      12       0       0       0       0       0       0
  1760 ;;Total ram usage:       12 bytes
  1761 ;; Hardware stack levels required when called: 7
  1762 ;; This function calls:
  1763 ;;		_B_BTN_run
  1764 ;;		_R_BTN_run
  1765 ;;		_SYSTEM_Initialize
  1766 ;;		___lwmod
  1767 ;;		_checkHit
  1768 ;;		_dispExact
  1769 ;;		_flashLED
  1770 ;;		_flashing
  1771 ;;		_noTone
  1772 ;;		_random_TMR0
  1773 ;;		_result
  1774 ;;		_shiftL
  1775 ;;		_shiftR
  1776 ;;		_tone
  1777 ;; This function is called by:
  1778 ;;		Startup code after reset
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782  0039                     _main:	
  1783                           ;psect for function _main
  1784                           
  1785  0039                     l2058:	
  1786                           ;incstack = 0
  1787                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1788                           
  1789                           
  1790                           ;main.c: 314:     SYSTEM_Initialize();
  1791  0039  318F  27DF  3180   	fcall	_SYSTEM_Initialize
  1792                           
  1793                           ;main.c: 331:     tone(2000);
  1794  003C  30D0               	movlw	208
  1795  003D  00F1               	movwf	tone@freq
  1796  003E  3007               	movlw	7
  1797  003F  00F2               	movwf	tone@freq+1
  1798  0040  3187  27D6  3180   	fcall	_tone
  1799  0043                     l2060:
  1800                           
  1801                           ;main.c: 332:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1802  0043  3003               	movlw	3
  1803  0044  0020               	movlb	0	; select bank0
  1804  0045  00CE               	movwf	??_main+1
  1805  0046  3008               	movlw	8
  1806  0047  00CD               	movwf	??_main
  1807  0048  3077               	movlw	119
  1808  0049                     u1987:
  1809  0049  0B89               	decfsz	9,f
  1810  004A  2849               	goto	u1987
  1811  004B  0BCD               	decfsz	??_main,f
  1812  004C  2849               	goto	u1987
  1813  004D  0BCE               	decfsz	??_main+1,f
  1814  004E  2849               	goto	u1987
  1815  004F                     l2062:
  1816                           
  1817                           ;main.c: 333:     tone(1000);
  1818  004F  30E8               	movlw	232
  1819  0050  00F1               	movwf	tone@freq
  1820  0051  3003               	movlw	3
  1821  0052  00F2               	movwf	tone@freq+1
  1822  0053  3187  27D6  3180   	fcall	_tone
  1823                           
  1824                           ;main.c: 334:     _delay((unsigned long)((100)*(16000000/4000.0)));
  1825  0056  3003               	movlw	3
  1826  0057  0020               	movlb	0	; select bank0
  1827  0058  00CE               	movwf	??_main+1
  1828  0059  3008               	movlw	8
  1829  005A  00CD               	movwf	??_main
  1830  005B  3077               	movlw	119
  1831  005C                     u1997:
  1832  005C  0B89               	decfsz	9,f
  1833  005D  285C               	goto	u1997
  1834  005E  0BCD               	decfsz	??_main,f
  1835  005F  285C               	goto	u1997
  1836  0060  0BCE               	decfsz	??_main+1,f
  1837  0061  285C               	goto	u1997
  1838  0062                     l2064:
  1839                           
  1840                           ;main.c: 335:     noTone();
  1841  0062  3187  27FD  3180   	fcall	_noTone
  1842  0065                     l2066:
  1843                           
  1844                           ;main.c: 339:         target = 0;
  1845  0065  0021               	movlb	1	; select bank1
  1846  0066  01A2               	clrf	_target^(0+128)
  1847  0067  01A3               	clrf	(_target+1)^(0+128)
  1848  0068                     l2068:
  1849                           
  1850                           ;main.c: 340:         cursor = 0;
  1851  0068  0020               	movlb	0	; select bank0
  1852  0069  01ED               	clrf	_cursor
  1853  006A  01EE               	clrf	_cursor+1
  1854  006B                     l2070:
  1855                           
  1856                           ;main.c: 341:         velocity = 50;
  1857  006B  3032               	movlw	50
  1858  006C  00EB               	movwf	_velocity
  1859  006D  3000               	movlw	0
  1860  006E  00EC               	movwf	_velocity+1
  1861  006F                     l2072:
  1862                           
  1863                           ;main.c: 342:         life = 3;
  1864  006F  3003               	movlw	3
  1865  0070  00CD               	movwf	??_main
  1866  0071  084D               	movf	??_main,w
  1867  0072  00EF               	movwf	_life
  1868  0073                     l2074:
  1869                           
  1870                           ;main.c: 343:         point = 0;
  1871  0073  01DB               	clrf	_point
  1872  0074  01DC               	clrf	_point+1
  1873  0075                     l2076:
  1874                           
  1875                           ;main.c: 344:         great = 0;
  1876  0075  01E0               	clrf	_great
  1877  0076                     l2078:
  1878                           
  1879                           ;main.c: 345:         shiftToL = 0;
  1880  0076  01DF               	clrf	_shiftToL
  1881  0077                     l2080:
  1882                           
  1883                           ;main.c: 346:         flashLED(cursor, 15);
  1884  0077  086E               	movf	_cursor+1,w
  1885  0078  00B3               	movwf	flashLED@disp+1
  1886  0079  086D               	movf	_cursor,w
  1887  007A  00B2               	movwf	flashLED@disp
  1888  007B  300F               	movlw	15
  1889  007C  00B4               	movwf	flashLED@segs
  1890  007D  3000               	movlw	0
  1891  007E  00B5               	movwf	flashLED@segs+1
  1892  007F  3187  2715  3180   	fcall	_flashLED
  1893                           
  1894                           ;main.c: 349:         while (!gameflag) {
  1895  0082  28FB               	goto	l2094
  1896  0083                     l2082:
  1897                           
  1898                           ;main.c: 350:             R_BTN_run(start, ((void*)0));
  1899  0083  3089               	movlw	low _start
  1900  0084  00F7               	movwf	R_BTN_run@ffptr
  1901  0085  3004               	movlw	high _start
  1902  0086  00F8               	movwf	R_BTN_run@ffptr+1
  1903  0087  3000               	movlw	0
  1904  0088  00F9               	movwf	R_BTN_run@lfptr
  1905  0089  00FA               	movwf	R_BTN_run@lfptr+1
  1906  008A  3186  2694  3180   	fcall	_R_BTN_run
  1907                           
  1908                           ;main.c: 351:             B_BTN_run(start, ((void*)0));
  1909  008D  3089               	movlw	low _start
  1910  008E  00F7               	movwf	B_BTN_run@ffptr
  1911  008F  3004               	movlw	high _start
  1912  0090  00F8               	movwf	B_BTN_run@ffptr+1
  1913  0091  3000               	movlw	0
  1914  0092  00F9               	movwf	B_BTN_run@lfptr
  1915  0093  00FA               	movwf	B_BTN_run@lfptr+1
  1916  0094  3186  26C0  3180   	fcall	_B_BTN_run
  1917  0097                     l2084:
  1918                           
  1919                           ;main.c: 352:             if (cursor > 32767) {
  1920  0097  3080               	movlw	128
  1921  0098  0020               	movlb	0	; select bank0
  1922  0099  026E               	subwf	_cursor+1,w
  1923  009A  3000               	movlw	0
  1924  009B  1903               	skipnz
  1925  009C  026D               	subwf	_cursor,w
  1926  009D  1C03               	skipc
  1927  009E  28A0               	goto	u1841
  1928  009F  28A1               	goto	u1840
  1929  00A0                     u1841:
  1930  00A0  28AF               	goto	l2088
  1931  00A1                     u1840:
  1932  00A1                     l2086:
  1933                           
  1934                           ;main.c: 353:                 cursor >>= random_TMR0(32) % 16;
  1935  00A1  3020               	movlw	32
  1936  00A2  3186  26EC  3180   	fcall	_random_TMR0
  1937  00A5  0020               	movlb	0	; select bank0
  1938  00A6  082A               	movf	?_random_TMR0,w
  1939  00A7  390F               	andlw	15
  1940  00A8  0A89               	incf	9,f
  1941  00A9  28AC               	goto	u1850
  1942  00AA                     u1855:
  1943  00AA  36EE               	lsrf	_cursor+1,f
  1944  00AB  0CED               	rrf	_cursor,f
  1945  00AC                     u1850:
  1946  00AC  0B89               	decfsz	9,f
  1947  00AD  28AA               	goto	u1855
  1948                           
  1949                           ;main.c: 354:             } else {
  1950  00AE  28D1               	goto	l255
  1951  00AF                     l2088:
  1952                           
  1953                           ;main.c: 355:                 cursor += random_TMR0(32) % 27;
  1954  00AF  301B               	movlw	27
  1955  00B0  00AC               	movwf	___lwmod@divisor
  1956  00B1  3000               	movlw	0
  1957  00B2  00AD               	movwf	___lwmod@divisor+1
  1958  00B3  3020               	movlw	32
  1959  00B4  3186  26EC  3180   	fcall	_random_TMR0
  1960  00B7  0020               	movlb	0	; select bank0
  1961  00B8  082B               	movf	?_random_TMR0+1,w
  1962  00B9  00AF               	movwf	___lwmod@dividend+1
  1963  00BA  082A               	movf	?_random_TMR0,w
  1964  00BB  00AE               	movwf	___lwmod@dividend
  1965  00BC  3185  25F8  3180   	fcall	___lwmod
  1966  00BF  0020               	movlb	0	; select bank0
  1967  00C0  082C               	movf	?___lwmod,w
  1968  00C1  07ED               	addwf	_cursor,f
  1969  00C2  082D               	movf	?___lwmod+1,w
  1970  00C3  3DEE               	addwfc	_cursor+1,f
  1971                           
  1972                           ;main.c: 356:                 cursor <<= random_TMR0(32) % 2;
  1973  00C4  3020               	movlw	32
  1974  00C5  3186  26EC  3180   	fcall	_random_TMR0
  1975  00C8  0020               	movlb	0	; select bank0
  1976  00C9  082A               	movf	?_random_TMR0,w
  1977  00CA  3901               	andlw	1
  1978  00CB  0A89               	incf	9,f
  1979  00CC  28CF               	goto	u1860
  1980  00CD                     u1865:
  1981  00CD  35ED               	lslf	_cursor,f
  1982  00CE  0DEE               	rlf	_cursor+1,f
  1983  00CF                     u1860:
  1984  00CF  0B89               	decfsz	9,f
  1985  00D0  28CD               	goto	u1865
  1986  00D1                     l255:	
  1987                           ;main.c: 357:             }
  1988                           
  1989                           
  1990                           ;main.c: 358:             tone(cursor & 0xFFF);
  1991  00D1  30FF               	movlw	255
  1992  00D2  056D               	andwf	_cursor,w
  1993  00D3  00F1               	movwf	tone@freq
  1994  00D4  300F               	movlw	15
  1995  00D5  056E               	andwf	_cursor+1,w
  1996  00D6  00F2               	movwf	tone@freq+1
  1997  00D7  3187  27D6  3180   	fcall	_tone
  1998  00DA                     l2090:
  1999                           
  2000                           ;main.c: 359:             _delay((unsigned long)((25)*(16000000/4000.0)));
  2001  00DA  3082               	movlw	130
  2002  00DB  0020               	movlb	0	; select bank0
  2003  00DC  00CD               	movwf	??_main
  2004  00DD  30DD               	movlw	221
  2005  00DE                     u2007:
  2006  00DE  0B89               	decfsz	9,f
  2007  00DF  28DE               	goto	u2007
  2008  00E0  0BCD               	decfsz	??_main,f
  2009  00E1  28DE               	goto	u2007
  2010  00E2  3200               	nop2
  2011                           
  2012                           ;main.c: 360:             noTone();
  2013  00E3  3187  27FD  3180   	fcall	_noTone
  2014  00E6                     l2092:
  2015                           
  2016                           ;main.c: 361:             _delay((unsigned long)((25)*(16000000/4000.0)));
  2017  00E6  3082               	movlw	130
  2018  00E7  0020               	movlb	0	; select bank0
  2019  00E8  00CD               	movwf	??_main
  2020  00E9  30DD               	movlw	221
  2021  00EA                     u2017:
  2022  00EA  0B89               	decfsz	9,f
  2023  00EB  28EA               	goto	u2017
  2024  00EC  0BCD               	decfsz	??_main,f
  2025  00ED  28EA               	goto	u2017
  2026  00EE  3200               	nop2
  2027                           
  2028                           ;main.c: 362:             flashLED(cursor, 15);
  2029  00EF  0020               	movlb	0	; select bank0
  2030  00F0  086E               	movf	_cursor+1,w
  2031  00F1  00B3               	movwf	flashLED@disp+1
  2032  00F2  086D               	movf	_cursor,w
  2033  00F3  00B2               	movwf	flashLED@disp
  2034  00F4  300F               	movlw	15
  2035  00F5  00B4               	movwf	flashLED@segs
  2036  00F6  3000               	movlw	0
  2037  00F7  00B5               	movwf	flashLED@segs+1
  2038  00F8  3187  2715  3180   	fcall	_flashLED
  2039  00FB                     l2094:
  2040                           
  2041                           ;main.c: 349:         while (!gameflag) {
  2042  00FB  0020               	movlb	0	; select bank0
  2043  00FC  0862               	movf	_gameflag,w
  2044  00FD  1903               	btfsc	3,2
  2045  00FE  2900               	goto	u1871
  2046  00FF  2901               	goto	u1870
  2047  0100                     u1871:
  2048  0100  2883               	goto	l2082
  2049  0101                     u1870:
  2050  0101                     l2096:
  2051                           
  2052                           ;main.c: 364:         noTone();
  2053  0101  3187  27FD  3180   	fcall	_noTone
  2054  0104                     l2098:
  2055                           
  2056                           ;main.c: 367:         cursor = 0;
  2057  0104  0020               	movlb	0	; select bank0
  2058  0105  01ED               	clrf	_cursor
  2059  0106  01EE               	clrf	_cursor+1
  2060  0107                     l2100:
  2061                           
  2062                           ;main.c: 368:         dispExact();
  2063  0107  3181  21FC  3180   	fcall	_dispExact
  2064                           
  2065                           ;main.c: 370:         while (gameflag) {
  2066  010A  29F0               	goto	l2148
  2067  010B                     l2102:
  2068                           
  2069                           ;main.c: 371:             cursor = 0b1000000000;
  2070  010B  3000               	movlw	0
  2071  010C  00ED               	movwf	_cursor
  2072  010D  3002               	movlw	2
  2073  010E  00EE               	movwf	_cursor+1
  2074                           
  2075                           ;main.c: 372:             while (PORTCbits.RC0) {
  2076  010F  296C               	goto	l259
  2077  0110                     l2104:
  2078                           
  2079                           ;main.c: 373:                 B_BTN_run(shiftInv, ((void*)0));
  2080  0110  30C6               	movlw	low _shiftInv
  2081  0111  00F7               	movwf	B_BTN_run@ffptr
  2082  0112  300F               	movlw	high _shiftInv
  2083  0113  00F8               	movwf	B_BTN_run@ffptr+1
  2084  0114  3000               	movlw	0
  2085  0115  00F9               	movwf	B_BTN_run@lfptr
  2086  0116  00FA               	movwf	B_BTN_run@lfptr+1
  2087  0117  3186  26C0  3180   	fcall	_B_BTN_run
  2088  011A                     l2106:
  2089                           
  2090                           ;main.c: 374:                 if (shiftToL) {
  2091  011A  0020               	movlb	0	; select bank0
  2092  011B  085F               	movf	_shiftToL,w
  2093  011C  1903               	btfsc	3,2
  2094  011D  291F               	goto	u1881
  2095  011E  2920               	goto	u1880
  2096  011F                     u1881:
  2097  011F  2924               	goto	l2110
  2098  0120                     u1880:
  2099  0120                     l2108:
  2100                           
  2101                           ;main.c: 375:                     shiftL();
  2102  0120  3187  2782  3180   	fcall	_shiftL
  2103                           
  2104                           ;main.c: 376:                 } else {
  2105  0123  2927               	goto	l262
  2106  0124                     l2110:
  2107                           
  2108                           ;main.c: 377:                     shiftR();
  2109  0124  3187  2760  3180   	fcall	_shiftR
  2110  0127                     l262:	
  2111                           ;main.c: 378:                 }
  2112                           
  2113                           
  2114                           ;main.c: 379:                 flashing();
  2115  0127  3184  24E5  3180   	fcall	_flashing
  2116                           
  2117                           ;main.c: 380:                 tone(800);
  2118  012A  3020               	movlw	32
  2119  012B  00F1               	movwf	tone@freq
  2120  012C  3003               	movlw	3
  2121  012D  00F2               	movwf	tone@freq+1
  2122  012E  3187  27D6  3180   	fcall	_tone
  2123  0131                     l2112:
  2124                           
  2125                           ;main.c: 381:                 for (uint16_t i = 0; i < velocity; i++)_delay((unsigned lo
      +                          ng)((1)*(16000000/4000.0)));
  2126  0131  0020               	movlb	0	; select bank0
  2127  0132  01CF               	clrf	main@i
  2128  0133  01D0               	clrf	main@i+1
  2129  0134  2943               	goto	l263
  2130  0135                     l2114:
  2131  0135  3006               	movlw	6
  2132  0136  0020               	movlb	0	; select bank0
  2133  0137  00CD               	movwf	??_main
  2134  0138  3030               	movlw	48
  2135  0139                     u2027:
  2136  0139  0B89               	decfsz	9,f
  2137  013A  2939               	goto	u2027
  2138  013B  0BCD               	decfsz	??_main,f
  2139  013C  2939               	goto	u2027
  2140  013D  0000               	nop
  2141  013E  3001               	movlw	1
  2142  013F  0020               	movlb	0	; select bank0
  2143  0140  07CF               	addwf	main@i,f
  2144  0141  3000               	movlw	0
  2145  0142  3DD0               	addwfc	main@i+1,f
  2146  0143                     l263:
  2147  0143  086C               	movf	_velocity+1,w
  2148  0144  0250               	subwf	main@i+1,w
  2149  0145  1D03               	skipz
  2150  0146  2949               	goto	u1895
  2151  0147  086B               	movf	_velocity,w
  2152  0148  024F               	subwf	main@i,w
  2153  0149                     u1895:
  2154  0149  1C03               	skipc
  2155  014A  294C               	goto	u1891
  2156  014B  294D               	goto	u1890
  2157  014C                     u1891:
  2158  014C  2935               	goto	l2114
  2159  014D                     u1890:
  2160  014D                     l2116:
  2161                           
  2162                           ;main.c: 382:                 noTone();
  2163  014D  3187  27FD  3180   	fcall	_noTone
  2164  0150                     l2118:
  2165                           
  2166                           ;main.c: 383:                 for (uint16_t i = 0; i < velocity; i++)_delay((unsigned lo
      +                          ng)((1)*(16000000/4000.0)));
  2167  0150  0020               	movlb	0	; select bank0
  2168  0151  01D1               	clrf	main@i_342
  2169  0152  01D2               	clrf	main@i_342+1
  2170  0153  2962               	goto	l266
  2171  0154                     l2120:
  2172  0154  3006               	movlw	6
  2173  0155  0020               	movlb	0	; select bank0
  2174  0156  00CD               	movwf	??_main
  2175  0157  3030               	movlw	48
  2176  0158                     u2037:
  2177  0158  0B89               	decfsz	9,f
  2178  0159  2958               	goto	u2037
  2179  015A  0BCD               	decfsz	??_main,f
  2180  015B  2958               	goto	u2037
  2181  015C  0000               	nop
  2182  015D  3001               	movlw	1
  2183  015E  0020               	movlb	0	; select bank0
  2184  015F  07D1               	addwf	main@i_342,f
  2185  0160  3000               	movlw	0
  2186  0161  3DD2               	addwfc	main@i_342+1,f
  2187  0162                     l266:
  2188  0162  086C               	movf	_velocity+1,w
  2189  0163  0252               	subwf	main@i_342+1,w
  2190  0164  1D03               	skipz
  2191  0165  2968               	goto	u1905
  2192  0166  086B               	movf	_velocity,w
  2193  0167  0251               	subwf	main@i_342,w
  2194  0168                     u1905:
  2195  0168  1C03               	skipc
  2196  0169  296B               	goto	u1901
  2197  016A  296C               	goto	u1900
  2198  016B                     u1901:
  2199  016B  2954               	goto	l2120
  2200  016C                     u1900:
  2201  016C                     l259:	
  2202                           ;main.c: 384:             }
  2203                           
  2204                           
  2205                           ;main.c: 372:             while (PORTCbits.RC0) {
  2206  016C  180E               	btfsc	14,0	;volatile
  2207  016D  296F               	goto	u1911
  2208  016E  2970               	goto	u1910
  2209  016F                     u1911:
  2210  016F  2910               	goto	l2104
  2211  0170                     u1910:
  2212  0170                     l2122:
  2213                           
  2214                           ;main.c: 385:             for (uint16_t t = velocity; t <= 100; t += random_TMR0(8) % 15
      +                          ) {
  2215  0170  086C               	movf	_velocity+1,w
  2216  0171  00D8               	movwf	main@t+1
  2217  0172  086B               	movf	_velocity,w
  2218  0173  00D7               	movwf	main@t
  2219  0174  3000               	movlw	0
  2220  0175  0258               	subwf	main@t+1,w
  2221  0176  3065               	movlw	101
  2222  0177  1903               	skipnz
  2223  0178  0257               	subwf	main@t,w
  2224  0179  1C03               	skipc
  2225  017A  297C               	goto	u1921
  2226  017B  297D               	goto	u1920
  2227  017C                     u1921:
  2228  017C  297E               	goto	l2126
  2229  017D                     u1920:
  2230  017D  29ED               	goto	l2146
  2231  017E                     l2126:
  2232                           
  2233                           ;main.c: 386:                 if (shiftToL) {
  2234  017E  085F               	movf	_shiftToL,w
  2235  017F  1903               	btfsc	3,2
  2236  0180  2982               	goto	u1931
  2237  0181  2983               	goto	u1930
  2238  0182                     u1931:
  2239  0182  2987               	goto	l2130
  2240  0183                     u1930:
  2241  0183                     l2128:
  2242                           
  2243                           ;main.c: 387:                     shiftL();
  2244  0183  3187  2782  3180   	fcall	_shiftL
  2245                           
  2246                           ;main.c: 388:                 } else {
  2247  0186  298A               	goto	l273
  2248  0187                     l2130:
  2249                           
  2250                           ;main.c: 389:                     shiftR();
  2251  0187  3187  2760  3180   	fcall	_shiftR
  2252  018A                     l273:	
  2253                           ;main.c: 390:                 }
  2254                           
  2255                           
  2256                           ;main.c: 391:                 flashing();
  2257  018A  3184  24E5  3180   	fcall	_flashing
  2258                           
  2259                           ;main.c: 392:                 tone(800);
  2260  018D  3020               	movlw	32
  2261  018E  00F1               	movwf	tone@freq
  2262  018F  3003               	movlw	3
  2263  0190  00F2               	movwf	tone@freq+1
  2264  0191  3187  27D6  3180   	fcall	_tone
  2265  0194                     l2132:
  2266                           
  2267                           ;main.c: 393:                 for (uint16_t i = 0; i < t; i++) _delay((unsigned long)((1
      +                          )*(16000000/4000.0)));
  2268  0194  0020               	movlb	0	; select bank0
  2269  0195  01D3               	clrf	main@i_344
  2270  0196  01D4               	clrf	main@i_344+1
  2271  0197  29A6               	goto	l274
  2272  0198                     l2134:
  2273  0198  3006               	movlw	6
  2274  0199  0020               	movlb	0	; select bank0
  2275  019A  00CD               	movwf	??_main
  2276  019B  3030               	movlw	48
  2277  019C                     u2047:
  2278  019C  0B89               	decfsz	9,f
  2279  019D  299C               	goto	u2047
  2280  019E  0BCD               	decfsz	??_main,f
  2281  019F  299C               	goto	u2047
  2282  01A0  0000               	nop
  2283  01A1  3001               	movlw	1
  2284  01A2  0020               	movlb	0	; select bank0
  2285  01A3  07D3               	addwf	main@i_344,f
  2286  01A4  3000               	movlw	0
  2287  01A5  3DD4               	addwfc	main@i_344+1,f
  2288  01A6                     l274:
  2289  01A6  0858               	movf	main@t+1,w
  2290  01A7  0254               	subwf	main@i_344+1,w
  2291  01A8  1D03               	skipz
  2292  01A9  29AC               	goto	u1945
  2293  01AA  0857               	movf	main@t,w
  2294  01AB  0253               	subwf	main@i_344,w
  2295  01AC                     u1945:
  2296  01AC  1C03               	skipc
  2297  01AD  29AF               	goto	u1941
  2298  01AE  29B0               	goto	u1940
  2299  01AF                     u1941:
  2300  01AF  2998               	goto	l2134
  2301  01B0                     u1940:
  2302  01B0                     l2136:
  2303                           
  2304                           ;main.c: 394:                 noTone();
  2305  01B0  3187  27FD  3180   	fcall	_noTone
  2306  01B3                     l2138:
  2307                           
  2308                           ;main.c: 395:                 for (uint16_t i = 0; i < t; i++) _delay((unsigned long)((1
      +                          )*(16000000/4000.0)));
  2309  01B3  0020               	movlb	0	; select bank0
  2310  01B4  01D5               	clrf	main@i_345
  2311  01B5  01D6               	clrf	main@i_345+1
  2312  01B6  29C5               	goto	l277
  2313  01B7                     l2140:
  2314  01B7  3006               	movlw	6
  2315  01B8  0020               	movlb	0	; select bank0
  2316  01B9  00CD               	movwf	??_main
  2317  01BA  3030               	movlw	48
  2318  01BB                     u2057:
  2319  01BB  0B89               	decfsz	9,f
  2320  01BC  29BB               	goto	u2057
  2321  01BD  0BCD               	decfsz	??_main,f
  2322  01BE  29BB               	goto	u2057
  2323  01BF  0000               	nop
  2324  01C0  3001               	movlw	1
  2325  01C1  0020               	movlb	0	; select bank0
  2326  01C2  07D5               	addwf	main@i_345,f
  2327  01C3  3000               	movlw	0
  2328  01C4  3DD6               	addwfc	main@i_345+1,f
  2329  01C5                     l277:
  2330  01C5  0858               	movf	main@t+1,w
  2331  01C6  0256               	subwf	main@i_345+1,w
  2332  01C7  1D03               	skipz
  2333  01C8  29CB               	goto	u1955
  2334  01C9  0857               	movf	main@t,w
  2335  01CA  0255               	subwf	main@i_345,w
  2336  01CB                     u1955:
  2337  01CB  1C03               	skipc
  2338  01CC  29CE               	goto	u1951
  2339  01CD  29CF               	goto	u1950
  2340  01CE                     u1951:
  2341  01CE  29B7               	goto	l2140
  2342  01CF                     u1950:
  2343  01CF                     l2142:
  2344                           
  2345                           ;main.c: 396:             }
  2346  01CF  300F               	movlw	15
  2347  01D0  00AC               	movwf	___lwmod@divisor
  2348  01D1  3000               	movlw	0
  2349  01D2  00AD               	movwf	___lwmod@divisor+1
  2350  01D3  3008               	movlw	8
  2351  01D4  3186  26EC  3180   	fcall	_random_TMR0
  2352  01D7  0020               	movlb	0	; select bank0
  2353  01D8  082B               	movf	?_random_TMR0+1,w
  2354  01D9  00AF               	movwf	___lwmod@dividend+1
  2355  01DA  082A               	movf	?_random_TMR0,w
  2356  01DB  00AE               	movwf	___lwmod@dividend
  2357  01DC  3185  25F8  3180   	fcall	___lwmod
  2358  01DF  0020               	movlb	0	; select bank0
  2359  01E0  082C               	movf	?___lwmod,w
  2360  01E1  07D7               	addwf	main@t,f
  2361  01E2  082D               	movf	?___lwmod+1,w
  2362  01E3  3DD8               	addwfc	main@t+1,f
  2363  01E4                     l2144:
  2364  01E4  3000               	movlw	0
  2365  01E5  0258               	subwf	main@t+1,w
  2366  01E6  3065               	movlw	101
  2367  01E7  1903               	skipnz
  2368  01E8  0257               	subwf	main@t,w
  2369  01E9  1C03               	skipc
  2370  01EA  29EC               	goto	u1961
  2371  01EB  29ED               	goto	u1960
  2372  01EC                     u1961:
  2373  01EC  297E               	goto	l2126
  2374  01ED                     u1960:
  2375  01ED                     l2146:
  2376                           
  2377                           ;main.c: 397:             checkHit();
  2378  01ED  3185  253A  3180   	fcall	_checkHit
  2379  01F0                     l2148:
  2380                           
  2381                           ;main.c: 370:         while (gameflag) {
  2382  01F0  0020               	movlb	0	; select bank0
  2383  01F1  0862               	movf	_gameflag,w
  2384  01F2  1D03               	btfss	3,2
  2385  01F3  29F5               	goto	u1971
  2386  01F4  29F6               	goto	u1970
  2387  01F5                     u1971:
  2388  01F5  290B               	goto	l2102
  2389  01F6                     u1970:
  2390  01F6                     l2150:
  2391                           
  2392                           ;main.c: 399:         result();
  2393  01F6  3183  2315  3180   	fcall	_result
  2394  01F9  2865               	goto	l2066
  2395  01FA  3180  2813         	ljmp	start
  2396  01FC                     __end_of_main:
  2397                           
  2398                           	psect	text1
  2399  0760                     __ptext1:	
  2400 ;; *************** function _shiftR *****************
  2401 ;; Defined at:
  2402 ;;		line 116 in file "main.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0, pclath, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2416 ;;      Params:         0       0       0       0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; Hardware stack levels required when called: 4
  2423 ;; This function calls:
  2424 ;;		_tone
  2425 ;; This function is called by:
  2426 ;;		_main
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430  0760                     _shiftR:	
  2431                           ;psect for function _shiftR
  2432                           
  2433  0760                     l1728:	
  2434                           ;incstack = 0
  2435                           ; Regs used in _shiftR: [wreg+status,2+status,0+pclath+cstack]
  2436                           
  2437                           
  2438                           ;main.c: 117:     if (cursor & 0b1) cursor = cursor | 0b100000000000;
  2439  0760  0020               	movlb	0	; select bank0
  2440  0761  1C6D               	btfss	_cursor,0
  2441  0762  2F64               	goto	u1371
  2442  0763  2F65               	goto	u1370
  2443  0764                     u1371:
  2444  0764  2F6B               	goto	l200
  2445  0765                     u1370:
  2446  0765                     l1730:
  2447  0765  3000               	movlw	0
  2448  0766  046D               	iorwf	_cursor,w
  2449  0767  00ED               	movwf	_cursor
  2450  0768  3008               	movlw	8
  2451  0769  046E               	iorwf	_cursor+1,w
  2452  076A  00EE               	movwf	_cursor+1
  2453  076B                     l200:
  2454                           
  2455                           ;main.c: 118:     cursor <<= 1;
  2456  076B  3001               	movlw	1
  2457  076C                     u1385:
  2458  076C  35ED               	lslf	_cursor,f
  2459  076D  0DEE               	rlf	_cursor+1,f
  2460  076E  0B89               	decfsz	9,f
  2461  076F  2F6C               	goto	u1385
  2462  0770                     l1732:
  2463                           
  2464                           ;main.c: 119:     if (cursor & 0b10000000000) cursor = cursor | 0b1;
  2465  0770  1D6E               	btfss	_cursor+1,2
  2466  0771  2F73               	goto	u1391
  2467  0772  2F74               	goto	u1390
  2468  0773                     u1391:
  2469  0773  2F7A               	goto	l1736
  2470  0774                     u1390:
  2471  0774                     l1734:
  2472  0774  3001               	movlw	1
  2473  0775  046D               	iorwf	_cursor,w
  2474  0776  00ED               	movwf	_cursor
  2475  0777  3000               	movlw	0
  2476  0778  046E               	iorwf	_cursor+1,w
  2477  0779  00EE               	movwf	_cursor+1
  2478  077A                     l1736:
  2479                           
  2480                           ;main.c: 120:     tone(800);
  2481  077A  3020               	movlw	32
  2482  077B  00F1               	movwf	tone@freq
  2483  077C  3003               	movlw	3
  2484  077D  00F2               	movwf	tone@freq+1
  2485  077E  3187  27D6  3187   	fcall	_tone
  2486  0781                     l202:
  2487  0781  0008               	return
  2488  0782                     __end_of_shiftR:
  2489                           
  2490                           	psect	text2
  2491  0782                     __ptext2:	
  2492 ;; *************** function _shiftL *****************
  2493 ;; Defined at:
  2494 ;;		line 108 in file "main.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2508 ;;      Params:         0       0       0       0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0
  2511 ;;      Totals:         0       0       0       0       0       0       0       0
  2512 ;;Total ram usage:        0 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 4
  2515 ;; This function calls:
  2516 ;;		_tone
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522  0782                     _shiftL:	
  2523                           ;psect for function _shiftL
  2524                           
  2525  0782                     l1714:	
  2526                           ;incstack = 0
  2527                           ; Regs used in _shiftL: [wreg+status,2+status,0+pclath+cstack]
  2528                           
  2529                           
  2530                           ;main.c: 109:     if (cursor & 0b1) cursor = cursor | 0b10000000000;
  2531  0782  0020               	movlb	0	; select bank0
  2532  0783  1C6D               	btfss	_cursor,0
  2533  0784  2F86               	goto	u1341
  2534  0785  2F87               	goto	u1340
  2535  0786                     u1341:
  2536  0786  2F8D               	goto	l1718
  2537  0787                     u1340:
  2538  0787                     l1716:
  2539  0787  3000               	movlw	0
  2540  0788  046D               	iorwf	_cursor,w
  2541  0789  00ED               	movwf	_cursor
  2542  078A  3004               	movlw	4
  2543  078B  046E               	iorwf	_cursor+1,w
  2544  078C  00EE               	movwf	_cursor+1
  2545  078D                     l1718:
  2546                           
  2547                           ;main.c: 110:     cursor >>= 1;
  2548  078D  3001               	movlw	1
  2549  078E                     u1355:
  2550  078E  36EE               	lsrf	_cursor+1,f
  2551  078F  0CED               	rrf	_cursor,f
  2552  0790  0B89               	decfsz	9,f
  2553  0791  2F8E               	goto	u1355
  2554  0792                     l1720:
  2555                           
  2556                           ;main.c: 111:     if (cursor & 0b10000000000) cursor = cursor | 0b1;
  2557  0792  1D6E               	btfss	_cursor+1,2
  2558  0793  2F95               	goto	u1361
  2559  0794  2F96               	goto	u1360
  2560  0795                     u1361:
  2561  0795  2F9C               	goto	l1724
  2562  0796                     u1360:
  2563  0796                     l1722:
  2564  0796  3001               	movlw	1
  2565  0797  046D               	iorwf	_cursor,w
  2566  0798  00ED               	movwf	_cursor
  2567  0799  3000               	movlw	0
  2568  079A  046E               	iorwf	_cursor+1,w
  2569  079B  00EE               	movwf	_cursor+1
  2570  079C                     l1724:
  2571                           
  2572                           ;main.c: 112:     tone(800);
  2573  079C  3020               	movlw	32
  2574  079D  00F1               	movwf	tone@freq
  2575  079E  3003               	movlw	3
  2576  079F  00F2               	movwf	tone@freq+1
  2577  07A0  3187  27D6  3187   	fcall	_tone
  2578  07A3                     l197:
  2579  07A3  0008               	return
  2580  07A4                     __end_of_shiftL:
  2581                           
  2582                           	psect	text3
  2583  0315                     __ptext3:	
  2584 ;; *************** function _result *****************
  2585 ;; Defined at:
  2586 ;;		line 251 in file "main.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0, pclath, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2600 ;;      Params:         0       0       0       0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0       0       0       0
  2602 ;;      Temps:          0       5       0       0       0       0       0       0
  2603 ;;      Totals:         0       5       0       0       0       0       0       0
  2604 ;;Total ram usage:        5 bytes
  2605 ;; Hardware stack levels used: 1
  2606 ;; Hardware stack levels required when called: 4
  2607 ;; This function calls:
  2608 ;;		___lwdiv
  2609 ;;		___lwmod
  2610 ;;		_flashLED
  2611 ;;		_noTone
  2612 ;;		_tone
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618  0315                     _result:	
  2619                           ;psect for function _result
  2620                           
  2621  0315                     l1840:	
  2622                           ;incstack = 0
  2623                           ; Regs used in _result: [wreg+status,2+status,0+pclath+cstack]
  2624                           
  2625                           
  2626                           ;main.c: 252:     flashLED((0b1111111111000 >> (15 - (point / 10) % 10) & 0b111111111100
      +                          000), 15);
  2627  0315  300A               	movlw	10
  2628  0316  0020               	movlb	0	; select bank0
  2629  0317  00AC               	movwf	___lwmod@divisor
  2630  0318  3000               	movlw	0
  2631  0319  00AD               	movwf	___lwmod@divisor+1
  2632  031A  300A               	movlw	10
  2633  031B  00F1               	movwf	___lwdiv@divisor
  2634  031C  3000               	movlw	0
  2635  031D  00F2               	movwf	___lwdiv@divisor+1
  2636  031E  085C               	movf	_point+1,w
  2637  031F  00F4               	movwf	___lwdiv@dividend+1
  2638  0320  085B               	movf	_point,w
  2639  0321  00F3               	movwf	___lwdiv@dividend
  2640  0322  3185  2586  3183   	fcall	___lwdiv
  2641  0325  0872               	movf	?___lwdiv+1,w
  2642  0326  0020               	movlb	0	; select bank0
  2643  0327  00AF               	movwf	___lwmod@dividend+1
  2644  0328  0871               	movf	?___lwdiv,w
  2645  0329  00AE               	movwf	___lwmod@dividend
  2646  032A  3185  25F8  3183   	fcall	___lwmod
  2647  032D  0020               	movlb	0	; select bank0
  2648  032E  082C               	movf	?___lwmod,w
  2649  032F  00B8               	movwf	??_result
  2650  0330  082D               	movf	?___lwmod+1,w
  2651  0331  00B9               	movwf	??_result+1
  2652  0332  300F               	movlw	15
  2653  0333  00BA               	movwf	??_result+2
  2654  0334  0838               	movf	??_result,w
  2655  0335  02BA               	subwf	??_result+2,f
  2656  0336  0ABA               	incf	??_result+2,f
  2657  0337  30F8               	movlw	248
  2658  0338  00BB               	movwf	??_result+3
  2659  0339  301F               	movlw	31
  2660  033A  00BC               	movwf	??_result+4
  2661  033B  2B3F               	goto	u1504
  2662  033C                     u1505:
  2663  033C  0D3C               	rlf	??_result+4,w
  2664  033D  0CBC               	rrf	??_result+4,f
  2665  033E  0CBB               	rrf	??_result+3,f
  2666  033F                     u1504:
  2667  033F  0BBA               	decfsz	??_result+2,f
  2668  0340  2B3C               	goto	u1505
  2669  0341  30E0               	movlw	224
  2670  0342  0020               	movlb	0	; select bank0
  2671  0343  053B               	andwf	??_result+3,w
  2672  0344  00B2               	movwf	flashLED@disp
  2673  0345  307F               	movlw	127
  2674  0346  053C               	andwf	??_result+4,w
  2675  0347  00B3               	movwf	flashLED@disp+1
  2676  0348  300F               	movlw	15
  2677  0349  00B4               	movwf	flashLED@segs
  2678  034A  3000               	movlw	0
  2679  034B  00B5               	movwf	flashLED@segs+1
  2680  034C  3187  2715  3183   	fcall	_flashLED
  2681                           
  2682                           ;main.c: 287:     tone(523);
  2683  034F  300B               	movlw	11
  2684  0350  00F1               	movwf	tone@freq
  2685  0351  3002               	movlw	2
  2686  0352  00F2               	movwf	tone@freq+1
  2687  0353  3187  27D6  3183   	fcall	_tone
  2688  0356                     l1842:
  2689                           
  2690                           ;main.c: 288:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  2691  0356  3015               	movlw	21
  2692  0357  0020               	movlb	0	; select bank0
  2693  0358  00B9               	movwf	??_result+1
  2694  0359  304B               	movlw	75
  2695  035A  00B8               	movwf	??_result
  2696  035B  30BE               	movlw	190
  2697  035C                     u2067:
  2698  035C  0B89               	decfsz	9,f
  2699  035D  2B5C               	goto	u2067
  2700  035E  0BB8               	decfsz	??_result,f
  2701  035F  2B5C               	goto	u2067
  2702  0360  0BB9               	decfsz	??_result+1,f
  2703  0361  2B5C               	goto	u2067
  2704  0362  0000               	nop
  2705  0363                     l1844:
  2706                           
  2707                           ;main.c: 289:     tone(698);
  2708  0363  30BA               	movlw	186
  2709  0364  00F1               	movwf	tone@freq
  2710  0365  3002               	movlw	2
  2711  0366  00F2               	movwf	tone@freq+1
  2712  0367  3187  27D6  3183   	fcall	_tone
  2713                           
  2714                           ;main.c: 290:     _delay((unsigned long)((1500)*(16000000/4000.0)));
  2715  036A  301F               	movlw	31
  2716  036B  0020               	movlb	0	; select bank0
  2717  036C  00B9               	movwf	??_result+1
  2718  036D  3071               	movlw	113
  2719  036E  00B8               	movwf	??_result
  2720  036F  301E               	movlw	30
  2721  0370                     u2077:
  2722  0370  0B89               	decfsz	9,f
  2723  0371  2B70               	goto	u2077
  2724  0372  0BB8               	decfsz	??_result,f
  2725  0373  2B70               	goto	u2077
  2726  0374  0BB9               	decfsz	??_result+1,f
  2727  0375  2B70               	goto	u2077
  2728  0376  0000               	nop
  2729  0377                     l1846:
  2730                           
  2731                           ;main.c: 291:     tone(523);
  2732  0377  300B               	movlw	11
  2733  0378  00F1               	movwf	tone@freq
  2734  0379  3002               	movlw	2
  2735  037A  00F2               	movwf	tone@freq+1
  2736  037B  3187  27D6  3183   	fcall	_tone
  2737  037E                     l1848:
  2738                           
  2739                           ;main.c: 292:     _delay((unsigned long)((500)*(16000000/4000.0)));
  2740  037E  300B               	movlw	11
  2741  037F  0020               	movlb	0	; select bank0
  2742  0380  00B9               	movwf	??_result+1
  2743  0381  3026               	movlw	38
  2744  0382  00B8               	movwf	??_result
  2745  0383  305D               	movlw	93
  2746  0384                     u2087:
  2747  0384  0B89               	decfsz	9,f
  2748  0385  2B84               	goto	u2087
  2749  0386  0BB8               	decfsz	??_result,f
  2750  0387  2B84               	goto	u2087
  2751  0388  0BB9               	decfsz	??_result+1,f
  2752  0389  2B84               	goto	u2087
  2753  038A  3200               	nop2
  2754                           
  2755                           ;main.c: 293:     tone(698);
  2756  038B  30BA               	movlw	186
  2757  038C  00F1               	movwf	tone@freq
  2758  038D  3002               	movlw	2
  2759  038E  00F2               	movwf	tone@freq+1
  2760  038F  3187  27D6  3183   	fcall	_tone
  2761  0392                     l1850:
  2762                           
  2763                           ;main.c: 294:     _delay((unsigned long)((500)*(16000000/4000.0)));
  2764  0392  300B               	movlw	11
  2765  0393  0020               	movlb	0	; select bank0
  2766  0394  00B9               	movwf	??_result+1
  2767  0395  3026               	movlw	38
  2768  0396  00B8               	movwf	??_result
  2769  0397  305D               	movlw	93
  2770  0398                     u2097:
  2771  0398  0B89               	decfsz	9,f
  2772  0399  2B98               	goto	u2097
  2773  039A  0BB8               	decfsz	??_result,f
  2774  039B  2B98               	goto	u2097
  2775  039C  0BB9               	decfsz	??_result+1,f
  2776  039D  2B98               	goto	u2097
  2777  039E  3200               	nop2
  2778  039F                     l1852:
  2779                           
  2780                           ;main.c: 295:     tone(784);
  2781  039F  3010               	movlw	16
  2782  03A0  00F1               	movwf	tone@freq
  2783  03A1  3003               	movlw	3
  2784  03A2  00F2               	movwf	tone@freq+1
  2785  03A3  3187  27D6  3183   	fcall	_tone
  2786                           
  2787                           ;main.c: 296:     _delay((unsigned long)((500)*(16000000/4000.0)));
  2788  03A6  300B               	movlw	11
  2789  03A7  0020               	movlb	0	; select bank0
  2790  03A8  00B9               	movwf	??_result+1
  2791  03A9  3026               	movlw	38
  2792  03AA  00B8               	movwf	??_result
  2793  03AB  305D               	movlw	93
  2794  03AC                     u2107:
  2795  03AC  0B89               	decfsz	9,f
  2796  03AD  2BAC               	goto	u2107
  2797  03AE  0BB8               	decfsz	??_result,f
  2798  03AF  2BAC               	goto	u2107
  2799  03B0  0BB9               	decfsz	??_result+1,f
  2800  03B1  2BAC               	goto	u2107
  2801  03B2  3200               	nop2
  2802  03B3                     l1854:
  2803                           
  2804                           ;main.c: 297:     tone(831);
  2805  03B3  303F               	movlw	63
  2806  03B4  00F1               	movwf	tone@freq
  2807  03B5  3003               	movlw	3
  2808  03B6  00F2               	movwf	tone@freq+1
  2809  03B7  3187  27D6  3183   	fcall	_tone
  2810  03BA                     l1856:
  2811                           
  2812                           ;main.c: 298:     _delay((unsigned long)((500)*(16000000/4000.0)));
  2813  03BA  300B               	movlw	11
  2814  03BB  0020               	movlb	0	; select bank0
  2815  03BC  00B9               	movwf	??_result+1
  2816  03BD  3026               	movlw	38
  2817  03BE  00B8               	movwf	??_result
  2818  03BF  305D               	movlw	93
  2819  03C0                     u2117:
  2820  03C0  0B89               	decfsz	9,f
  2821  03C1  2BC0               	goto	u2117
  2822  03C2  0BB8               	decfsz	??_result,f
  2823  03C3  2BC0               	goto	u2117
  2824  03C4  0BB9               	decfsz	??_result+1,f
  2825  03C5  2BC0               	goto	u2117
  2826  03C6  3200               	nop2
  2827  03C7                     l1858:
  2828                           
  2829                           ;main.c: 299:     noTone();
  2830  03C7  3187  27FD  3183   	fcall	_noTone
  2831                           
  2832                           ;main.c: 300:     _delay((unsigned long)((200)*(16000000/4000.0)));
  2833  03CA  3005               	movlw	5
  2834  03CB  0020               	movlb	0	; select bank0
  2835  03CC  00B9               	movwf	??_result+1
  2836  03CD  300F               	movlw	15
  2837  03CE  00B8               	movwf	??_result
  2838  03CF  30F1               	movlw	241
  2839  03D0                     u2127:
  2840  03D0  0B89               	decfsz	9,f
  2841  03D1  2BD0               	goto	u2127
  2842  03D2  0BB8               	decfsz	??_result,f
  2843  03D3  2BD0               	goto	u2127
  2844  03D4  0BB9               	decfsz	??_result+1,f
  2845  03D5  2BD0               	goto	u2127
  2846  03D6                     l1860:
  2847                           
  2848                           ;main.c: 301:     tone(698);
  2849  03D6  30BA               	movlw	186
  2850  03D7  00F1               	movwf	tone@freq
  2851  03D8  3002               	movlw	2
  2852  03D9  00F2               	movwf	tone@freq+1
  2853  03DA  3187  27D6  3183   	fcall	_tone
  2854  03DD                     l1862:
  2855                           
  2856                           ;main.c: 302:     _delay((unsigned long)((200)*(16000000/4000.0)));
  2857  03DD  3005               	movlw	5
  2858  03DE  0020               	movlb	0	; select bank0
  2859  03DF  00B9               	movwf	??_result+1
  2860  03E0  300F               	movlw	15
  2861  03E1  00B8               	movwf	??_result
  2862  03E2  30F1               	movlw	241
  2863  03E3                     u2137:
  2864  03E3  0B89               	decfsz	9,f
  2865  03E4  2BE3               	goto	u2137
  2866  03E5  0BB8               	decfsz	??_result,f
  2867  03E6  2BE3               	goto	u2137
  2868  03E7  0BB9               	decfsz	??_result+1,f
  2869  03E8  2BE3               	goto	u2137
  2870                           
  2871                           ;main.c: 303:     tone(784);
  2872  03E9  3010               	movlw	16
  2873  03EA  00F1               	movwf	tone@freq
  2874  03EB  3003               	movlw	3
  2875  03EC  00F2               	movwf	tone@freq+1
  2876  03ED  3187  27D6  3183   	fcall	_tone
  2877  03F0                     l1864:
  2878                           
  2879                           ;main.c: 304:     _delay((unsigned long)((2000)*(16000000/4000.0)));
  2880  03F0  3029               	movlw	41
  2881  03F1  0020               	movlb	0	; select bank0
  2882  03F2  00B9               	movwf	??_result+1
  2883  03F3  3096               	movlw	150
  2884  03F4  00B8               	movwf	??_result
  2885  03F5  307F               	movlw	127
  2886  03F6                     u2147:
  2887  03F6  0B89               	decfsz	9,f
  2888  03F7  2BF6               	goto	u2147
  2889  03F8  0BB8               	decfsz	??_result,f
  2890  03F9  2BF6               	goto	u2147
  2891  03FA  0BB9               	decfsz	??_result+1,f
  2892  03FB  2BF6               	goto	u2147
  2893                           
  2894                           ;main.c: 306:     noTone();
  2895  03FC  3187  27FD  3183   	fcall	_noTone
  2896  03FF                     l1866:
  2897                           
  2898                           ;main.c: 307:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  2899  03FF  3015               	movlw	21
  2900  0400  0020               	movlb	0	; select bank0
  2901  0401  00B9               	movwf	??_result+1
  2902  0402  304B               	movlw	75
  2903  0403  00B8               	movwf	??_result
  2904  0404  30BE               	movlw	190
  2905  0405                     u2157:
  2906  0405  0B89               	decfsz	9,f
  2907  0406  2C05               	goto	u2157
  2908  0407  0BB8               	decfsz	??_result,f
  2909  0408  2C05               	goto	u2157
  2910  0409  0BB9               	decfsz	??_result+1,f
  2911  040A  2C05               	goto	u2157
  2912  040B  0000               	nop
  2913  040C                     l1868:
  2914                           
  2915                           ;main.c: 308:     point = 0;
  2916  040C  0020               	movlb	0	; select bank0
  2917  040D  01DB               	clrf	_point
  2918  040E  01DC               	clrf	_point+1
  2919  040F                     l246:
  2920  040F  0008               	return
  2921  0410                     __end_of_result:
  2922                           
  2923                           	psect	text4
  2924  05F8                     __ptext4:	
  2925 ;; *************** function ___lwmod *****************
  2926 ;; Defined at:
  2927 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lwmod.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  divisor         2   12[BANK0 ] unsigned int 
  2930 ;;  dividend        2   14[BANK0 ] unsigned int 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  counter         1   17[BANK0 ] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  2   12[BANK0 ] unsigned int 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2942 ;;      Params:         0       4       0       0       0       0       0       0
  2943 ;;      Locals:         0       1       0       0       0       0       0       0
  2944 ;;      Temps:          0       1       0       0       0       0       0       0
  2945 ;;      Totals:         0       6       0       0       0       0       0       0
  2946 ;;Total ram usage:        6 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; Hardware stack levels required when called: 3
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_result
  2953 ;;		_main
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957  05F8                     ___lwmod:	
  2958                           ;psect for function ___lwmod
  2959                           
  2960  05F8                     l1638:	
  2961                           ;incstack = 0
  2962                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2963                           
  2964  05F8  0020               	movlb	0	; select bank0
  2965  05F9  082C               	movf	___lwmod@divisor,w
  2966  05FA  042D               	iorwf	___lwmod@divisor+1,w
  2967  05FB  1903               	btfsc	3,2
  2968  05FC  2DFE               	goto	u1181
  2969  05FD  2DFF               	goto	u1180
  2970  05FE                     u1181:
  2971  05FE  2E28               	goto	l1656
  2972  05FF                     u1180:
  2973  05FF                     l1640:
  2974  05FF  01B1               	clrf	___lwmod@counter
  2975  0600  0AB1               	incf	___lwmod@counter,f
  2976  0601  2E0B               	goto	l1646
  2977  0602                     l1642:
  2978  0602  3001               	movlw	1
  2979  0603                     u1195:
  2980  0603  35AC               	lslf	___lwmod@divisor,f
  2981  0604  0DAD               	rlf	___lwmod@divisor+1,f
  2982  0605  0B89               	decfsz	9,f
  2983  0606  2E03               	goto	u1195
  2984  0607                     l1644:
  2985  0607  3001               	movlw	1
  2986  0608  00B0               	movwf	??___lwmod
  2987  0609  0830               	movf	??___lwmod,w
  2988  060A  07B1               	addwf	___lwmod@counter,f
  2989  060B                     l1646:
  2990  060B  1FAD               	btfss	___lwmod@divisor+1,7
  2991  060C  2E0E               	goto	u1201
  2992  060D  2E0F               	goto	u1200
  2993  060E                     u1201:
  2994  060E  2E02               	goto	l1642
  2995  060F                     u1200:
  2996  060F                     l1648:
  2997  060F  082D               	movf	___lwmod@divisor+1,w
  2998  0610  022F               	subwf	___lwmod@dividend+1,w
  2999  0611  1D03               	skipz
  3000  0612  2E15               	goto	u1215
  3001  0613  082C               	movf	___lwmod@divisor,w
  3002  0614  022E               	subwf	___lwmod@dividend,w
  3003  0615                     u1215:
  3004  0615  1C03               	skipc
  3005  0616  2E18               	goto	u1211
  3006  0617  2E19               	goto	u1210
  3007  0618                     u1211:
  3008  0618  2E1D               	goto	l1652
  3009  0619                     u1210:
  3010  0619                     l1650:
  3011  0619  082C               	movf	___lwmod@divisor,w
  3012  061A  02AE               	subwf	___lwmod@dividend,f
  3013  061B  082D               	movf	___lwmod@divisor+1,w
  3014  061C  3BAF               	subwfb	___lwmod@dividend+1,f
  3015  061D                     l1652:
  3016  061D  3001               	movlw	1
  3017  061E                     u1225:
  3018  061E  36AD               	lsrf	___lwmod@divisor+1,f
  3019  061F  0CAC               	rrf	___lwmod@divisor,f
  3020  0620  0B89               	decfsz	9,f
  3021  0621  2E1E               	goto	u1225
  3022  0622                     l1654:
  3023  0622  3001               	movlw	1
  3024  0623  02B1               	subwf	___lwmod@counter,f
  3025  0624  1D03               	btfss	3,2
  3026  0625  2E27               	goto	u1231
  3027  0626  2E28               	goto	u1230
  3028  0627                     u1231:
  3029  0627  2E0F               	goto	l1648
  3030  0628                     u1230:
  3031  0628                     l1656:
  3032  0628  082F               	movf	___lwmod@dividend+1,w
  3033  0629  00AD               	movwf	?___lwmod+1
  3034  062A  082E               	movf	___lwmod@dividend,w
  3035  062B  00AC               	movwf	?___lwmod
  3036  062C                     l652:
  3037  062C  0008               	return
  3038  062D                     __end_of___lwmod:
  3039                           
  3040                           	psect	text5
  3041  0586                     __ptext5:	
  3042 ;; *************** function ___lwdiv *****************
  3043 ;; Defined at:
  3044 ;;		line 5 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lwdiv.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  divisor         2    1[COMMON] unsigned int 
  3047 ;;  dividend        2    3[COMMON] unsigned int 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  quotient        2    6[COMMON] unsigned int 
  3050 ;;  counter         1    8[COMMON] unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  2    1[COMMON] unsigned int 
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3060 ;;      Params:         4       0       0       0       0       0       0       0
  3061 ;;      Locals:         3       0       0       0       0       0       0       0
  3062 ;;      Temps:          1       0       0       0       0       0       0       0
  3063 ;;      Totals:         8       0       0       0       0       0       0       0
  3064 ;;Total ram usage:        8 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; Hardware stack levels required when called: 3
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_result
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074  0586                     ___lwdiv:	
  3075                           ;psect for function ___lwdiv
  3076                           
  3077  0586                     l1612:	
  3078                           ;incstack = 0
  3079                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3080                           
  3081  0586  01F6               	clrf	___lwdiv@quotient
  3082  0587  01F7               	clrf	___lwdiv@quotient+1
  3083  0588                     l1614:
  3084  0588  0871               	movf	___lwdiv@divisor,w
  3085  0589  0472               	iorwf	___lwdiv@divisor+1,w
  3086  058A  1903               	btfsc	3,2
  3087  058B  2D8D               	goto	u1111
  3088  058C  2D8E               	goto	u1110
  3089  058D                     u1111:
  3090  058D  2DBD               	goto	l1634
  3091  058E                     u1110:
  3092  058E                     l1616:
  3093  058E  01F8               	clrf	___lwdiv@counter
  3094  058F  0AF8               	incf	___lwdiv@counter,f
  3095  0590  2D9A               	goto	l1622
  3096  0591                     l1618:
  3097  0591  3001               	movlw	1
  3098  0592                     u1125:
  3099  0592  35F1               	lslf	___lwdiv@divisor,f
  3100  0593  0DF2               	rlf	___lwdiv@divisor+1,f
  3101  0594  0B89               	decfsz	9,f
  3102  0595  2D92               	goto	u1125
  3103  0596                     l1620:
  3104  0596  3001               	movlw	1
  3105  0597  00F5               	movwf	??___lwdiv
  3106  0598  0875               	movf	??___lwdiv,w
  3107  0599  07F8               	addwf	___lwdiv@counter,f
  3108  059A                     l1622:
  3109  059A  1FF2               	btfss	___lwdiv@divisor+1,7
  3110  059B  2D9D               	goto	u1131
  3111  059C  2D9E               	goto	u1130
  3112  059D                     u1131:
  3113  059D  2D91               	goto	l1618
  3114  059E                     u1130:
  3115  059E                     l1624:
  3116  059E  3001               	movlw	1
  3117  059F                     u1145:
  3118  059F  35F6               	lslf	___lwdiv@quotient,f
  3119  05A0  0DF7               	rlf	___lwdiv@quotient+1,f
  3120  05A1  0B89               	decfsz	9,f
  3121  05A2  2D9F               	goto	u1145
  3122  05A3  0872               	movf	___lwdiv@divisor+1,w
  3123  05A4  0274               	subwf	___lwdiv@dividend+1,w
  3124  05A5  1D03               	skipz
  3125  05A6  2DA9               	goto	u1155
  3126  05A7  0871               	movf	___lwdiv@divisor,w
  3127  05A8  0273               	subwf	___lwdiv@dividend,w
  3128  05A9                     u1155:
  3129  05A9  1C03               	skipc
  3130  05AA  2DAC               	goto	u1151
  3131  05AB  2DAD               	goto	u1150
  3132  05AC                     u1151:
  3133  05AC  2DB2               	goto	l1630
  3134  05AD                     u1150:
  3135  05AD                     l1626:
  3136  05AD  0871               	movf	___lwdiv@divisor,w
  3137  05AE  02F3               	subwf	___lwdiv@dividend,f
  3138  05AF  0872               	movf	___lwdiv@divisor+1,w
  3139  05B0  3BF4               	subwfb	___lwdiv@dividend+1,f
  3140  05B1                     l1628:
  3141  05B1  1476               	bsf	___lwdiv@quotient,0
  3142  05B2                     l1630:
  3143  05B2  3001               	movlw	1
  3144  05B3                     u1165:
  3145  05B3  36F2               	lsrf	___lwdiv@divisor+1,f
  3146  05B4  0CF1               	rrf	___lwdiv@divisor,f
  3147  05B5  0B89               	decfsz	9,f
  3148  05B6  2DB3               	goto	u1165
  3149  05B7                     l1632:
  3150  05B7  3001               	movlw	1
  3151  05B8  02F8               	subwf	___lwdiv@counter,f
  3152  05B9  1D03               	btfss	3,2
  3153  05BA  2DBC               	goto	u1171
  3154  05BB  2DBD               	goto	u1170
  3155  05BC                     u1171:
  3156  05BC  2D9E               	goto	l1624
  3157  05BD                     u1170:
  3158  05BD                     l1634:
  3159  05BD  0877               	movf	___lwdiv@quotient+1,w
  3160  05BE  00F2               	movwf	?___lwdiv+1
  3161  05BF  0876               	movf	___lwdiv@quotient,w
  3162  05C0  00F1               	movwf	?___lwdiv
  3163  05C1                     l642:
  3164  05C1  0008               	return
  3165  05C2                     __end_of___lwdiv:
  3166                           
  3167                           	psect	text6
  3168  06EC                     __ptext6:	
  3169 ;; *************** function _random_TMR0 *****************
  3170 ;; Defined at:
  3171 ;;		line 18 in file "./random_TMR0.h"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  reSeed          1    wreg     unsigned char 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  reSeed          1   11[COMMON] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  2   10[BANK0 ] unsigned short 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0, pclath, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3185 ;;      Params:         0       2       0       0       0       0       0       0
  3186 ;;      Locals:         1       0       0       0       0       0       0       0
  3187 ;;      Temps:          2       0       0       0       0       0       0       0
  3188 ;;      Totals:         3       2       0       0       0       0       0       0
  3189 ;;Total ram usage:        5 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 5
  3192 ;; This function calls:
  3193 ;;		_TMR0_ReadTimer
  3194 ;;		___lbmod
  3195 ;;		_rand
  3196 ;;		_srand
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202  06EC                     _random_TMR0:	
  3203                           ;psect for function _random_TMR0
  3204                           
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in _random_TMR0: [wreg+status,2+status,0+pclath+cstack]
  3208                           ;random_TMR0@reSeed stored from wreg
  3209  06EC  00FB               	movwf	random_TMR0@reSeed
  3210  06ED                     l2014:
  3211                           
  3212                           ;./random_TMR0.h: 19:         static unsigned char now = 0;;./random_TMR0.h: 20:        
      +                           if (now % reSeed == 0)srand(TMR0_ReadTimer());
  3213  06ED  087B               	movf	random_TMR0@reSeed,w
  3214  06EE  00F9               	movwf	??_random_TMR0
  3215  06EF  0879               	movf	??_random_TMR0,w
  3216  06F0  00F1               	movwf	___lbmod@divisor
  3217  06F1  0020               	movlb	0	; select bank0
  3218  06F2  0864               	movf	random_TMR0@now,w
  3219  06F3  3187  273D  3186   	fcall	___lbmod
  3220  06F6  3A00               	xorlw	0
  3221  06F7  1D03               	skipz
  3222  06F8  2EFA               	goto	u1751
  3223  06F9  2EFB               	goto	u1750
  3224  06FA                     u1751:
  3225  06FA  2F07               	goto	l2018
  3226  06FB                     u1750:
  3227  06FB                     l2016:
  3228  06FB  318F  27B5  3186   	fcall	_TMR0_ReadTimer
  3229  06FE  00F9               	movwf	??_random_TMR0
  3230  06FF  01FA               	clrf	??_random_TMR0+1
  3231  0700  0879               	movf	??_random_TMR0,w
  3232  0701  00F3               	movwf	srand@s
  3233  0702  087A               	movf	??_random_TMR0+1,w
  3234  0703  00F4               	movwf	srand@s+1
  3235  0704  318F  27BC  3186   	fcall	_srand
  3236  0707                     l2018:
  3237                           
  3238                           ;./random_TMR0.h: 21:         now++;
  3239  0707  3001               	movlw	1
  3240  0708  00F9               	movwf	??_random_TMR0
  3241  0709  0879               	movf	??_random_TMR0,w
  3242  070A  0020               	movlb	0	; select bank0
  3243  070B  07E4               	addwf	random_TMR0@now,f
  3244  070C                     l2020:
  3245                           
  3246                           ;./random_TMR0.h: 22:         return rand();
  3247  070C  3186  262D  3186   	fcall	_rand
  3248  070F  0020               	movlb	0	; select bank0
  3249  0710  0825               	movf	?_rand+1,w
  3250  0711  00AB               	movwf	?_random_TMR0+1
  3251  0712  0824               	movf	?_rand,w
  3252  0713  00AA               	movwf	?_random_TMR0
  3253  0714                     l150:
  3254  0714  0008               	return
  3255  0715                     __end_of_random_TMR0:
  3256                           
  3257                           	psect	text7
  3258  0FBC                     __ptext7:	
  3259 ;; *************** function _srand *****************
  3260 ;; Defined at:
  3261 ;;		line 6 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/rand.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  s               2    3[COMMON] unsigned int 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3275 ;;      Params:         2       0       0       0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0       0       0       0
  3278 ;;      Totals:         2       0       0       0       0       0       0       0
  3279 ;;Total ram usage:        2 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 3
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_random_TMR0
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289  0FBC                     _srand:	
  3290                           ;psect for function _srand
  3291                           
  3292  0FBC                     l1990:	
  3293                           ;incstack = 0
  3294                           ; Regs used in _srand: [wreg+status,2+status,0]
  3295                           
  3296  0FBC  0873               	movf	srand@s,w
  3297  0FBD  3EFF               	addlw	255
  3298  0FBE  0020               	movlb	0	; select bank0
  3299  0FBF  00E7               	movwf	_seed
  3300  0FC0  30FF               	movlw	255
  3301  0FC1  3D74               	addwfc	srand@s+1,w
  3302  0FC2  00E8               	movwf	_seed+1
  3303  0FC3  01E9               	clrf	_seed+2
  3304  0FC4  01EA               	clrf	_seed+3
  3305  0FC5                     l823:
  3306  0FC5  0008               	return
  3307  0FC6                     __end_of_srand:
  3308                           
  3309                           	psect	text8
  3310  062D                     __ptext8:	
  3311 ;; *************** function _rand *****************
  3312 ;; Defined at:
  3313 ;;		line 11 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/rand.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  2    4[BANK0 ] int 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0, pclath, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3327 ;;      Params:         0       2       0       0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0       0       0       0
  3329 ;;      Temps:          0       4       0       0       0       0       0       0
  3330 ;;      Totals:         0       6       0       0       0       0       0       0
  3331 ;;Total ram usage:        6 bytes
  3332 ;; Hardware stack levels used: 1
  3333 ;; Hardware stack levels required when called: 4
  3334 ;; This function calls:
  3335 ;;		___lmul
  3336 ;; This function is called by:
  3337 ;;		_random_TMR0
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341  062D                     _rand:	
  3342                           ;psect for function _rand
  3343                           
  3344  062D                     l1992:	
  3345                           ;incstack = 0
  3346                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  3347                           
  3348  062D  0020               	movlb	0	; select bank0
  3349  062E  086A               	movf	_seed+3,w
  3350  062F  00F4               	movwf	___lmul@multiplier+3
  3351  0630  0869               	movf	_seed+2,w
  3352  0631  00F3               	movwf	___lmul@multiplier+2
  3353  0632  0868               	movf	_seed+1,w
  3354  0633  00F2               	movwf	___lmul@multiplier+1
  3355  0634  0867               	movf	_seed,w
  3356  0635  00F1               	movwf	___lmul@multiplier
  3357  0636  304C               	movlw	76
  3358  0637  00F8               	movwf	___lmul@multiplicand+3
  3359  0638  3095               	movlw	149
  3360  0639  00F7               	movwf	___lmul@multiplicand+2
  3361  063A  307F               	movlw	127
  3362  063B  00F6               	movwf	___lmul@multiplicand+1
  3363  063C  302D               	movlw	45
  3364  063D  00F5               	movwf	___lmul@multiplicand
  3365  063E  3185  25C2  3186   	fcall	___lmul
  3366  0641  3001               	movlw	1
  3367  0642  0771               	addwf	?___lmul,w
  3368  0643  0020               	movlb	0	; select bank0
  3369  0644  00E7               	movwf	_seed
  3370  0645  3000               	movlw	0
  3371  0646  3D72               	addwfc	?___lmul+1,w
  3372  0647  00E8               	movwf	_seed+1
  3373  0648  3000               	movlw	0
  3374  0649  3D73               	addwfc	?___lmul+2,w
  3375  064A  00E9               	movwf	_seed+2
  3376  064B  3000               	movlw	0
  3377  064C  3D74               	addwfc	?___lmul+3,w
  3378  064D  00EA               	movwf	_seed+3
  3379  064E                     l1994:
  3380  064E  0867               	movf	_seed,w
  3381  064F  00A6               	movwf	??_rand
  3382  0650  0868               	movf	_seed+1,w
  3383  0651  00A7               	movwf	??_rand+1
  3384  0652  0869               	movf	_seed+2,w
  3385  0653  00A8               	movwf	??_rand+2
  3386  0654  086A               	movf	_seed+3,w
  3387  0655  00A9               	movwf	??_rand+3
  3388  0656  3011               	movlw	17
  3389  0657                     u1715:
  3390  0657  36A9               	lsrf	??_rand+3,f
  3391  0658  0CA8               	rrf	??_rand+2,f
  3392  0659  0CA7               	rrf	??_rand+1,f
  3393  065A  0CA6               	rrf	??_rand,f
  3394  065B                     u1710:
  3395  065B  0B89               	decfsz	9,f
  3396  065C  2E57               	goto	u1715
  3397  065D  0827               	movf	??_rand+1,w
  3398  065E  00A5               	movwf	?_rand+1
  3399  065F  0826               	movf	??_rand,w
  3400  0660  00A4               	movwf	?_rand
  3401  0661                     l826:
  3402  0661  0008               	return
  3403  0662                     __end_of_rand:
  3404                           
  3405                           	psect	text9
  3406  05C2                     __ptext9:	
  3407 ;; *************** function ___lmul *****************
  3408 ;; Defined at:
  3409 ;;		line 15 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/Umul32.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  multiplier      4    1[COMMON] unsigned long 
  3412 ;;  multiplicand    4    5[COMMON] unsigned long 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  product         4    0[BANK0 ] unsigned long 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  4    1[COMMON] unsigned long 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2, status,0
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3424 ;;      Params:         8       0       0       0       0       0       0       0
  3425 ;;      Locals:         0       4       0       0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0
  3427 ;;      Totals:         8       4       0       0       0       0       0       0
  3428 ;;Total ram usage:       12 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 3
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_rand
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438  05C2                     ___lmul:	
  3439                           ;psect for function ___lmul
  3440                           
  3441  05C2                     l1972:	
  3442                           ;incstack = 0
  3443                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3444                           
  3445  05C2  3000               	movlw	0
  3446  05C3  0020               	movlb	0	; select bank0
  3447  05C4  00A3               	movwf	___lmul@product+3
  3448  05C5  3000               	movlw	0
  3449  05C6  00A2               	movwf	___lmul@product+2
  3450  05C7  3000               	movlw	0
  3451  05C8  00A1               	movwf	___lmul@product+1
  3452  05C9  3000               	movlw	0
  3453  05CA  00A0               	movwf	___lmul@product
  3454  05CB                     l1974:
  3455  05CB  1C71               	btfss	___lmul@multiplier,0
  3456  05CC  2DCE               	goto	u1671
  3457  05CD  2DCF               	goto	u1670
  3458  05CE                     u1671:
  3459  05CE  2DD8               	goto	l1978
  3460  05CF                     u1670:
  3461  05CF                     l1976:
  3462  05CF  0875               	movf	___lmul@multiplicand,w
  3463  05D0  0020               	movlb	0	; select bank0
  3464  05D1  07A0               	addwf	___lmul@product,f
  3465  05D2  0876               	movf	___lmul@multiplicand+1,w
  3466  05D3  3DA1               	addwfc	___lmul@product+1,f
  3467  05D4  0877               	movf	___lmul@multiplicand+2,w
  3468  05D5  3DA2               	addwfc	___lmul@product+2,f
  3469  05D6  0878               	movf	___lmul@multiplicand+3,w
  3470  05D7  3DA3               	addwfc	___lmul@product+3,f
  3471  05D8                     l1978:
  3472  05D8  3001               	movlw	1
  3473  05D9                     u1685:
  3474  05D9  35F5               	lslf	___lmul@multiplicand,f
  3475  05DA  0DF6               	rlf	___lmul@multiplicand+1,f
  3476  05DB  0DF7               	rlf	___lmul@multiplicand+2,f
  3477  05DC  0DF8               	rlf	___lmul@multiplicand+3,f
  3478  05DD  0B89               	decfsz	9,f
  3479  05DE  2DD9               	goto	u1685
  3480  05DF                     l1980:
  3481  05DF  3001               	movlw	1
  3482  05E0                     u1695:
  3483  05E0  36F4               	lsrf	___lmul@multiplier+3,f
  3484  05E1  0CF3               	rrf	___lmul@multiplier+2,f
  3485  05E2  0CF2               	rrf	___lmul@multiplier+1,f
  3486  05E3  0CF1               	rrf	___lmul@multiplier,f
  3487  05E4  0B89               	decfsz	9,f
  3488  05E5  2DE0               	goto	u1695
  3489  05E6  0874               	movf	___lmul@multiplier+3,w
  3490  05E7  0473               	iorwf	___lmul@multiplier+2,w
  3491  05E8  0472               	iorwf	___lmul@multiplier+1,w
  3492  05E9  0471               	iorwf	___lmul@multiplier,w
  3493  05EA  1D03               	skipz
  3494  05EB  2DED               	goto	u1701
  3495  05EC  2DEE               	goto	u1700
  3496  05ED                     u1701:
  3497  05ED  2DCB               	goto	l1974
  3498  05EE                     u1700:
  3499  05EE                     l1982:
  3500  05EE  0020               	movlb	0	; select bank0
  3501  05EF  0823               	movf	___lmul@product+3,w
  3502  05F0  00F4               	movwf	?___lmul+3
  3503  05F1  0822               	movf	___lmul@product+2,w
  3504  05F2  00F3               	movwf	?___lmul+2
  3505  05F3  0821               	movf	___lmul@product+1,w
  3506  05F4  00F2               	movwf	?___lmul+1
  3507  05F5  0820               	movf	___lmul@product,w
  3508  05F6  00F1               	movwf	?___lmul
  3509  05F7                     l376:
  3510  05F7  0008               	return
  3511  05F8                     __end_of___lmul:
  3512                           
  3513                           	psect	text10
  3514  073D                     __ptext10:	
  3515 ;; *************** function ___lbmod *****************
  3516 ;; Defined at:
  3517 ;;		line 4 in file "/opt/microchip/xc8/v2.36/pic/sources/c99/common/lbmod.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  dividend        1    wreg     unsigned char 
  3520 ;;  divisor         1    1[COMMON] unsigned char 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  dividend        1    4[COMMON] unsigned char 
  3523 ;;  rem             1    6[COMMON] unsigned char 
  3524 ;;  counter         1    5[COMMON] unsigned char 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      unsigned char 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3534 ;;      Params:         1       0       0       0       0       0       0       0
  3535 ;;      Locals:         3       0       0       0       0       0       0       0
  3536 ;;      Temps:          2       0       0       0       0       0       0       0
  3537 ;;      Totals:         6       0       0       0       0       0       0       0
  3538 ;;Total ram usage:        6 bytes
  3539 ;; Hardware stack levels used: 1
  3540 ;; Hardware stack levels required when called: 3
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_random_TMR0
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548  073D                     ___lbmod:	
  3549                           ;psect for function ___lbmod
  3550                           
  3551                           
  3552                           ;incstack = 0
  3553                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  3554                           ;___lbmod@dividend stored from wreg
  3555  073D  00F4               	movwf	___lbmod@dividend
  3556  073E                     l1998:
  3557  073E  3008               	movlw	8
  3558  073F  00F2               	movwf	??___lbmod
  3559  0740  0872               	movf	??___lbmod,w
  3560  0741  00F5               	movwf	___lbmod@counter
  3561  0742                     l2000:
  3562  0742  01F6               	clrf	___lbmod@rem
  3563  0743                     l2002:
  3564  0743  0874               	movf	___lbmod@dividend,w
  3565  0744  00F2               	movwf	??___lbmod
  3566  0745  3007               	movlw	7
  3567  0746                     u1725:
  3568  0746  36F2               	lsrf	??___lbmod,f
  3569  0747  0B89               	decfsz	9,f
  3570  0748  2F46               	goto	u1725
  3571  0749  3576               	lslf	___lbmod@rem,w
  3572  074A  0472               	iorwf	??___lbmod,w
  3573  074B  00F3               	movwf	??___lbmod+1
  3574  074C  0873               	movf	??___lbmod+1,w
  3575  074D  00F6               	movwf	___lbmod@rem
  3576  074E                     l2004:
  3577  074E  1003               	clrc
  3578  074F  0DF4               	rlf	___lbmod@dividend,f
  3579  0750                     l2006:
  3580  0750  0871               	movf	___lbmod@divisor,w
  3581  0751  0276               	subwf	___lbmod@rem,w
  3582  0752  1C03               	skipc
  3583  0753  2F55               	goto	u1731
  3584  0754  2F56               	goto	u1730
  3585  0755                     u1731:
  3586  0755  2F58               	goto	l580
  3587  0756                     u1730:
  3588  0756                     l2008:
  3589  0756  0871               	movf	___lbmod@divisor,w
  3590  0757  02F6               	subwf	___lbmod@rem,f
  3591  0758                     l580:
  3592  0758  3001               	movlw	1
  3593  0759  02F5               	subwf	___lbmod@counter,f
  3594  075A  1D03               	btfss	3,2
  3595  075B  2F5D               	goto	u1741
  3596  075C  2F5E               	goto	u1740
  3597  075D                     u1741:
  3598  075D  2F43               	goto	l2002
  3599  075E                     u1740:
  3600  075E                     l2010:
  3601  075E  0876               	movf	___lbmod@rem,w
  3602  075F                     l582:
  3603  075F  0008               	return
  3604  0760                     __end_of___lbmod:
  3605                           
  3606                           	psect	text11
  3607  0FB5                     __ptext11:	
  3608 ;; *************** function _TMR0_ReadTimer *****************
  3609 ;; Defined at:
  3610 ;;		line 88 in file "mcc_generated_files/tmr0.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  readVal         1    2[COMMON] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      unsigned char 
  3617 ;; Registers used:
  3618 ;;		wreg
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3624 ;;      Params:         0       0       0       0       0       0       0       0
  3625 ;;      Locals:         1       0       0       0       0       0       0       0
  3626 ;;      Temps:          1       0       0       0       0       0       0       0
  3627 ;;      Totals:         2       0       0       0       0       0       0       0
  3628 ;;Total ram usage:        2 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; Hardware stack levels required when called: 3
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_random_TMR0
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638  0FB5                     _TMR0_ReadTimer:	
  3639                           ;psect for function _TMR0_ReadTimer
  3640                           
  3641  0FB5                     l1986:	
  3642                           ;incstack = 0
  3643                           ; Regs used in _TMR0_ReadTimer: [wreg]
  3644                           
  3645                           
  3646                           ;mcc_generated_files/tmr0.c: 89:     uint8_t readVal;;mcc_generated_files/tmr0.c: 91:   
      +                            readVal = TMR0;
  3647  0FB5  0020               	movlb	0	; select bank0
  3648  0FB6  0815               	movf	21,w	;volatile
  3649  0FB7  00F1               	movwf	??_TMR0_ReadTimer
  3650  0FB8  0871               	movf	??_TMR0_ReadTimer,w
  3651  0FB9  00F2               	movwf	TMR0_ReadTimer@readVal
  3652                           
  3653                           ;mcc_generated_files/tmr0.c: 93:     return readVal;
  3654  0FBA  0872               	movf	TMR0_ReadTimer@readVal,w
  3655  0FBB                     l101:
  3656  0FBB  0008               	return
  3657  0FBC                     __end_of_TMR0_ReadTimer:
  3658                           
  3659                           	psect	text12
  3660  01FC                     __ptext12:	
  3661 ;; *************** function _dispExact *****************
  3662 ;; Defined at:
  3663 ;;		line 151 in file "main.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;		None
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  disp            2   28[BANK0 ] unsigned short 
  3668 ;;  i               2   26[BANK0 ] unsigned short 
  3669 ;;  m               1   33[BANK0 ] unsigned char 
  3670 ;;  i               1   32[BANK0 ] unsigned char 
  3671 ;;  m               1   31[BANK0 ] unsigned char 
  3672 ;;  i               1   30[BANK0 ] unsigned char 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg, status,2, status,0, pclath, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3682 ;;      Params:         0       0       0       0       0       0       0       0
  3683 ;;      Locals:         0       8       0       0       0       0       0       0
  3684 ;;      Temps:          0       2       0       0       0       0       0       0
  3685 ;;      Totals:         0      10       0       0       0       0       0       0
  3686 ;;Total ram usage:       10 bytes
  3687 ;; Hardware stack levels used: 1
  3688 ;; Hardware stack levels required when called: 4
  3689 ;; This function calls:
  3690 ;;		_flashLED
  3691 ;;		_noTone
  3692 ;;		_tone
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698  01FC                     _dispExact:	
  3699                           ;psect for function _dispExact
  3700                           
  3701  01FC                     l1740:	
  3702                           ;incstack = 0
  3703                           ; Regs used in _dispExact: [wreg+status,2+status,0+pclath+cstack]
  3704                           
  3705                           
  3706                           ;main.c: 152:     noTone();
  3707  01FC  3187  27FD  3181   	fcall	_noTone
  3708  01FF                     l1742:
  3709                           
  3710                           ;main.c: 153:     flashLED(0, 15);
  3711  01FF  3000               	movlw	0
  3712  0200  0020               	movlb	0	; select bank0
  3713  0201  00B2               	movwf	flashLED@disp
  3714  0202  00B3               	movwf	flashLED@disp+1
  3715  0203  300F               	movlw	15
  3716  0204  00B4               	movwf	flashLED@segs
  3717  0205  3000               	movlw	0
  3718  0206  00B5               	movwf	flashLED@segs+1
  3719  0207  3187  2715  3181   	fcall	_flashLED
  3720                           
  3721                           ;main.c: 154:     _delay((unsigned long)((500)*(16000000/4000.0)));
  3722  020A  300B               	movlw	11
  3723  020B  0020               	movlb	0	; select bank0
  3724  020C  00B9               	movwf	??_dispExact+1
  3725  020D  3026               	movlw	38
  3726  020E  00B8               	movwf	??_dispExact
  3727  020F  305D               	movlw	93
  3728  0210                     u2167:
  3729  0210  0B89               	decfsz	9,f
  3730  0211  2A10               	goto	u2167
  3731  0212  0BB8               	decfsz	??_dispExact,f
  3732  0213  2A10               	goto	u2167
  3733  0214  0BB9               	decfsz	??_dispExact+1,f
  3734  0215  2A10               	goto	u2167
  3735  0216  3200               	nop2
  3736  0217                     l1744:
  3737                           
  3738                           ;main.c: 155:     for (uint8_t i = 0, m = 0b11000; i < 6; i++, m = ~m) {
  3739  0217  0020               	movlb	0	; select bank0
  3740  0218  01BE               	clrf	dispExact@i
  3741  0219                     l1746:
  3742  0219  3018               	movlw	24
  3743  021A  00B8               	movwf	??_dispExact
  3744  021B  0838               	movf	??_dispExact,w
  3745  021C  00BF               	movwf	dispExact@m
  3746  021D                     l1752:
  3747                           
  3748                           ;main.c: 156:         flashLED(0b100000000100000 | (m & 0b000000000011100 | 0b00100), 15
      +                          );
  3749  021D  301C               	movlw	28
  3750  021E  053F               	andwf	dispExact@m,w
  3751  021F  00B8               	movwf	??_dispExact
  3752  0220  3024               	movlw	36
  3753  0221  0438               	iorwf	??_dispExact,w
  3754  0222  00B2               	movwf	flashLED@disp
  3755  0223  3040               	movlw	64
  3756  0224  00B3               	movwf	flashLED@disp+1
  3757  0225  300F               	movlw	15
  3758  0226  00B4               	movwf	flashLED@segs
  3759  0227  3000               	movlw	0
  3760  0228  00B5               	movwf	flashLED@segs+1
  3761  0229  3187  2715  3181   	fcall	_flashLED
  3762                           
  3763                           ;main.c: 157:         tone(200);
  3764  022C  30C8               	movlw	200
  3765  022D  00F1               	movwf	tone@freq
  3766  022E  3000               	movlw	0
  3767  022F  00F2               	movwf	tone@freq+1
  3768  0230  3187  27D6  3181   	fcall	_tone
  3769  0233                     l1754:
  3770                           
  3771                           ;main.c: 158:         _delay((unsigned long)((100)*(16000000/4000.0)));
  3772  0233  3003               	movlw	3
  3773  0234  0020               	movlb	0	; select bank0
  3774  0235  00B9               	movwf	??_dispExact+1
  3775  0236  3008               	movlw	8
  3776  0237  00B8               	movwf	??_dispExact
  3777  0238  3077               	movlw	119
  3778  0239                     u2177:
  3779  0239  0B89               	decfsz	9,f
  3780  023A  2A39               	goto	u2177
  3781  023B  0BB8               	decfsz	??_dispExact,f
  3782  023C  2A39               	goto	u2177
  3783  023D  0BB9               	decfsz	??_dispExact+1,f
  3784  023E  2A39               	goto	u2177
  3785                           
  3786                           ;main.c: 159:         noTone();
  3787  023F  3187  27FD  3181   	fcall	_noTone
  3788  0242                     l1756:
  3789                           
  3790                           ;main.c: 160:         _delay((unsigned long)((100)*(16000000/4000.0)));
  3791  0242  3003               	movlw	3
  3792  0243  0020               	movlb	0	; select bank0
  3793  0244  00B9               	movwf	??_dispExact+1
  3794  0245  3008               	movlw	8
  3795  0246  00B8               	movwf	??_dispExact
  3796  0247  3077               	movlw	119
  3797  0248                     u2187:
  3798  0248  0B89               	decfsz	9,f
  3799  0249  2A48               	goto	u2187
  3800  024A  0BB8               	decfsz	??_dispExact,f
  3801  024B  2A48               	goto	u2187
  3802  024C  0BB9               	decfsz	??_dispExact+1,f
  3803  024D  2A48               	goto	u2187
  3804  024E                     l1758:
  3805                           
  3806                           ;main.c: 161:     }
  3807  024E  3001               	movlw	1
  3808  024F  0020               	movlb	0	; select bank0
  3809  0250  00B8               	movwf	??_dispExact
  3810  0251  0838               	movf	??_dispExact,w
  3811  0252  07BE               	addwf	dispExact@i,f
  3812  0253                     l1760:
  3813  0253  09BF               	comf	dispExact@m,f
  3814  0254                     l1762:
  3815  0254  3006               	movlw	6
  3816  0255  023E               	subwf	dispExact@i,w
  3817  0256  1C03               	skipc
  3818  0257  2A59               	goto	u1401
  3819  0258  2A5A               	goto	u1400
  3820  0259                     u1401:
  3821  0259  2A1D               	goto	l1752
  3822  025A                     u1400:
  3823  025A                     l1764:
  3824                           
  3825                           ;main.c: 162:     for (uint8_t i = 0, m = 0b10000; i < 6; i++, m = ~m) {
  3826  025A  01C0               	clrf	dispExact@i_314
  3827  025B                     l1766:
  3828  025B  3010               	movlw	16
  3829  025C  00B8               	movwf	??_dispExact
  3830  025D  0838               	movf	??_dispExact,w
  3831  025E  00C1               	movwf	dispExact@m_315
  3832  025F                     l1772:
  3833                           
  3834                           ;main.c: 163:         flashLED(0b011000011000000 | (m & 0b000000000011100 | 0b01100), 15
      +                          );
  3835  025F  301C               	movlw	28
  3836  0260  0541               	andwf	dispExact@m_315,w
  3837  0261  00B8               	movwf	??_dispExact
  3838  0262  30CC               	movlw	204
  3839  0263  0438               	iorwf	??_dispExact,w
  3840  0264  00B2               	movwf	flashLED@disp
  3841  0265  3030               	movlw	48
  3842  0266  00B3               	movwf	flashLED@disp+1
  3843  0267  300F               	movlw	15
  3844  0268  00B4               	movwf	flashLED@segs
  3845  0269  3000               	movlw	0
  3846  026A  00B5               	movwf	flashLED@segs+1
  3847  026B  3187  2715  3181   	fcall	_flashLED
  3848                           
  3849                           ;main.c: 164:         tone(800);
  3850  026E  3020               	movlw	32
  3851  026F  00F1               	movwf	tone@freq
  3852  0270  3003               	movlw	3
  3853  0271  00F2               	movwf	tone@freq+1
  3854  0272  3187  27D6  3181   	fcall	_tone
  3855  0275                     l1774:
  3856                           
  3857                           ;main.c: 165:         _delay((unsigned long)((100)*(16000000/4000.0)));
  3858  0275  3003               	movlw	3
  3859  0276  0020               	movlb	0	; select bank0
  3860  0277  00B9               	movwf	??_dispExact+1
  3861  0278  3008               	movlw	8
  3862  0279  00B8               	movwf	??_dispExact
  3863  027A  3077               	movlw	119
  3864  027B                     u2197:
  3865  027B  0B89               	decfsz	9,f
  3866  027C  2A7B               	goto	u2197
  3867  027D  0BB8               	decfsz	??_dispExact,f
  3868  027E  2A7B               	goto	u2197
  3869  027F  0BB9               	decfsz	??_dispExact+1,f
  3870  0280  2A7B               	goto	u2197
  3871                           
  3872                           ;main.c: 166:         noTone();
  3873  0281  3187  27FD  3181   	fcall	_noTone
  3874  0284                     l1776:
  3875                           
  3876                           ;main.c: 167:         _delay((unsigned long)((100)*(16000000/4000.0)));
  3877  0284  3003               	movlw	3
  3878  0285  0020               	movlb	0	; select bank0
  3879  0286  00B9               	movwf	??_dispExact+1
  3880  0287  3008               	movlw	8
  3881  0288  00B8               	movwf	??_dispExact
  3882  0289  3077               	movlw	119
  3883  028A                     u2207:
  3884  028A  0B89               	decfsz	9,f
  3885  028B  2A8A               	goto	u2207
  3886  028C  0BB8               	decfsz	??_dispExact,f
  3887  028D  2A8A               	goto	u2207
  3888  028E  0BB9               	decfsz	??_dispExact+1,f
  3889  028F  2A8A               	goto	u2207
  3890  0290                     l1778:
  3891                           
  3892                           ;main.c: 168:     }
  3893  0290  3001               	movlw	1
  3894  0291  0020               	movlb	0	; select bank0
  3895  0292  00B8               	movwf	??_dispExact
  3896  0293  0838               	movf	??_dispExact,w
  3897  0294  07C0               	addwf	dispExact@i_314,f
  3898  0295                     l1780:
  3899  0295  09C1               	comf	dispExact@m_315,f
  3900  0296                     l1782:
  3901  0296  3006               	movlw	6
  3902  0297  0240               	subwf	dispExact@i_314,w
  3903  0298  1C03               	skipc
  3904  0299  2A9B               	goto	u1411
  3905  029A  2A9C               	goto	u1410
  3906  029B                     u1411:
  3907  029B  2A5F               	goto	l1772
  3908  029C                     u1410:
  3909  029C                     l1784:
  3910                           
  3911                           ;main.c: 169:     _delay((unsigned long)((10)*(16000000/4000.0)));
  3912  029C  3034               	movlw	52
  3913  029D  0020               	movlb	0	; select bank0
  3914  029E  00B8               	movwf	??_dispExact
  3915  029F  30F1               	movlw	241
  3916  02A0                     u2217:
  3917  02A0  0B89               	decfsz	9,f
  3918  02A1  2AA0               	goto	u2217
  3919  02A2  0BB8               	decfsz	??_dispExact,f
  3920  02A3  2AA0               	goto	u2217
  3921  02A4  3200               	nop2
  3922  02A5                     l1786:
  3923                           
  3924                           ;main.c: 170:     flashLED(0b000111100000000, 15);
  3925  02A5  3000               	movlw	0
  3926  02A6  0020               	movlb	0	; select bank0
  3927  02A7  00B2               	movwf	flashLED@disp
  3928  02A8  300F               	movlw	15
  3929  02A9  00B3               	movwf	flashLED@disp+1
  3930  02AA  300F               	movlw	15
  3931  02AB  00B4               	movwf	flashLED@segs
  3932  02AC  3000               	movlw	0
  3933  02AD  00B5               	movwf	flashLED@segs+1
  3934  02AE  3187  2715  3181   	fcall	_flashLED
  3935  02B1                     l1788:
  3936                           
  3937                           ;main.c: 171:     tone(1600);
  3938  02B1  3040               	movlw	64
  3939  02B2  00F1               	movwf	tone@freq
  3940  02B3  3006               	movlw	6
  3941  02B4  00F2               	movwf	tone@freq+1
  3942  02B5  3187  27D6  3181   	fcall	_tone
  3943                           
  3944                           ;main.c: 172:     _delay((unsigned long)((1000)*(16000000/4000.0)));
  3945  02B8  3015               	movlw	21
  3946  02B9  0020               	movlb	0	; select bank0
  3947  02BA  00B9               	movwf	??_dispExact+1
  3948  02BB  304B               	movlw	75
  3949  02BC  00B8               	movwf	??_dispExact
  3950  02BD  30BE               	movlw	190
  3951  02BE                     u2227:
  3952  02BE  0B89               	decfsz	9,f
  3953  02BF  2ABE               	goto	u2227
  3954  02C0  0BB8               	decfsz	??_dispExact,f
  3955  02C1  2ABE               	goto	u2227
  3956  02C2  0BB9               	decfsz	??_dispExact+1,f
  3957  02C3  2ABE               	goto	u2227
  3958  02C4  0000               	nop
  3959  02C5                     l1790:
  3960                           
  3961                           ;main.c: 173:     for (uint16_t i = 0, disp = 0b000111100000000; i < 8; i++, disp = ~dis
      +                          p) {
  3962  02C5  0020               	movlb	0	; select bank0
  3963  02C6  01BA               	clrf	dispExact@i_316
  3964  02C7  01BB               	clrf	dispExact@i_316+1
  3965  02C8                     l1792:
  3966  02C8  3000               	movlw	0
  3967  02C9  00BC               	movwf	dispExact@disp
  3968  02CA  300F               	movlw	15
  3969  02CB  00BD               	movwf	dispExact@disp+1
  3970  02CC                     l1798:
  3971                           
  3972                           ;main.c: 174:         flashLED((disp & 0b000111100000011) | 0b11100, 15);
  3973  02CC  3003               	movlw	3
  3974  02CD  053C               	andwf	dispExact@disp,w
  3975  02CE  00B8               	movwf	??_dispExact
  3976  02CF  300F               	movlw	15
  3977  02D0  053D               	andwf	dispExact@disp+1,w
  3978  02D1  00B9               	movwf	??_dispExact+1
  3979  02D2  301C               	movlw	28
  3980  02D3  0438               	iorwf	??_dispExact,w
  3981  02D4  00B2               	movwf	flashLED@disp
  3982  02D5  3000               	movlw	0
  3983  02D6  0439               	iorwf	??_dispExact+1,w
  3984  02D7  00B3               	movwf	flashLED@disp+1
  3985  02D8  300F               	movlw	15
  3986  02D9  00B4               	movwf	flashLED@segs
  3987  02DA  3000               	movlw	0
  3988  02DB  00B5               	movwf	flashLED@segs+1
  3989  02DC  3187  2715  3181   	fcall	_flashLED
  3990  02DF                     l1800:
  3991                           
  3992                           ;main.c: 175:         noTone();
  3993  02DF  3187  27FD  3181   	fcall	_noTone
  3994                           
  3995                           ;main.c: 176:         _delay((unsigned long)((200)*(16000000/4000.0)));
  3996  02E2  3005               	movlw	5
  3997  02E3  0020               	movlb	0	; select bank0
  3998  02E4  00B9               	movwf	??_dispExact+1
  3999  02E5  300F               	movlw	15
  4000  02E6  00B8               	movwf	??_dispExact
  4001  02E7  30F1               	movlw	241
  4002  02E8                     u2237:
  4003  02E8  0B89               	decfsz	9,f
  4004  02E9  2AE8               	goto	u2237
  4005  02EA  0BB8               	decfsz	??_dispExact,f
  4006  02EB  2AE8               	goto	u2237
  4007  02EC  0BB9               	decfsz	??_dispExact+1,f
  4008  02ED  2AE8               	goto	u2237
  4009  02EE                     l1802:
  4010                           
  4011                           ;main.c: 177:         tone(1600);
  4012  02EE  3040               	movlw	64
  4013  02EF  00F1               	movwf	tone@freq
  4014  02F0  3006               	movlw	6
  4015  02F1  00F2               	movwf	tone@freq+1
  4016  02F2  3187  27D6  3181   	fcall	_tone
  4017  02F5                     l1804:
  4018                           
  4019                           ;main.c: 178:         _delay((unsigned long)((200)*(16000000/4000.0)));
  4020  02F5  3005               	movlw	5
  4021  02F6  0020               	movlb	0	; select bank0
  4022  02F7  00B9               	movwf	??_dispExact+1
  4023  02F8  300F               	movlw	15
  4024  02F9  00B8               	movwf	??_dispExact
  4025  02FA  30F1               	movlw	241
  4026  02FB                     u2247:
  4027  02FB  0B89               	decfsz	9,f
  4028  02FC  2AFB               	goto	u2247
  4029  02FD  0BB8               	decfsz	??_dispExact,f
  4030  02FE  2AFB               	goto	u2247
  4031  02FF  0BB9               	decfsz	??_dispExact+1,f
  4032  0300  2AFB               	goto	u2247
  4033  0301                     l1806:
  4034                           
  4035                           ;main.c: 179:     }
  4036  0301  3001               	movlw	1
  4037  0302  0020               	movlb	0	; select bank0
  4038  0303  07BA               	addwf	dispExact@i_316,f
  4039  0304  3000               	movlw	0
  4040  0305  3DBB               	addwfc	dispExact@i_316+1,f
  4041  0306                     l1808:
  4042  0306  09BC               	comf	dispExact@disp,f
  4043  0307  09BD               	comf	dispExact@disp+1,f
  4044  0308                     l1810:
  4045  0308  3000               	movlw	0
  4046  0309  023B               	subwf	dispExact@i_316+1,w
  4047  030A  3008               	movlw	8
  4048  030B  1903               	skipnz
  4049  030C  023A               	subwf	dispExact@i_316,w
  4050  030D  1C03               	skipc
  4051  030E  2B10               	goto	u1421
  4052  030F  2B11               	goto	u1420
  4053  0310                     u1421:
  4054  0310  2ACC               	goto	l1798
  4055  0311                     u1420:
  4056  0311                     l1812:
  4057                           
  4058                           ;main.c: 180:     noTone();
  4059  0311  3187  27FD  3181   	fcall	_noTone
  4060  0314                     l220:
  4061  0314  0008               	return
  4062  0315                     __end_of_dispExact:
  4063                           
  4064                           	psect	text13
  4065  053A                     __ptext13:	
  4066 ;; *************** function _checkHit *****************
  4067 ;; Defined at:
  4068 ;;		line 232 in file "main.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0, pclath, cstack
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4082 ;;      Params:         0       0       0       0       0       0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0
  4084 ;;      Temps:          0       2       0       0       0       0       0       0
  4085 ;;      Totals:         0       2       0       0       0       0       0       0
  4086 ;;Total ram usage:        2 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; Hardware stack levels required when called: 6
  4089 ;; This function calls:
  4090 ;;		_collect
  4091 ;;		_incollect
  4092 ;; This function is called by:
  4093 ;;		_main
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097  053A                     _checkHit:	
  4098                           ;psect for function _checkHit
  4099                           
  4100  053A                     l1816:	
  4101                           ;incstack = 0
  4102                           ; Regs used in _checkHit: [wreg+status,2+status,0+pclath+cstack]
  4103                           
  4104                           
  4105                           ;main.c: 233:     if (cursor & 0b0001111000) {
  4106  053A  3078               	movlw	120
  4107  053B  0020               	movlb	0	; select bank0
  4108  053C  056D               	andwf	_cursor,w
  4109  053D  00CB               	movwf	??_checkHit
  4110  053E  3000               	movlw	0
  4111  053F  056E               	andwf	_cursor+1,w
  4112  0540  00CC               	movwf	??_checkHit+1
  4113  0541  084B               	movf	??_checkHit,w
  4114  0542  044C               	iorwf	??_checkHit+1,w
  4115  0543  1903               	btfsc	3,2
  4116  0544  2D46               	goto	u1431
  4117  0545  2D47               	goto	u1430
  4118  0546                     u1431:
  4119  0546  2D66               	goto	l1826
  4120  0547                     u1430:
  4121  0547                     l1818:
  4122                           
  4123                           ;main.c: 234:         collect();
  4124  0547  3184  2410  3185   	fcall	_collect
  4125  054A                     l1820:
  4126                           
  4127                           ;main.c: 235:         if (great && life < 3) {
  4128  054A  0020               	movlb	0	; select bank0
  4129  054B  0860               	movf	_great,w
  4130  054C  1903               	btfsc	3,2
  4131  054D  2D4F               	goto	u1441
  4132  054E  2D50               	goto	u1440
  4133  054F                     u1441:
  4134  054F  2D5B               	goto	l238
  4135  0550                     u1440:
  4136  0550                     l1822:
  4137  0550  086F               	movf	_life,w
  4138  0551  3A80               	xorlw	128
  4139  0552  3E7D               	addlw	-131
  4140  0553  1803               	skipnc
  4141  0554  2D56               	goto	u1451
  4142  0555  2D57               	goto	u1450
  4143  0556                     u1451:
  4144  0556  2D5B               	goto	l238
  4145  0557                     u1450:
  4146  0557                     l1824:
  4147                           
  4148                           ;main.c: 236:             life++;
  4149  0557  3001               	movlw	1
  4150  0558  00CB               	movwf	??_checkHit
  4151  0559  084B               	movf	??_checkHit,w
  4152  055A  07EF               	addwf	_life,f
  4153  055B                     l238:	
  4154                           ;main.c: 237:         }
  4155                           
  4156                           
  4157                           ;main.c: 238:         great = !great;
  4158  055B  0860               	movf	_great,w
  4159  055C  1903               	btfsc	3,2
  4160  055D  2D5F               	goto	u1461
  4161  055E  2D61               	goto	u1460
  4162  055F                     u1461:
  4163  055F  3001               	movlw	1
  4164  0560  2D62               	goto	u1470
  4165  0561                     u1460:
  4166  0561  3000               	movlw	0
  4167  0562                     u1470:
  4168  0562  00CB               	movwf	??_checkHit
  4169  0563  084B               	movf	??_checkHit,w
  4170  0564  00E0               	movwf	_great
  4171                           
  4172                           ;main.c: 239:     } else {
  4173  0565  2D85               	goto	l243
  4174  0566                     l1826:
  4175                           
  4176                           ;main.c: 240:         incollect();
  4177  0566  3186  2662  3185   	fcall	_incollect
  4178  0569                     l1828:
  4179                           
  4180                           ;main.c: 241:         great = 0;
  4181  0569  0020               	movlb	0	; select bank0
  4182  056A  01E0               	clrf	_great
  4183  056B                     l1830:
  4184                           
  4185                           ;main.c: 242:         if (cursor & 0b1000000001) {
  4186  056B  3001               	movlw	1
  4187  056C  056D               	andwf	_cursor,w
  4188  056D  00CB               	movwf	??_checkHit
  4189  056E  3002               	movlw	2
  4190  056F  056E               	andwf	_cursor+1,w
  4191  0570  00CC               	movwf	??_checkHit+1
  4192  0571  084B               	movf	??_checkHit,w
  4193  0572  044C               	iorwf	??_checkHit+1,w
  4194  0573  1903               	btfsc	3,2
  4195  0574  2D76               	goto	u1481
  4196  0575  2D77               	goto	u1480
  4197  0576                     u1481:
  4198  0576  2D7C               	goto	l1834
  4199  0577                     u1480:
  4200  0577                     l1832:
  4201                           
  4202                           ;main.c: 243:             life -= 2;
  4203  0577  30FE               	movlw	254
  4204  0578  00CB               	movwf	??_checkHit
  4205  0579  084B               	movf	??_checkHit,w
  4206  057A  07EF               	addwf	_life,f
  4207                           
  4208                           ;main.c: 244:         } else {
  4209  057B  2D80               	goto	l1836
  4210  057C                     l1834:
  4211                           
  4212                           ;main.c: 245:             life--;
  4213  057C  30FF               	movlw	255
  4214  057D  00CB               	movwf	??_checkHit
  4215  057E  084B               	movf	??_checkHit,w
  4216  057F  07EF               	addwf	_life,f
  4217  0580                     l1836:
  4218                           
  4219                           ;main.c: 247:         if (life < 0)gameflag = 0;
  4220  0580  1FEF               	btfss	_life,7
  4221  0581  2D83               	goto	u1491
  4222  0582  2D84               	goto	u1490
  4223  0583                     u1491:
  4224  0583  2D85               	goto	l243
  4225  0584                     u1490:
  4226  0584                     l1838:
  4227  0584  01E2               	clrf	_gameflag
  4228  0585                     l243:
  4229  0585  0008               	return
  4230  0586                     __end_of_checkHit:
  4231                           
  4232                           	psect	text14
  4233  0662                     __ptext14:	
  4234 ;; *************** function _incollect *****************
  4235 ;; Defined at:
  4236 ;;		line 222 in file "main.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  i               1    7[COMMON] unsigned char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, pclath, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4250 ;;      Params:         0       0       0       0       0       0       0       0
  4251 ;;      Locals:         1       0       0       0       0       0       0       0
  4252 ;;      Temps:          2       0       0       0       0       0       0       0
  4253 ;;      Totals:         3       0       0       0       0       0       0       0
  4254 ;;Total ram usage:        3 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; Hardware stack levels required when called: 4
  4257 ;; This function calls:
  4258 ;;		_tone
  4259 ;; This function is called by:
  4260 ;;		_checkHit
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264  0662                     _incollect:	
  4265                           ;psect for function _incollect
  4266                           
  4267  0662                     l1580:	
  4268                           ;incstack = 0
  4269                           ; Regs used in _incollect: [wreg+status,2+status,0+pclath+cstack]
  4270                           
  4271                           
  4272                           ;main.c: 223:     for (uint8_t i = 0; i < 10; i++) {
  4273  0662  01F7               	clrf	incollect@i
  4274  0663                     l1586:
  4275                           
  4276                           ;main.c: 224:         tone(500);
  4277  0663  30F4               	movlw	244
  4278  0664  00F1               	movwf	tone@freq
  4279  0665  3001               	movlw	1
  4280  0666  00F2               	movwf	tone@freq+1
  4281  0667  3187  27D6  3186   	fcall	_tone
  4282  066A                     l1588:
  4283                           
  4284                           ;main.c: 225:         _delay((unsigned long)((50)*(16000000/4000.0)));
  4285  066A  3002               	movlw	2
  4286  066B  00F6               	movwf	??_incollect+1
  4287  066C  3004               	movlw	4
  4288  066D  00F5               	movwf	??_incollect
  4289  066E  30BA               	movlw	186
  4290  066F                     u2257:
  4291  066F  0B89               	decfsz	9,f
  4292  0670  2E6F               	goto	u2257
  4293  0671  0BF5               	decfsz	??_incollect,f
  4294  0672  2E6F               	goto	u2257
  4295  0673  0BF6               	decfsz	??_incollect+1,f
  4296  0674  2E6F               	goto	u2257
  4297  0675  3200               	nop2
  4298  0676                     l1590:
  4299                           
  4300                           ;main.c: 226:         tone(200);
  4301  0676  30C8               	movlw	200
  4302  0677  00F1               	movwf	tone@freq
  4303  0678  3000               	movlw	0
  4304  0679  00F2               	movwf	tone@freq+1
  4305  067A  3187  27D6  3186   	fcall	_tone
  4306                           
  4307                           ;main.c: 227:         _delay((unsigned long)((50)*(16000000/4000.0)));
  4308  067D  3002               	movlw	2
  4309  067E  00F6               	movwf	??_incollect+1
  4310  067F  3004               	movlw	4
  4311  0680  00F5               	movwf	??_incollect
  4312  0681  30BA               	movlw	186
  4313  0682                     u2267:
  4314  0682  0B89               	decfsz	9,f
  4315  0683  2E82               	goto	u2267
  4316  0684  0BF5               	decfsz	??_incollect,f
  4317  0685  2E82               	goto	u2267
  4318  0686  0BF6               	decfsz	??_incollect+1,f
  4319  0687  2E82               	goto	u2267
  4320  0688  3200               	nop2
  4321  0689                     l1592:
  4322                           
  4323                           ;main.c: 228:     }
  4324  0689  3001               	movlw	1
  4325  068A  00F5               	movwf	??_incollect
  4326  068B  0875               	movf	??_incollect,w
  4327  068C  07F7               	addwf	incollect@i,f
  4328  068D                     l1594:
  4329  068D  300A               	movlw	10
  4330  068E  0277               	subwf	incollect@i,w
  4331  068F  1C03               	skipc
  4332  0690  2E92               	goto	u1071
  4333  0691  2E93               	goto	u1070
  4334  0692                     u1071:
  4335  0692  2E63               	goto	l1586
  4336  0693                     u1070:
  4337  0693                     l234:
  4338  0693  0008               	return
  4339  0694                     __end_of_incollect:
  4340                           
  4341                           	psect	text15
  4342  0410                     __ptext15:	
  4343 ;; *************** function _collect *****************
  4344 ;; Defined at:
  4345 ;;		line 200 in file "main.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  i               1   42[BANK0 ] unsigned char 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      void 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0, pclath, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4359 ;;      Params:         0       0       0       0       0       0       0       0
  4360 ;;      Locals:         0       1       0       0       0       0       0       0
  4361 ;;      Temps:          0       1       0       0       0       0       0       0
  4362 ;;      Totals:         0       2       0       0       0       0       0       0
  4363 ;;Total ram usage:        2 bytes
  4364 ;; Hardware stack levels used: 1
  4365 ;; Hardware stack levels required when called: 5
  4366 ;; This function calls:
  4367 ;;		_flashing
  4368 ;;		_noTone
  4369 ;;		_tone
  4370 ;; This function is called by:
  4371 ;;		_checkHit
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375  0410                     _collect:	
  4376                           ;psect for function _collect
  4377                           
  4378  0410                     l1542:	
  4379                           ;incstack = 0
  4380                           ; Regs used in _collect: [wreg+status,2+status,0+pclath+cstack]
  4381                           
  4382                           
  4383                           ;main.c: 201:     for (uint8_t i = 0; i < 10; i++) {
  4384  0410  0020               	movlb	0	; select bank0
  4385  0411  01CA               	clrf	collect@i
  4386  0412                     l1548:
  4387                           
  4388                           ;main.c: 202:         great = !great;
  4389  0412  0860               	movf	_great,w
  4390  0413  1903               	btfsc	3,2
  4391  0414  2C16               	goto	u991
  4392  0415  2C18               	goto	u990
  4393  0416                     u991:
  4394  0416  3001               	movlw	1
  4395  0417  2C19               	goto	u1000
  4396  0418                     u990:
  4397  0418  3000               	movlw	0
  4398  0419                     u1000:
  4399  0419  00C9               	movwf	??_collect
  4400  041A  0849               	movf	??_collect,w
  4401  041B  00E0               	movwf	_great
  4402  041C                     l1550:
  4403                           
  4404                           ;main.c: 203:         flashing();
  4405  041C  3184  24E5  3184   	fcall	_flashing
  4406  041F                     l1552:
  4407                           
  4408                           ;main.c: 204:         tone(2000);
  4409  041F  30D0               	movlw	208
  4410  0420  00F1               	movwf	tone@freq
  4411  0421  3007               	movlw	7
  4412  0422  00F2               	movwf	tone@freq+1
  4413  0423  3187  27D6  3184   	fcall	_tone
  4414  0426                     l1554:
  4415                           
  4416                           ;main.c: 205:         _delay((unsigned long)((17)*(16000000/4000.0)));
  4417  0426  3059               	movlw	89
  4418  0427  0020               	movlb	0	; select bank0
  4419  0428  00C9               	movwf	??_collect
  4420  0429  304E               	movlw	78
  4421  042A                     u2277:
  4422  042A  0B89               	decfsz	9,f
  4423  042B  2C2A               	goto	u2277
  4424  042C  0BC9               	decfsz	??_collect,f
  4425  042D  2C2A               	goto	u2277
  4426  042E  0000               	nop
  4427  042F                     l1556:
  4428                           
  4429                           ;main.c: 206:         great = !great;
  4430  042F  0020               	movlb	0	; select bank0
  4431  0430  0860               	movf	_great,w
  4432  0431  1903               	btfsc	3,2
  4433  0432  2C34               	goto	u1011
  4434  0433  2C36               	goto	u1010
  4435  0434                     u1011:
  4436  0434  3001               	movlw	1
  4437  0435  2C37               	goto	u1020
  4438  0436                     u1010:
  4439  0436  3000               	movlw	0
  4440  0437                     u1020:
  4441  0437  00C9               	movwf	??_collect
  4442  0438  0849               	movf	??_collect,w
  4443  0439  00E0               	movwf	_great
  4444  043A                     l1558:
  4445                           
  4446                           ;main.c: 207:         flashing();
  4447  043A  3184  24E5  3184   	fcall	_flashing
  4448  043D                     l1560:
  4449                           
  4450                           ;main.c: 208:         tone(1000);
  4451  043D  30E8               	movlw	232
  4452  043E  00F1               	movwf	tone@freq
  4453  043F  3003               	movlw	3
  4454  0440  00F2               	movwf	tone@freq+1
  4455  0441  3187  27D6  3184   	fcall	_tone
  4456                           
  4457                           ;main.c: 209:         _delay((unsigned long)((17)*(16000000/4000.0)));
  4458  0444  3059               	movlw	89
  4459  0445  0020               	movlb	0	; select bank0
  4460  0446  00C9               	movwf	??_collect
  4461  0447  304E               	movlw	78
  4462  0448                     u2287:
  4463  0448  0B89               	decfsz	9,f
  4464  0449  2C48               	goto	u2287
  4465  044A  0BC9               	decfsz	??_collect,f
  4466  044B  2C48               	goto	u2287
  4467  044C  0000               	nop
  4468  044D                     l1562:
  4469                           
  4470                           ;main.c: 210:         great = !great;
  4471  044D  0020               	movlb	0	; select bank0
  4472  044E  0860               	movf	_great,w
  4473  044F  1903               	btfsc	3,2
  4474  0450  2C52               	goto	u1031
  4475  0451  2C54               	goto	u1030
  4476  0452                     u1031:
  4477  0452  3001               	movlw	1
  4478  0453  2C55               	goto	u1040
  4479  0454                     u1030:
  4480  0454  3000               	movlw	0
  4481  0455                     u1040:
  4482  0455  00C9               	movwf	??_collect
  4483  0456  0849               	movf	??_collect,w
  4484  0457  00E0               	movwf	_great
  4485  0458                     l1564:
  4486                           
  4487                           ;main.c: 211:         flashing();
  4488  0458  3184  24E5  3184   	fcall	_flashing
  4489  045B                     l1566:
  4490                           
  4491                           ;main.c: 212:         tone(4000);
  4492  045B  30A0               	movlw	160
  4493  045C  00F1               	movwf	tone@freq
  4494  045D  300F               	movlw	15
  4495  045E  00F2               	movwf	tone@freq+1
  4496  045F  3187  27D6  3184   	fcall	_tone
  4497  0462                     l1568:
  4498                           
  4499                           ;main.c: 213:         _delay((unsigned long)((16)*(16000000/4000.0)));
  4500  0462  3054               	movlw	84
  4501  0463  0020               	movlb	0	; select bank0
  4502  0464  00C9               	movwf	??_collect
  4503  0465  301C               	movlw	28
  4504  0466                     u2297:
  4505  0466  0B89               	decfsz	9,f
  4506  0467  2C66               	goto	u2297
  4507  0468  0BC9               	decfsz	??_collect,f
  4508  0469  2C66               	goto	u2297
  4509  046A  0000               	nop
  4510                           
  4511                           ;main.c: 214:     }
  4512  046B  3001               	movlw	1
  4513  046C  0020               	movlb	0	; select bank0
  4514  046D  00C9               	movwf	??_collect
  4515  046E  0849               	movf	??_collect,w
  4516  046F  07CA               	addwf	collect@i,f
  4517  0470                     l1570:
  4518  0470  300A               	movlw	10
  4519  0471  024A               	subwf	collect@i,w
  4520  0472  1C03               	skipc
  4521  0473  2C75               	goto	u1051
  4522  0474  2C76               	goto	u1050
  4523  0475                     u1051:
  4524  0475  2C12               	goto	l1548
  4525  0476                     u1050:
  4526  0476                     l1572:
  4527                           
  4528                           ;main.c: 215:     noTone();
  4529  0476  3187  27FD  3184   	fcall	_noTone
  4530  0479                     l1574:
  4531                           
  4532                           ;main.c: 216:     if (velocity != 1)velocity--;
  4533  0479  0020               	movlb	0	; select bank0
  4534  047A  036B               	decf	_velocity,w
  4535  047B  046C               	iorwf	_velocity+1,w
  4536  047C  1903               	btfsc	3,2
  4537  047D  2C7F               	goto	u1061
  4538  047E  2C80               	goto	u1060
  4539  047F                     u1061:
  4540  047F  2C84               	goto	l228
  4541  0480                     u1060:
  4542  0480                     l1576:
  4543  0480  3001               	movlw	1
  4544  0481  02EB               	subwf	_velocity,f
  4545  0482  3000               	movlw	0
  4546  0483  3BEC               	subwfb	_velocity+1,f
  4547  0484                     l228:
  4548                           
  4549                           ;main.c: 217:     point++;
  4550  0484  3001               	movlw	1
  4551  0485  07DB               	addwf	_point,f
  4552  0486  3000               	movlw	0
  4553  0487  3DDC               	addwfc	_point+1,f
  4554  0488                     l229:
  4555  0488  0008               	return
  4556  0489                     __end_of_collect:
  4557                           
  4558                           	psect	text16
  4559  04E5                     __ptext16:	
  4560 ;; *************** function _flashing *****************
  4561 ;; Defined at:
  4562 ;;		line 129 in file "main.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;  nowdisp         2   39[BANK0 ] unsigned short 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      void 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0, pclath, cstack
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4576 ;;      Params:         0       0       0       0       0       0       0       0
  4577 ;;      Locals:         0       2       0       0       0       0       0       0
  4578 ;;      Temps:          0      15       0       0       0       0       0       0
  4579 ;;      Totals:         0      17       0       0       0       0       0       0
  4580 ;;Total ram usage:       17 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; Hardware stack levels required when called: 4
  4583 ;; This function calls:
  4584 ;;		_flashLED
  4585 ;; This function is called by:
  4586 ;;		_collect
  4587 ;;		_main
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591  04E5                     _flashing:	
  4592                           ;psect for function _flashing
  4593                           
  4594  04E5                     l1426:	
  4595                           ;incstack = 0
  4596                           ; Regs used in _flashing: [wreg+status,2+status,0+pclath+cstack]
  4597                           
  4598                           
  4599                           ;main.c: 130:     static uint16_t bdisp = 0;;main.c: 131:     uint16_t nowdisp = (cursor
      +                           << 5) | (0b11100 >> (3 - life)) & 0b11100 | great << 1 | gameflag;
  4600  04E5  0020               	movlb	0	; select bank0
  4601  04E6  0862               	movf	_gameflag,w
  4602  04E7  00B8               	movwf	??_flashing
  4603  04E8  01B9               	clrf	??_flashing+1
  4604  04E9  0860               	movf	_great,w
  4605  04EA  00BA               	movwf	??_flashing+2
  4606  04EB  01BB               	clrf	??_flashing+3
  4607  04EC  35BA               	lslf	??_flashing+2,f
  4608  04ED  0DBB               	rlf	??_flashing+3,f
  4609  04EE  3003               	movlw	3
  4610  04EF  00BC               	movwf	??_flashing+4
  4611  04F0  086F               	movf	_life,w
  4612  04F1  02BC               	subwf	??_flashing+4,f
  4613  04F2  0ABC               	incf	??_flashing+4,f
  4614  04F3  301C               	movlw	28
  4615  04F4  00BD               	movwf	??_flashing+5
  4616  04F5  3000               	movlw	0
  4617  04F6  00BE               	movwf	??_flashing+6
  4618  04F7  2CFB               	goto	u864
  4619  04F8                     u865:
  4620  04F8  0D3E               	rlf	??_flashing+6,w
  4621  04F9  0CBE               	rrf	??_flashing+6,f
  4622  04FA  0CBD               	rrf	??_flashing+5,f
  4623  04FB                     u864:
  4624  04FB  0BBC               	decfsz	??_flashing+4,f
  4625  04FC  2CF8               	goto	u865
  4626  04FD  301C               	movlw	28
  4627  04FE  0020               	movlb	0	; select bank0
  4628  04FF  053D               	andwf	??_flashing+5,w
  4629  0500  00BF               	movwf	??_flashing+7
  4630  0501  3000               	movlw	0
  4631  0502  053E               	andwf	??_flashing+6,w
  4632  0503  00C0               	movwf	??_flashing+8
  4633  0504  086E               	movf	_cursor+1,w
  4634  0505  00C2               	movwf	??_flashing+10
  4635  0506  086D               	movf	_cursor,w
  4636  0507  00C1               	movwf	??_flashing+9
  4637  0508  3005               	movlw	5
  4638  0509                     u875:
  4639  0509  35C1               	lslf	??_flashing+9,f
  4640  050A  0DC2               	rlf	??_flashing+10,f
  4641  050B  0B89               	decfsz	9,f
  4642  050C  2D09               	goto	u875
  4643  050D  083F               	movf	??_flashing+7,w
  4644  050E  0441               	iorwf	??_flashing+9,w
  4645  050F  00C3               	movwf	??_flashing+11
  4646  0510  0840               	movf	??_flashing+8,w
  4647  0511  0442               	iorwf	??_flashing+10,w
  4648  0512  00C4               	movwf	??_flashing+12
  4649  0513  083A               	movf	??_flashing+2,w
  4650  0514  0443               	iorwf	??_flashing+11,w
  4651  0515  00C5               	movwf	??_flashing+13
  4652  0516  083B               	movf	??_flashing+3,w
  4653  0517  0444               	iorwf	??_flashing+12,w
  4654  0518  00C6               	movwf	??_flashing+14
  4655  0519  0838               	movf	??_flashing,w
  4656  051A  0445               	iorwf	??_flashing+13,w
  4657  051B  00C7               	movwf	flashing@nowdisp
  4658  051C  0839               	movf	??_flashing+1,w
  4659  051D  0446               	iorwf	??_flashing+14,w
  4660  051E  00C8               	movwf	flashing@nowdisp+1
  4661  051F                     l1428:
  4662                           
  4663                           ;main.c: 132:     if (nowdisp != bdisp)flashLED(nowdisp, 15);
  4664  051F  085A               	movf	flashing@bdisp+1,w
  4665  0520  0648               	xorwf	flashing@nowdisp+1,w
  4666  0521  1D03               	skipz
  4667  0522  2D25               	goto	u885
  4668  0523  0859               	movf	flashing@bdisp,w
  4669  0524  0647               	xorwf	flashing@nowdisp,w
  4670  0525                     u885:
  4671  0525  1903               	skipnz
  4672  0526  2D28               	goto	u881
  4673  0527  2D29               	goto	u880
  4674  0528                     u881:
  4675  0528  2D34               	goto	l1432
  4676  0529                     u880:
  4677  0529                     l1430:
  4678  0529  0848               	movf	flashing@nowdisp+1,w
  4679  052A  00B3               	movwf	flashLED@disp+1
  4680  052B  0847               	movf	flashing@nowdisp,w
  4681  052C  00B2               	movwf	flashLED@disp
  4682  052D  300F               	movlw	15
  4683  052E  00B4               	movwf	flashLED@segs
  4684  052F  3000               	movlw	0
  4685  0530  00B5               	movwf	flashLED@segs+1
  4686  0531  3187  2715  3184   	fcall	_flashLED
  4687  0534                     l1432:
  4688                           
  4689                           ;main.c: 133:     bdisp = nowdisp;
  4690  0534  0020               	movlb	0	; select bank0
  4691  0535  0848               	movf	flashing@nowdisp+1,w
  4692  0536  00DA               	movwf	flashing@bdisp+1
  4693  0537  0847               	movf	flashing@nowdisp,w
  4694  0538  00D9               	movwf	flashing@bdisp
  4695  0539                     l211:
  4696  0539  0008               	return
  4697  053A                     __end_of_flashing:
  4698                           
  4699                           	psect	text17
  4700  0715                     __ptext17:	
  4701 ;; *************** function _flashLED *****************
  4702 ;; Defined at:
  4703 ;;		line 96 in file "main.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  disp            2   18[BANK0 ] unsigned int 
  4706 ;;  segs            2   20[BANK0 ] int 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  i               1   23[BANK0 ] unsigned char 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4718 ;;      Params:         0       4       0       0       0       0       0       0
  4719 ;;      Locals:         0       1       0       0       0       0       0       0
  4720 ;;      Temps:          0       1       0       0       0       0       0       0
  4721 ;;      Totals:         0       6       0       0       0       0       0       0
  4722 ;;Total ram usage:        6 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; Hardware stack levels required when called: 3
  4725 ;; This function calls:
  4726 ;;		Nothing
  4727 ;; This function is called by:
  4728 ;;		_flashing
  4729 ;;		_dispExact
  4730 ;;		_result
  4731 ;;		_main
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735  0715                     _flashLED:	
  4736                           ;psect for function _flashLED
  4737                           
  4738  0715                     l1404:	
  4739                           ;incstack = 0
  4740                           ; Regs used in _flashLED: [wreg+status,2+status,0]
  4741                           
  4742                           
  4743                           ;main.c: 97:     for (unsigned char i = 0; i < segs; i++) {
  4744  0715  0020               	movlb	0	; select bank0
  4745  0716  01B7               	clrf	flashLED@i
  4746  0717  2F2D               	goto	l1410
  4747  0718                     l190:
  4748                           
  4749                           ;main.c: 98:         PORTCbits.RC5 = 0;
  4750  0718  0020               	movlb	0	; select bank0
  4751  0719  128E               	bcf	14,5	;volatile
  4752  071A                     l1406:
  4753                           
  4754                           ;main.c: 99:         PORTCbits.RC4 = (disp & 0b1);
  4755  071A  0832               	movf	flashLED@disp,w
  4756  071B  3901               	andlw	1
  4757  071C  00B6               	movwf	??_flashLED
  4758  071D  0EB6               	swapf	??_flashLED,f
  4759  071E  080E               	movf	14,w	;volatile
  4760  071F  0636               	xorwf	??_flashLED,w
  4761  0720  39EF               	andlw	-17
  4762  0721  0636               	xorwf	??_flashLED,w
  4763  0722  008E               	movwf	14	;volatile
  4764                           
  4765                           ;main.c: 100:         disp >>= 1;
  4766  0723  3001               	movlw	1
  4767  0724                     u845:
  4768  0724  36B3               	lsrf	flashLED@disp+1,f
  4769  0725  0CB2               	rrf	flashLED@disp,f
  4770  0726  0B89               	decfsz	9,f
  4771  0727  2F24               	goto	u845
  4772  0728                     l1408:
  4773                           
  4774                           ;main.c: 101:         PORTCbits.RC5 = 1;
  4775  0728  168E               	bsf	14,5	;volatile
  4776                           
  4777                           ;main.c: 102:     }
  4778  0729  3001               	movlw	1
  4779  072A  00B6               	movwf	??_flashLED
  4780  072B  0836               	movf	??_flashLED,w
  4781  072C  07B7               	addwf	flashLED@i,f
  4782  072D                     l1410:
  4783  072D  0835               	movf	flashLED@segs+1,w
  4784  072E  3A80               	xorlw	128
  4785  072F  3C80               	sublw	128
  4786  0730  1D03               	skipz
  4787  0731  2F34               	goto	u855
  4788  0732  0834               	movf	flashLED@segs,w
  4789  0733  0237               	subwf	flashLED@i,w
  4790  0734                     u855:
  4791  0734  1C03               	skipc
  4792  0735  2F37               	goto	u851
  4793  0736  2F38               	goto	u850
  4794  0737                     u851:
  4795  0737  2F18               	goto	l190
  4796  0738                     u850:
  4797  0738                     l191:
  4798                           
  4799                           ;main.c: 103:     PORTCbits.RC5 = 0;
  4800  0738  0020               	movlb	0	; select bank0
  4801  0739  128E               	bcf	14,5	;volatile
  4802                           
  4803                           ;main.c: 104:     PORTCbits.RC3 = 1;
  4804  073A  158E               	bsf	14,3	;volatile
  4805                           
  4806                           ;main.c: 105:     PORTCbits.RC3 = 0;
  4807  073B  118E               	bcf	14,3	;volatile
  4808  073C                     l192:
  4809  073C  0008               	return
  4810  073D                     __end_of_flashLED:
  4811                           
  4812                           	psect	text18
  4813  0FDF                     __ptext18:	
  4814 ;; *************** function _SYSTEM_Initialize *****************
  4815 ;; Defined at:
  4816 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0, pclath, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4830 ;;      Params:         0       0       0       0       0       0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0       0
  4833 ;;      Totals:         0       0       0       0       0       0       0       0
  4834 ;;Total ram usage:        0 bytes
  4835 ;; Hardware stack levels used: 1
  4836 ;; Hardware stack levels required when called: 5
  4837 ;; This function calls:
  4838 ;;		_NCO1_Initialize
  4839 ;;		_OSCILLATOR_Initialize
  4840 ;;		_PIN_MANAGER_Initialize
  4841 ;;		_TMR0_Initialize
  4842 ;;		_WDT_Initialize
  4843 ;; This function is called by:
  4844 ;;		_main
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848  0FDF                     _SYSTEM_Initialize:	
  4849                           ;psect for function _SYSTEM_Initialize
  4850                           
  4851  0FDF                     l1660:	
  4852                           ;incstack = 0
  4853                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4854                           
  4855                           
  4856                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4857  0FDF  3187  27A4  318F   	fcall	_PIN_MANAGER_Initialize
  4858                           
  4859                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4860  0FE2  318F  27A3  318F   	fcall	_OSCILLATOR_Initialize
  4861                           
  4862                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4863  0FE5  318F  279A  318F   	fcall	_WDT_Initialize
  4864                           
  4865                           ;mcc_generated_files/mcc.c: 56:     NCO1_Initialize();
  4866  0FE8  318F  27D2  318F   	fcall	_NCO1_Initialize
  4867                           
  4868                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4869  0FEB  3187  27EB  318F   	fcall	_TMR0_Initialize
  4870  0FEE                     l19:
  4871  0FEE  0008               	return
  4872  0FEF                     __end_of_SYSTEM_Initialize:
  4873                           
  4874                           	psect	text19
  4875  0F9A                     __ptext19:	
  4876 ;; *************** function _WDT_Initialize *****************
  4877 ;; Defined at:
  4878 ;;		line 68 in file "mcc_generated_files/mcc.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;		None
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;		None
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4892 ;;      Params:         0       0       0       0       0       0       0       0
  4893 ;;      Locals:         0       0       0       0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0
  4895 ;;      Totals:         0       0       0       0       0       0       0       0
  4896 ;;Total ram usage:        0 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; Hardware stack levels required when called: 3
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_SYSTEM_Initialize
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906  0F9A                     _WDT_Initialize:	
  4907                           ;psect for function _WDT_Initialize
  4908                           
  4909  0F9A                     l1474:	
  4910                           ;incstack = 0
  4911                           ; Regs used in _WDT_Initialize: [wreg]
  4912                           
  4913                           
  4914                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  4915  0F9A  3016               	movlw	22
  4916  0F9B  0021               	movlb	1	; select bank1
  4917  0F9C  0097               	movwf	23	;volatile
  4918  0F9D                     l25:
  4919  0F9D  0008               	return
  4920  0F9E                     __end_of_WDT_Initialize:
  4921                           
  4922                           	psect	text20
  4923  07EB                     __ptext20:	
  4924 ;; *************** function _TMR0_Initialize *****************
  4925 ;; Defined at:
  4926 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;		None
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0, pclath, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4940 ;;      Params:         0       0       0       0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0
  4943 ;;      Totals:         0       0       0       0       0       0       0       0
  4944 ;;Total ram usage:        0 bytes
  4945 ;; Hardware stack levels used: 1
  4946 ;; Hardware stack levels required when called: 4
  4947 ;; This function calls:
  4948 ;;		_TMR0_SetInterruptHandler
  4949 ;; This function is called by:
  4950 ;;		_SYSTEM_Initialize
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954  07EB                     _TMR0_Initialize:	
  4955                           ;psect for function _TMR0_Initialize
  4956                           
  4957  07EB                     l1488:	
  4958                           ;incstack = 0
  4959                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4960                           
  4961                           
  4962                           ;mcc_generated_files/tmr0.c: 70:     OPTION_REG = (uint8_t) ((OPTION_REG & 0xC0) | (0xD7
      +                           & 0x3F));
  4963  07EB  0021               	movlb	1	; select bank1
  4964  07EC  0815               	movf	21,w	;volatile
  4965  07ED  39C0               	andlw	192
  4966  07EE  3817               	iorlw	23
  4967  07EF  0095               	movwf	21	;volatile
  4968  07F0                     l1490:
  4969                           
  4970                           ;mcc_generated_files/tmr0.c: 73:     TMR0 = 0x00;
  4971  07F0  0020               	movlb	0	; select bank0
  4972  07F1  0195               	clrf	21	;volatile
  4973  07F2                     l1492:
  4974                           
  4975                           ;mcc_generated_files/tmr0.c: 76:     timer0ReloadVal = 0;
  4976  07F2  01FC               	clrf	_timer0ReloadVal	;volatile
  4977  07F3                     l1494:
  4978                           
  4979                           ;mcc_generated_files/tmr0.c: 79:     INTCONbits.TMR0IF = 0;
  4980  07F3  110B               	bcf	11,2	;volatile
  4981  07F4                     l1496:
  4982                           
  4983                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IE = 1;
  4984  07F4  168B               	bsf	11,5	;volatile
  4985  07F5                     l1498:
  4986                           
  4987                           ;mcc_generated_files/tmr0.c: 85:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4988  07F5  30BD               	movlw	low _TMR0_DefaultInterruptHandler
  4989  07F6  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4990  07F7  3007               	movlw	high _TMR0_DefaultInterruptHandler
  4991  07F8  00F2               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4992  07F9  318F  27A9  3187   	fcall	_TMR0_SetInterruptHandler
  4993  07FC                     l98:
  4994  07FC  0008               	return
  4995  07FD                     __end_of_TMR0_Initialize:
  4996                           
  4997                           	psect	text21
  4998  0FA9                     __ptext21:	
  4999 ;; *************** function _TMR0_SetInterruptHandler *****************
  5000 ;; Defined at:
  5001 ;;		line 120 in file "mcc_generated_files/tmr0.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  5004 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5016 ;;      Params:         2       0       0       0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0       0
  5019 ;;      Totals:         2       0       0       0       0       0       0       0
  5020 ;;Total ram usage:        2 bytes
  5021 ;; Hardware stack levels used: 1
  5022 ;; Hardware stack levels required when called: 3
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_TMR0_Initialize
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030  0FA9                     _TMR0_SetInterruptHandler:	
  5031                           ;psect for function _TMR0_SetInterruptHandler
  5032                           
  5033  0FA9                     l1412:	
  5034                           ;incstack = 0
  5035                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5036                           
  5037                           
  5038                           ;mcc_generated_files/tmr0.c: 121:     TMR0_InterruptHandler = InterruptHandler;
  5039  0FA9  0872               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  5040  0FAA  0021               	movlb	1	; select bank1
  5041  0FAB  00A1               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  5042  0FAC  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  5043  0FAD  00A0               	movwf	_TMR0_InterruptHandler^(0+128)
  5044  0FAE                     l114:
  5045  0FAE  0008               	return
  5046  0FAF                     __end_of_TMR0_SetInterruptHandler:
  5047                           
  5048                           	psect	text22
  5049  07A4                     __ptext22:	
  5050 ;; *************** function _PIN_MANAGER_Initialize *****************
  5051 ;; Defined at:
  5052 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5066 ;;      Params:         0       0       0       0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0
  5069 ;;      Totals:         0       0       0       0       0       0       0       0
  5070 ;;Total ram usage:        0 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 3
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_SYSTEM_Initialize
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080  07A4                     _PIN_MANAGER_Initialize:	
  5081                           ;psect for function _PIN_MANAGER_Initialize
  5082                           
  5083  07A4                     l1450:	
  5084                           ;incstack = 0
  5085                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5086                           
  5087                           
  5088                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5089  07A4  0022               	movlb	2	; select bank2
  5090  07A5  018C               	clrf	12	;volatile
  5091                           
  5092                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5093  07A6  018D               	clrf	13	;volatile
  5094                           
  5095                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5096  07A7  018E               	clrf	14	;volatile
  5097  07A8                     l1452:
  5098                           
  5099                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  5100  07A8  303F               	movlw	63
  5101  07A9  0021               	movlb	1	; select bank1
  5102  07AA  008C               	movwf	12	;volatile
  5103  07AB                     l1454:
  5104                           
  5105                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  5106  07AB  30F0               	movlw	240
  5107  07AC  008D               	movwf	13	;volatile
  5108  07AD                     l1456:
  5109                           
  5110                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xC5;
  5111  07AD  30C5               	movlw	197
  5112  07AE  008E               	movwf	14	;volatile
  5113  07AF                     l1458:
  5114                           
  5115                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xC0;
  5116  07AF  30C0               	movlw	192
  5117  07B0  0023               	movlb	3	; select bank3
  5118  07B1  008E               	movwf	14	;volatile
  5119                           
  5120                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  5121  07B2  018D               	clrf	13	;volatile
  5122  07B3                     l1460:
  5123                           
  5124                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  5125  07B3  3017               	movlw	23
  5126  07B4  008C               	movwf	12	;volatile
  5127  07B5                     l1462:
  5128                           
  5129                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5130  07B5  0024               	movlb	4	; select bank4
  5131  07B6  018D               	clrf	13	;volatile
  5132  07B7                     l1464:
  5133                           
  5134                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5135  07B7  018C               	clrf	12	;volatile
  5136  07B8                     l1466:
  5137                           
  5138                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 0;
  5139  07B8  0021               	movlb	1	; select bank1
  5140  07B9  1395               	bcf	21,7	;volatile
  5141  07BA                     l1468:
  5142                           
  5143                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  5144  07BA  0022               	movlb	2	; select bank2
  5145  07BB  019D               	clrf	29	;volatile
  5146  07BC                     l54:
  5147  07BC  0008               	return
  5148  07BD                     __end_of_PIN_MANAGER_Initialize:
  5149                           
  5150                           	psect	text23
  5151  0FA3                     __ptext23:	
  5152 ;; *************** function _OSCILLATOR_Initialize *****************
  5153 ;; Defined at:
  5154 ;;		line 60 in file "mcc_generated_files/mcc.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5168 ;;      Params:         0       0       0       0       0       0       0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0
  5171 ;;      Totals:         0       0       0       0       0       0       0       0
  5172 ;;Total ram usage:        0 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; Hardware stack levels required when called: 3
  5175 ;; This function calls:
  5176 ;;		Nothing
  5177 ;; This function is called by:
  5178 ;;		_SYSTEM_Initialize
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182  0FA3                     _OSCILLATOR_Initialize:	
  5183                           ;psect for function _OSCILLATOR_Initialize
  5184                           
  5185  0FA3                     l1470:	
  5186                           ;incstack = 0
  5187                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5188                           
  5189                           
  5190                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x78;
  5191  0FA3  3078               	movlw	120
  5192  0FA4  0021               	movlb	1	; select bank1
  5193  0FA5  0099               	movwf	25	;volatile
  5194  0FA6                     l1472:
  5195                           
  5196                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  5197  0FA6  0022               	movlb	2	; select bank2
  5198  0FA7  0196               	clrf	22	;volatile
  5199  0FA8                     l22:
  5200  0FA8  0008               	return
  5201  0FA9                     __end_of_OSCILLATOR_Initialize:
  5202                           
  5203                           	psect	text24
  5204  0FD2                     __ptext24:	
  5205 ;; *************** function _NCO1_Initialize *****************
  5206 ;; Defined at:
  5207 ;;		line 58 in file "mcc_generated_files/nco1.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;		None
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;		None
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5221 ;;      Params:         0       0       0       0       0       0       0       0
  5222 ;;      Locals:         0       0       0       0       0       0       0       0
  5223 ;;      Temps:          0       0       0       0       0       0       0       0
  5224 ;;      Totals:         0       0       0       0       0       0       0       0
  5225 ;;Total ram usage:        0 bytes
  5226 ;; Hardware stack levels used: 1
  5227 ;; Hardware stack levels required when called: 3
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_SYSTEM_Initialize
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235  0FD2                     _NCO1_Initialize:	
  5236                           ;psect for function _NCO1_Initialize
  5237                           
  5238  0FD2                     l1476:	
  5239                           ;incstack = 0
  5240                           ; Regs used in _NCO1_Initialize: [wreg+status,2]
  5241                           
  5242                           
  5243                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x40;
  5244  0FD2  3040               	movlw	64
  5245  0FD3  0029               	movlb	9	; select bank9
  5246  0FD4  009E               	movwf	30	;volatile
  5247                           
  5248                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x01;
  5249  0FD5  3001               	movlw	1
  5250  0FD6  009F               	movwf	31	;volatile
  5251  0FD7                     l1478:
  5252                           
  5253                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
  5254  0FD7  019A               	clrf	26	;volatile
  5255  0FD8                     l1480:
  5256                           
  5257                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
  5258  0FD8  0199               	clrf	25	;volatile
  5259  0FD9                     l1482:
  5260                           
  5261                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
  5262  0FD9  0198               	clrf	24	;volatile
  5263  0FDA                     l1484:
  5264                           
  5265                           ;mcc_generated_files/nco1.c: 72:     NCO1INCH = 0x00;
  5266  0FDA  019C               	clrf	28	;volatile
  5267                           
  5268                           ;mcc_generated_files/nco1.c: 74:     NCO1INCL = 0x83;
  5269  0FDB  3083               	movlw	131
  5270  0FDC  009B               	movwf	27	;volatile
  5271  0FDD                     l1486:
  5272                           
  5273                           ;mcc_generated_files/nco1.c: 77:     NCO1CONbits.N1EN = 1;
  5274  0FDD  179E               	bsf	30,7	;volatile
  5275  0FDE                     l76:
  5276  0FDE  0008               	return
  5277  0FDF                     __end_of_NCO1_Initialize:
  5278                           
  5279                           	psect	text25
  5280  0694                     __ptext25:	
  5281 ;; *************** function _R_BTN_run *****************
  5282 ;; Defined at:
  5283 ;;		line 69 in file "main.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  ffptr           2    7[COMMON] PTR FTN()void 
  5286 ;;		 -> start(1), 
  5287 ;;  lfptr           2    9[COMMON] PTR FTN()void 
  5288 ;;		 -> Absolute function(1), 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;		None
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  1    wreg      void 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0, pclath, cstack
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5300 ;;      Params:         4       0       0       0       0       0       0       0
  5301 ;;      Locals:         0       0       0       0       0       0       0       0
  5302 ;;      Temps:          0       2       0       0       0       0       0       0
  5303 ;;      Totals:         4       2       0       0       0       0       0       0
  5304 ;;Total ram usage:        6 bytes
  5305 ;; Hardware stack levels used: 1
  5306 ;; Hardware stack levels required when called: 5
  5307 ;; This function calls:
  5308 ;;		_start
  5309 ;; This function is called by:
  5310 ;;		_main
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314  0694                     _R_BTN_run:	
  5315                           ;psect for function _R_BTN_run
  5316                           
  5317  0694                     l2024:	
  5318                           ;incstack = 0
  5319                           ; Regs used in _R_BTN_run: [wreg+status,2+status,0+pclath+cstack]
  5320                           
  5321                           
  5322                           ;main.c: 70:     static _Bool rflag = 0;;main.c: 71:     if (!PORTCbits.RC0 && !rflag) {
  5323  0694  0020               	movlb	0	; select bank0
  5324  0695  180E               	btfsc	14,0	;volatile
  5325  0696  2E98               	goto	u1761
  5326  0697  2E99               	goto	u1760
  5327  0698                     u1761:
  5328  0698  2EB4               	goto	l175
  5329  0699                     u1760:
  5330  0699                     l2026:
  5331  0699  085E               	movf	R_BTN_run@rflag,w
  5332  069A  1D03               	btfss	3,2
  5333  069B  2E9D               	goto	u1771
  5334  069C  2E9E               	goto	u1770
  5335  069D                     u1771:
  5336  069D  2EB4               	goto	l175
  5337  069E                     u1770:
  5338  069E                     l2028:
  5339                           
  5340                           ;main.c: 72:         ffptr();
  5341  069E  0878               	movf	R_BTN_run@ffptr+1,w
  5342  069F  008A               	movwf	10
  5343  06A0  0877               	movf	R_BTN_run@ffptr,w
  5344  06A1  000A               	callw
  5345  06A2  3186               	pagesel	$
  5346  06A3                     l2030:
  5347                           
  5348                           ;main.c: 73:         rflag = 1;
  5349  06A3  0020               	movlb	0	; select bank0
  5350  06A4  01DE               	clrf	R_BTN_run@rflag
  5351  06A5  0ADE               	incf	R_BTN_run@rflag,f
  5352  06A6                     l2032:
  5353                           
  5354                           ;main.c: 74:         _delay((unsigned long)((50)*(16000000/4000.0)));
  5355  06A6  3002               	movlw	2
  5356  06A7  0020               	movlb	0	; select bank0
  5357  06A8  00A1               	movwf	??_R_BTN_run+1
  5358  06A9  3004               	movlw	4
  5359  06AA  00A0               	movwf	??_R_BTN_run
  5360  06AB  30BA               	movlw	186
  5361  06AC                     u2307:
  5362  06AC  0B89               	decfsz	9,f
  5363  06AD  2EAC               	goto	u2307
  5364  06AE  0BA0               	decfsz	??_R_BTN_run,f
  5365  06AF  2EAC               	goto	u2307
  5366  06B0  0BA1               	decfsz	??_R_BTN_run+1,f
  5367  06B1  2EAC               	goto	u2307
  5368  06B2  0000               	nop
  5369                           
  5370                           ;main.c: 75:     } else if (PORTCbits.RC0 && rflag) {
  5371  06B3  2EBF               	goto	l178
  5372  06B4                     l175:
  5373  06B4  1C0E               	btfss	14,0	;volatile
  5374  06B5  2EB7               	goto	u1781
  5375  06B6  2EB8               	goto	u1780
  5376  06B7                     u1781:
  5377  06B7  2EBF               	goto	l178
  5378  06B8                     u1780:
  5379  06B8                     l2034:
  5380                           
  5381                           ;main.c: 76:         lfptr();
  5382  06B8  085E               	movf	R_BTN_run@rflag,w
  5383  06B9  1903               	btfsc	3,2
  5384  06BA  2EBC               	goto	u1791
  5385  06BB  2EBD               	goto	u1790
  5386  06BC                     u1791:
  5387  06BC  2EBF               	goto	l178
  5388  06BD                     u1790:
  5389  06BD                     l2036:
  5390                           
  5391                           ;main.c: 77:         rflag = 0;
  5392  06BD  01DE               	clrf	R_BTN_run@rflag
  5393  06BE  2EA6               	goto	l2032
  5394  06BF                     l178:
  5395  06BF  0008               	return
  5396  06C0                     __end_of_R_BTN_run:
  5397                           
  5398                           	psect	text26
  5399  06C0                     __ptext26:	
  5400 ;; *************** function _B_BTN_run *****************
  5401 ;; Defined at:
  5402 ;;		line 83 in file "main.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  ffptr           2    7[COMMON] PTR FTN()void 
  5405 ;;		 -> start(1), shiftInv(1), 
  5406 ;;  lfptr           2    9[COMMON] PTR FTN()void 
  5407 ;;		 -> Absolute function(1), 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;		None
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      void 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0, pclath, cstack
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5419 ;;      Params:         4       0       0       0       0       0       0       0
  5420 ;;      Locals:         0       0       0       0       0       0       0       0
  5421 ;;      Temps:          0       2       0       0       0       0       0       0
  5422 ;;      Totals:         4       2       0       0       0       0       0       0
  5423 ;;Total ram usage:        6 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 5
  5426 ;; This function calls:
  5427 ;;		_shiftInv
  5428 ;;		_start
  5429 ;; This function is called by:
  5430 ;;		_main
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434  06C0                     _B_BTN_run:	
  5435                           ;psect for function _B_BTN_run
  5436                           
  5437  06C0                     l2042:	
  5438                           ;incstack = 0
  5439                           ; Regs used in _B_BTN_run: [wreg+status,2+status,0+pclath+cstack]
  5440                           
  5441                           
  5442                           ;main.c: 84:     static _Bool bflag = 0;;main.c: 85:     if (!PORTCbits.RC2 && !bflag) {
  5443  06C0  0020               	movlb	0	; select bank0
  5444  06C1  190E               	btfsc	14,2	;volatile
  5445  06C2  2EC4               	goto	u1801
  5446  06C3  2EC5               	goto	u1800
  5447  06C4                     u1801:
  5448  06C4  2EE0               	goto	l183
  5449  06C5                     u1800:
  5450  06C5                     l2044:
  5451  06C5  085D               	movf	B_BTN_run@bflag,w
  5452  06C6  1D03               	btfss	3,2
  5453  06C7  2EC9               	goto	u1811
  5454  06C8  2ECA               	goto	u1810
  5455  06C9                     u1811:
  5456  06C9  2EE0               	goto	l183
  5457  06CA                     u1810:
  5458  06CA                     l2046:
  5459                           
  5460                           ;main.c: 86:         ffptr();
  5461  06CA  0878               	movf	B_BTN_run@ffptr+1,w
  5462  06CB  008A               	movwf	10
  5463  06CC  0877               	movf	B_BTN_run@ffptr,w
  5464  06CD  000A               	callw
  5465  06CE  3186               	pagesel	$
  5466  06CF                     l2048:
  5467                           
  5468                           ;main.c: 87:         bflag = 1;
  5469  06CF  0020               	movlb	0	; select bank0
  5470  06D0  01DD               	clrf	B_BTN_run@bflag
  5471  06D1  0ADD               	incf	B_BTN_run@bflag,f
  5472  06D2                     l2050:
  5473                           
  5474                           ;main.c: 88:         _delay((unsigned long)((50)*(16000000/4000.0)));
  5475  06D2  3002               	movlw	2
  5476  06D3  0020               	movlb	0	; select bank0
  5477  06D4  00A1               	movwf	??_B_BTN_run+1
  5478  06D5  3004               	movlw	4
  5479  06D6  00A0               	movwf	??_B_BTN_run
  5480  06D7  30BA               	movlw	186
  5481  06D8                     u2317:
  5482  06D8  0B89               	decfsz	9,f
  5483  06D9  2ED8               	goto	u2317
  5484  06DA  0BA0               	decfsz	??_B_BTN_run,f
  5485  06DB  2ED8               	goto	u2317
  5486  06DC  0BA1               	decfsz	??_B_BTN_run+1,f
  5487  06DD  2ED8               	goto	u2317
  5488  06DE  0000               	nop
  5489                           
  5490                           ;main.c: 89:     } else if (PORTCbits.RC2 && bflag) {
  5491  06DF  2EEB               	goto	l186
  5492  06E0                     l183:
  5493  06E0  1D0E               	btfss	14,2	;volatile
  5494  06E1  2EE3               	goto	u1821
  5495  06E2  2EE4               	goto	u1820
  5496  06E3                     u1821:
  5497  06E3  2EEB               	goto	l186
  5498  06E4                     u1820:
  5499  06E4                     l2052:
  5500                           
  5501                           ;main.c: 90:         lfptr();
  5502  06E4  085D               	movf	B_BTN_run@bflag,w
  5503  06E5  1903               	btfsc	3,2
  5504  06E6  2EE8               	goto	u1831
  5505  06E7  2EE9               	goto	u1830
  5506  06E8                     u1831:
  5507  06E8  2EEB               	goto	l186
  5508  06E9                     u1830:
  5509  06E9                     l2054:
  5510                           
  5511                           ;main.c: 91:         bflag = 0;
  5512  06E9  01DD               	clrf	B_BTN_run@bflag
  5513  06EA  2ED2               	goto	l2050
  5514  06EB                     l186:
  5515  06EB  0008               	return
  5516  06EC                     __end_of_B_BTN_run:
  5517                           
  5518                           	psect	text27
  5519  0FC6                     __ptext27:	
  5520 ;; *************** function _shiftInv *****************
  5521 ;; Defined at:
  5522 ;;		line 124 in file "main.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg, status,2, status,0
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5536 ;;      Params:         0       0       0       0       0       0       0       0
  5537 ;;      Locals:         0       0       0       0       0       0       0       0
  5538 ;;      Temps:          1       0       0       0       0       0       0       0
  5539 ;;      Totals:         1       0       0       0       0       0       0       0
  5540 ;;Total ram usage:        1 bytes
  5541 ;; Hardware stack levels used: 1
  5542 ;; Hardware stack levels required when called: 3
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_main
  5547 ;;		_B_BTN_run
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551  0FC6                     _shiftInv:	
  5552                           ;psect for function _shiftInv
  5553                           
  5554  0FC6                     l1518:	
  5555                           ;incstack = 0
  5556                           ; Regs used in _shiftInv: [wreg+status,2+status,0]
  5557                           
  5558                           
  5559                           ;main.c: 125:     shiftToL = !shiftToL;
  5560  0FC6  0020               	movlb	0	; select bank0
  5561  0FC7  085F               	movf	_shiftToL,w
  5562  0FC8  1903               	btfsc	3,2
  5563  0FC9  2FCB               	goto	u971
  5564  0FCA  2FCD               	goto	u970
  5565  0FCB                     u971:
  5566  0FCB  3001               	movlw	1
  5567  0FCC  2FCE               	goto	u980
  5568  0FCD                     u970:
  5569  0FCD  3000               	movlw	0
  5570  0FCE                     u980:
  5571  0FCE  00F1               	movwf	??_shiftInv
  5572  0FCF  0871               	movf	??_shiftInv,w
  5573  0FD0  00DF               	movwf	_shiftToL
  5574  0FD1                     l205:
  5575  0FD1  0008               	return
  5576  0FD2                     __end_of_shiftInv:
  5577                           
  5578                           	psect	text28
  5579  0489                     __ptext28:	
  5580 ;; *************** function _start *****************
  5581 ;; Defined at:
  5582 ;;		line 184 in file "main.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;		None
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;		None
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  1    wreg      void 
  5589 ;; Registers used:
  5590 ;;		wreg, status,2, status,0, pclath, cstack
  5591 ;; Tracked objects:
  5592 ;;		On entry : 0/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5596 ;;      Params:         0       0       0       0       0       0       0       0
  5597 ;;      Locals:         0       0       0       0       0       0       0       0
  5598 ;;      Temps:          2       0       0       0       0       0       0       0
  5599 ;;      Totals:         2       0       0       0       0       0       0       0
  5600 ;;Total ram usage:        2 bytes
  5601 ;; Hardware stack levels used: 1
  5602 ;; Hardware stack levels required when called: 4
  5603 ;; This function calls:
  5604 ;;		_noTone
  5605 ;;		_tone
  5606 ;; This function is called by:
  5607 ;;		_main
  5608 ;;		_R_BTN_run
  5609 ;;		_B_BTN_run
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613  0489                     _start:	
  5614                           ;psect for function _start
  5615                           
  5616  0489                     l1522:	
  5617                           ;incstack = 0
  5618                           ; Regs used in _start: [wreg+status,2+status,0+pclath+cstack]
  5619                           
  5620                           
  5621                           ;main.c: 185:     tone(523);
  5622  0489  300B               	movlw	11
  5623  048A  00F1               	movwf	tone@freq
  5624  048B  3002               	movlw	2
  5625  048C  00F2               	movwf	tone@freq+1
  5626  048D  3187  27D6  3184   	fcall	_tone
  5627  0490                     l1524:
  5628                           
  5629                           ;main.c: 186:     _delay((unsigned long)((250)*(16000000/4000.0)));
  5630  0490  3006               	movlw	6
  5631  0491  00F6               	movwf	??_start+1
  5632  0492  3013               	movlw	19
  5633  0493  00F5               	movwf	??_start
  5634  0494  30AE               	movlw	174
  5635  0495                     u2327:
  5636  0495  0B89               	decfsz	9,f
  5637  0496  2C95               	goto	u2327
  5638  0497  0BF5               	decfsz	??_start,f
  5639  0498  2C95               	goto	u2327
  5640  0499  0BF6               	decfsz	??_start+1,f
  5641  049A  2C95               	goto	u2327
  5642                           
  5643                           ;main.c: 187:     noTone();
  5644  049B  3187  27FD  3184   	fcall	_noTone
  5645  049E                     l1526:
  5646                           
  5647                           ;main.c: 188:     _delay((unsigned long)((125)*(16000000/4000.0)));
  5648  049E  3003               	movlw	3
  5649  049F  00F6               	movwf	??_start+1
  5650  04A0  308A               	movlw	138
  5651  04A1  00F5               	movwf	??_start
  5652  04A2  3056               	movlw	86
  5653  04A3                     u2337:
  5654  04A3  0B89               	decfsz	9,f
  5655  04A4  2CA3               	goto	u2337
  5656  04A5  0BF5               	decfsz	??_start,f
  5657  04A6  2CA3               	goto	u2337
  5658  04A7  0BF6               	decfsz	??_start+1,f
  5659  04A8  2CA3               	goto	u2337
  5660                           
  5661                           ;main.c: 189:     tone(523);
  5662  04A9  300B               	movlw	11
  5663  04AA  00F1               	movwf	tone@freq
  5664  04AB  3002               	movlw	2
  5665  04AC  00F2               	movwf	tone@freq+1
  5666  04AD  3187  27D6  3184   	fcall	_tone
  5667  04B0                     l1528:
  5668                           
  5669                           ;main.c: 190:     _delay((unsigned long)((250)*(16000000/4000.0)));
  5670  04B0  3006               	movlw	6
  5671  04B1  00F6               	movwf	??_start+1
  5672  04B2  3013               	movlw	19
  5673  04B3  00F5               	movwf	??_start
  5674  04B4  30AE               	movlw	174
  5675  04B5                     u2347:
  5676  04B5  0B89               	decfsz	9,f
  5677  04B6  2CB5               	goto	u2347
  5678  04B7  0BF5               	decfsz	??_start,f
  5679  04B8  2CB5               	goto	u2347
  5680  04B9  0BF6               	decfsz	??_start+1,f
  5681  04BA  2CB5               	goto	u2347
  5682  04BB                     l1530:
  5683                           
  5684                           ;main.c: 191:     tone(587);
  5685  04BB  304B               	movlw	75
  5686  04BC  00F1               	movwf	tone@freq
  5687  04BD  3002               	movlw	2
  5688  04BE  00F2               	movwf	tone@freq+1
  5689  04BF  3187  27D6  3184   	fcall	_tone
  5690                           
  5691                           ;main.c: 192:     _delay((unsigned long)((250)*(16000000/4000.0)));
  5692  04C2  3006               	movlw	6
  5693  04C3  00F6               	movwf	??_start+1
  5694  04C4  3013               	movlw	19
  5695  04C5  00F5               	movwf	??_start
  5696  04C6  30AE               	movlw	174
  5697  04C7                     u2357:
  5698  04C7  0B89               	decfsz	9,f
  5699  04C8  2CC7               	goto	u2357
  5700  04C9  0BF5               	decfsz	??_start,f
  5701  04CA  2CC7               	goto	u2357
  5702  04CB  0BF6               	decfsz	??_start+1,f
  5703  04CC  2CC7               	goto	u2357
  5704  04CD                     l1532:
  5705                           
  5706                           ;main.c: 193:     tone(391);
  5707  04CD  3087               	movlw	135
  5708  04CE  00F1               	movwf	tone@freq
  5709  04CF  3001               	movlw	1
  5710  04D0  00F2               	movwf	tone@freq+1
  5711  04D1  3187  27D6  3184   	fcall	_tone
  5712  04D4                     l1534:
  5713                           
  5714                           ;main.c: 194:     _delay((unsigned long)((500)*(16000000/4000.0)));
  5715  04D4  300B               	movlw	11
  5716  04D5  00F6               	movwf	??_start+1
  5717  04D6  3026               	movlw	38
  5718  04D7  00F5               	movwf	??_start
  5719  04D8  305E               	movlw	94
  5720  04D9                     u2367:
  5721  04D9  0B89               	decfsz	9,f
  5722  04DA  2CD9               	goto	u2367
  5723  04DB  0BF5               	decfsz	??_start,f
  5724  04DC  2CD9               	goto	u2367
  5725  04DD  0BF6               	decfsz	??_start+1,f
  5726  04DE  2CD9               	goto	u2367
  5727  04DF                     l1536:
  5728                           
  5729                           ;main.c: 195:     inloop = 1;
  5730  04DF  0020               	movlb	0	; select bank0
  5731  04E0  01E3               	clrf	_inloop
  5732  04E1  0AE3               	incf	_inloop,f
  5733  04E2                     l1538:
  5734                           
  5735                           ;main.c: 196:     gameflag = 1;
  5736  04E2  01E2               	clrf	_gameflag
  5737  04E3  0AE2               	incf	_gameflag,f
  5738  04E4                     l223:
  5739  04E4  0008               	return
  5740  04E5                     __end_of_start:
  5741                           
  5742                           	psect	text29
  5743  07D6                     __ptext29:	
  5744 ;; *************** function _tone *****************
  5745 ;; Defined at:
  5746 ;;		line 18 in file "./toner.h"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  freq            2    1[COMMON] unsigned int 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5760 ;;      Params:         2       0       0       0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0
  5762 ;;      Temps:          2       0       0       0       0       0       0       0
  5763 ;;      Totals:         4       0       0       0       0       0       0       0
  5764 ;;Total ram usage:        4 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; Hardware stack levels required when called: 3
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_shiftL
  5771 ;;		_shiftR
  5772 ;;		_dispExact
  5773 ;;		_start
  5774 ;;		_collect
  5775 ;;		_incollect
  5776 ;;		_result
  5777 ;;		_main
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781  07D6                     _tone:	
  5782                           ;psect for function _tone
  5783                           
  5784  07D6                     l1414:	
  5785                           ;incstack = 0
  5786                           ; Regs used in _tone: [wreg+status,2+status,0]
  5787                           
  5788                           
  5789                           ;./toner.h: 19:         N1OE = 1;
  5790  07D6  0029               	movlb	9	; select bank9
  5791  07D7  171E               	bsf	30,6	;volatile
  5792  07D8                     l1416:
  5793                           
  5794                           ;./toner.h: 20:         freq = freq / 8;
  5795  07D8  0872               	movf	tone@freq+1,w
  5796  07D9  00F4               	movwf	??_tone+1
  5797  07DA  0871               	movf	tone@freq,w
  5798  07DB  00F3               	movwf	??_tone
  5799  07DC  36F4               	lsrf	??_tone+1,f
  5800  07DD  0CF3               	rrf	??_tone,f
  5801  07DE  36F4               	lsrf	??_tone+1,f
  5802  07DF  0CF3               	rrf	??_tone,f
  5803  07E0  36F4               	lsrf	??_tone+1,f
  5804  07E1  0CF3               	rrf	??_tone,f
  5805  07E2  0873               	movf	??_tone,w
  5806  07E3  00F1               	movwf	tone@freq
  5807  07E4  0874               	movf	??_tone+1,w
  5808  07E5  00F2               	movwf	tone@freq+1
  5809  07E6                     l1418:
  5810                           
  5811                           ;./toner.h: 21:         NCO1INCL = freq % 256;
  5812  07E6  0871               	movf	tone@freq,w
  5813  07E7  009B               	movwf	27	;volatile
  5814  07E8                     l1420:
  5815                           
  5816                           ;./toner.h: 22:         NCO1INCH = freq / 256;
  5817  07E8  0872               	movf	tone@freq+1,w
  5818  07E9  009C               	movwf	28	;volatile
  5819  07EA                     l141:
  5820  07EA  0008               	return
  5821  07EB                     __end_of_tone:
  5822                           
  5823                           	psect	text30
  5824  07FD                     __ptext30:	
  5825 ;; *************** function _noTone *****************
  5826 ;; Defined at:
  5827 ;;		line 26 in file "./toner.h"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;		None
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;		None
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		None
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5841 ;;      Params:         0       0       0       0       0       0       0       0
  5842 ;;      Locals:         0       0       0       0       0       0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0
  5844 ;;      Totals:         0       0       0       0       0       0       0       0
  5845 ;;Total ram usage:        0 bytes
  5846 ;; Hardware stack levels used: 1
  5847 ;; Hardware stack levels required when called: 3
  5848 ;; This function calls:
  5849 ;;		Nothing
  5850 ;; This function is called by:
  5851 ;;		_dispExact
  5852 ;;		_start
  5853 ;;		_collect
  5854 ;;		_result
  5855 ;;		_main
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859  07FD                     _noTone:	
  5860                           ;psect for function _noTone
  5861                           
  5862  07FD                     l1424:	
  5863                           ;incstack = 0
  5864                           ; Regs used in _noTone: []
  5865                           
  5866                           
  5867                           ;./toner.h: 27:         N1OE = 0;
  5868  07FD  0029               	movlb	9	; select bank9
  5869  07FE  131E               	bcf	30,6	;volatile
  5870  07FF                     l144:	
  5871                           ;./toner.h: 29:         return;
  5872                           
  5873  07FF  0008               	return
  5874  0800                     __end_of_noTone:
  5875                           
  5876                           	psect	intentry
  5877  0004                     __pintentry:	
  5878 ;; *************** function _INTERRUPT_InterruptManager *****************
  5879 ;; Defined at:
  5880 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1    wreg      void 
  5887 ;; Registers used:
  5888 ;;		wreg, status,2, status,0, pclath, cstack
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5894 ;;      Params:         0       0       0       0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0       0
  5896 ;;      Temps:          0       0       0       0       0       0       0       0
  5897 ;;      Totals:         0       0       0       0       0       0       0       0
  5898 ;;Total ram usage:        0 bytes
  5899 ;; Hardware stack levels used: 1
  5900 ;; Hardware stack levels required when called: 2
  5901 ;; This function calls:
  5902 ;;		_TMR0_ISR
  5903 ;; This function is called by:
  5904 ;;		Interrupt level 1
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908  0004                     _INTERRUPT_InterruptManager:
  5909                           
  5910                           ;incstack = 0
  5911  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5912                           
  5913                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  5914  0005  3180               	pagesel	$
  5915  0006                     i1l1966:
  5916                           
  5917                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5918  0006  1E8B               	btfss	11,5	;volatile
  5919  0007  2809               	goto	u165_21
  5920  0008  280A               	goto	u165_20
  5921  0009                     u165_21:
  5922  0009  2811               	goto	i1l294
  5923  000A                     u165_20:
  5924  000A                     i1l1968:
  5925  000A  1D0B               	btfss	11,2	;volatile
  5926  000B  280D               	goto	u166_21
  5927  000C  280E               	goto	u166_20
  5928  000D                     u166_21:
  5929  000D  2811               	goto	i1l294
  5930  000E                     u166_20:
  5931  000E                     i1l1970:
  5932                           
  5933                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5934  000E  318F  27EF  3180   	fcall	_TMR0_ISR
  5935  0011                     i1l294:	
  5936                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5937                           
  5938  0011  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5939  0012  0009               	retfie
  5940  0013                     __end_of_INTERRUPT_InterruptManager:
  5941                           
  5942                           	psect	text32
  5943  0FEF                     __ptext32:	
  5944 ;; *************** function _TMR0_ISR *****************
  5945 ;; Defined at:
  5946 ;;		line 106 in file "mcc_generated_files/tmr0.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;		None
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      void 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0, pclath, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5960 ;;      Params:         0       0       0       0       0       0       0       0
  5961 ;;      Locals:         0       0       0       0       0       0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0       0
  5963 ;;      Totals:         0       0       0       0       0       0       0       0
  5964 ;;Total ram usage:        0 bytes
  5965 ;; Hardware stack levels used: 1
  5966 ;; Hardware stack levels required when called: 1
  5967 ;; This function calls:
  5968 ;;		Absolute function
  5969 ;;		_TMR0_DefaultInterruptHandler
  5970 ;; This function is called by:
  5971 ;;		_INTERRUPT_InterruptManager
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975  0FEF                     _TMR0_ISR:	
  5976                           ;psect for function _TMR0_ISR
  5977                           
  5978  0FEF                     i1l1662:	
  5979                           ;incstack = 0
  5980                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  5981                           
  5982                           
  5983                           ;mcc_generated_files/tmr0.c: 109:     INTCONbits.TMR0IF = 0;
  5984  0FEF  110B               	bcf	11,2	;volatile
  5985  0FF0                     i1l1664:
  5986                           
  5987                           ;mcc_generated_files/tmr0.c: 111:     TMR0 = timer0ReloadVal;
  5988  0FF0  087C               	movf	_timer0ReloadVal,w	;volatile
  5989  0FF1  0020               	movlb	0	; select bank0
  5990  0FF2  0095               	movwf	21	;volatile
  5991  0FF3                     i1l1666:
  5992                           
  5993                           ;mcc_generated_files/tmr0.c: 113:     if (TMR0_InterruptHandler) {
  5994  0FF3  0021               	movlb	1	; select bank1
  5995  0FF4  0820               	movf	_TMR0_InterruptHandler^(0+128),w
  5996  0FF5  0421               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  5997  0FF6  1903               	btfsc	3,2
  5998  0FF7  2FF9               	goto	u124_21
  5999  0FF8  2FFA               	goto	u124_20
  6000  0FF9                     u124_21:
  6001  0FF9  2FFF               	goto	i1l111
  6002  0FFA                     u124_20:
  6003  0FFA                     i1l1668:
  6004                           
  6005                           ;mcc_generated_files/tmr0.c: 114:         TMR0_InterruptHandler();
  6006  0FFA  0821               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  6007  0FFB  008A               	movwf	10
  6008  0FFC  0820               	movf	_TMR0_InterruptHandler^(0+128),w
  6009  0FFD  000A               	callw
  6010  0FFE  318F               	pagesel	$
  6011  0FFF                     i1l111:
  6012  0FFF  0008               	return
  6013  1000                     __end_of_TMR0_ISR:
  6014                           
  6015                           	psect	text33
  6016  07BD                     __ptext33:	
  6017 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6018 ;; Defined at:
  6019 ;;		line 124 in file "mcc_generated_files/tmr0.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6033 ;;      Params:         0       0       0       0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0       0
  6035 ;;      Temps:          1       0       0       0       0       0       0       0
  6036 ;;      Totals:         1       0       0       0       0       0       0       0
  6037 ;;Total ram usage:        1 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_TMR0_Initialize
  6043 ;;		_TMR0_ISR
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047  07BD                     _TMR0_DefaultInterruptHandler:	
  6048                           ;psect for function _TMR0_DefaultInterruptHandler
  6049                           
  6050  07BD                     i1l1504:	
  6051                           ;incstack = 0
  6052                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+status,2+status,0]
  6053                           
  6054                           
  6055                           ;mcc_generated_files/tmr0.c: 127:     static uint8_t isrTMR0count = 0;;mcc_generated_fil
      +                          es/tmr0.c: 128:     isrTMR0count++;
  6056  07BD  3001               	movlw	1
  6057  07BE  00F0               	movwf	??_TMR0_DefaultInterruptHandler
  6058  07BF  0870               	movf	??_TMR0_DefaultInterruptHandler,w
  6059  07C0  0020               	movlb	0	; select bank0
  6060  07C1  07E5               	addwf	TMR0_DefaultInterruptHandler@isrTMR0count,f
  6061                           
  6062                           ;mcc_generated_files/tmr0.c: 129:     if (isrTMR0count % 16 == 1) {
  6063  07C2  300F               	movlw	15
  6064  07C3  0565               	andwf	TMR0_DefaultInterruptHandler@isrTMR0count,w
  6065  07C4  00F0               	movwf	??_TMR0_DefaultInterruptHandler
  6066  07C5  0370               	decf	??_TMR0_DefaultInterruptHandler,w
  6067  07C6  1D03               	btfss	3,2
  6068  07C7  2FC9               	goto	u93_21
  6069  07C8  2FCA               	goto	u93_20
  6070  07C9                     u93_21:
  6071  07C9  2FD5               	goto	i1l120
  6072  07CA                     u93_20:
  6073  07CA                     i1l1506:
  6074                           
  6075                           ;mcc_generated_files/tmr0.c: 130:         isrTMR0count = 0;
  6076  07CA  01E5               	clrf	TMR0_DefaultInterruptHandler@isrTMR0count
  6077  07CB                     i1l1508:
  6078                           
  6079                           ;mcc_generated_files/tmr0.c: 131:         TMR0flipper = !TMR0flipper;
  6080  07CB  0866               	movf	_TMR0flipper,w
  6081  07CC  1903               	btfsc	3,2
  6082  07CD  2FCF               	goto	u94_21
  6083  07CE  2FD1               	goto	u94_20
  6084  07CF                     u94_21:
  6085  07CF  3001               	movlw	1
  6086  07D0  2FD2               	goto	u95_20
  6087  07D1                     u94_20:
  6088  07D1  3000               	movlw	0
  6089  07D2                     u95_20:
  6090  07D2  00F0               	movwf	??_TMR0_DefaultInterruptHandler
  6091  07D3  0870               	movf	??_TMR0_DefaultInterruptHandler,w
  6092  07D4  00E6               	movwf	_TMR0flipper
  6093  07D5                     i1l120:
  6094  07D5  0008               	return
  6095  07D6                     __end_of_TMR0_DefaultInterruptHandler:
  6096  007E                     btemp	set	126	;btemp
  6097  007E                     int$flags	set	126
  6098  007E                     wtemp0	set	126
  6099                           
  6100                           	psect	idloc
  6101                           
  6102                           ;Config register IDLOC0 @ 0x8000
  6103                           ;	unspecified, using default values
  6104  8000                     	org	32768
  6105  8000  3FFF               	dw	16383
  6106                           
  6107                           ;Config register IDLOC1 @ 0x8001
  6108                           ;	unspecified, using default values
  6109  8001                     	org	32769
  6110  8001  3FFF               	dw	16383
  6111                           
  6112                           ;Config register IDLOC2 @ 0x8002
  6113                           ;	unspecified, using default values
  6114  8002                     	org	32770
  6115  8002  3FFF               	dw	16383
  6116                           
  6117                           ;Config register IDLOC3 @ 0x8003
  6118                           ;	unspecified, using default values
  6119  8003                     	org	32771
  6120  8003  3FFF               	dw	16383
  6121                           
  6122                           	psect	config
  6123                           
  6124                           ;Config register CONFIG1 @ 0x8007
  6125                           ;	Oscillator Selection Bits
  6126                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6127                           ;	Watchdog Timer Enable
  6128                           ;	WDTE = OFF, WDT disabled
  6129                           ;	Power-up Timer Enable
  6130                           ;	PWRTE = OFF, PWRT disabled
  6131                           ;	MCLR Pin Function Select
  6132                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6133                           ;	Flash Program Memory Code Protection
  6134                           ;	CP = OFF, Program memory code protection is disabled
  6135                           ;	Brown-out Reset Enable
  6136                           ;	BOREN = ON, Brown-out Reset enabled
  6137                           ;	Clock Out Enable
  6138                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6139                           ;	Internal/External Switchover Mode
  6140                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6141                           ;	Fail-Safe Clock Monitor Enable
  6142                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6143  8007                     	org	32775
  6144  8007  3FE4               	dw	16356
  6145                           
  6146                           ;Config register CONFIG2 @ 0x8008
  6147                           ;	Flash Memory Self-Write Protection
  6148                           ;	WRT = OFF, Write protection off
  6149                           ;	Stack Overflow/Underflow Reset Enable
  6150                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6151                           ;	Brown-out Reset Voltage Selection
  6152                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6153                           ;	Low-Power Brown Out Reset
  6154                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6155                           ;	Low-Voltage Programming Enable
  6156                           ;	LVP = ON, Low-voltage programming enabled
  6157  8008                     	org	32776
  6158  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         19
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     57      80
    BANK1            80      0       4
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    B_BTN_run@lfptr	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    B_BTN_run@ffptr	PTR FTN()void  size(2) Largest target is 1
		 -> start(), shiftInv(), 

    R_BTN_run@lfptr	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    R_BTN_run@ffptr	PTR FTN()void  size(2) Largest target is 1
		 -> start(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_random_TMR0
    _shiftR->_tone
    _shiftL->_tone
    ___lwmod->_random_TMR0
    _srand->_TMR0_ReadTimer
    _rand->___lmul
    _incollect->_tone
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _R_BTN_run->_start
    _B_BTN_run->_start
    _start->_tone

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_TMR0_DefaultInterruptHandler

Critical Paths under _main in BANK0

    _main->_checkHit
    _result->_flashLED
    ___lwmod->_random_TMR0
    _random_TMR0->_rand
    _rand->___lmul
    _dispExact->_flashLED
    _checkHit->_collect
    _collect->_flashing
    _flashing->_flashLED
    _flashLED->___lwmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   30788
                                             45 BANK0     12    12      0
                          _B_BTN_run
                          _R_BTN_run
                  _SYSTEM_Initialize
                            ___lwmod
                           _checkHit
                          _dispExact
                           _flashLED
                           _flashing
                             _noTone
                        _random_TMR0
                             _result
                             _shiftL
                             _shiftR
                               _tone
 ---------------------------------------------------------------------------------
 (1) _shiftR                                               0     0      0    2195
                               _tone
 ---------------------------------------------------------------------------------
 (1) _shiftL                                               0     0      0    2195
                               _tone
 ---------------------------------------------------------------------------------
 (1) _result                                               5     5      0    4561
                                             24 BANK0      5     5      0
                            ___lwdiv
                            ___lwmod
                           _flashLED
                             _noTone
                               _tone
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     615
                                             12 BANK0      6     2      4
                            ___lwdiv (ARG)
                        _random_TMR0 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              1 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _random_TMR0                                          5     3      2     824
                                              9 COMMON     3     3      0
                                             10 BANK0      2     0      2
                     _TMR0_ReadTimer
                            ___lbmod
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     121
                                              3 COMMON     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     316
                                              4 BANK0      6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     316
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              6     5      1     322
                                              1 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (2) _TMR0_ReadTimer                                       2     2      0      34
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _dispExact                                           10    10      0    3908
                                             24 BANK0     10    10      0
                           _flashLED
                             _noTone
                               _tone
 ---------------------------------------------------------------------------------
 (1) _checkHit                                             2     2      0    5986
                                             43 BANK0      2     2      0
                            _collect
                          _incollect
 ---------------------------------------------------------------------------------
 (2) _incollect                                            3     3      0    2241
                                              5 COMMON     3     3      0
                               _tone
 ---------------------------------------------------------------------------------
 (2) _collect                                              2     2      0    3745
                                             41 BANK0      2     2      0
                           _flashing
                             _noTone
                               _tone
 ---------------------------------------------------------------------------------
 (1) _flashing                                            17    17      0    1504
                                             24 BANK0     17    17      0
                           _flashLED
 ---------------------------------------------------------------------------------
 (2) _flashLED                                             6     2      4    1437
                                             18 BANK0      6     2      4
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _R_BTN_run                                            6     2      4    2406
                                              7 COMMON     4     0      4
                                              0 BANK0      2     2      0
                              _start *
 ---------------------------------------------------------------------------------
 (1) _B_BTN_run                                            6     2      4    2586
                                              7 COMMON     4     0      4
                                              0 BANK0      2     2      0
                           _shiftInv *
                              _start *
 ---------------------------------------------------------------------------------
 (2) _start                                                2     2      0    2195
                                              5 COMMON     2     2      0
                             _noTone
                               _tone
 ---------------------------------------------------------------------------------
 (1) _tone                                                 4     2      2    2195
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _noTone                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _shiftInv                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _B_BTN_run
     _shiftInv *
     _start *
       _noTone
       _tone
   _R_BTN_run
     _start *
   _SYSTEM_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   ___lwmod
     ___lwdiv (ARG)
     _random_TMR0 (ARG)
       _TMR0_ReadTimer
       ___lbmod
       _rand
         ___lmul
       _srand
         _TMR0_ReadTimer (ARG)
   _checkHit
     _collect
       _flashing
         _flashLED
           ___lwdiv (ARG)
           ___lwmod (ARG)
       _noTone
       _tone
     _incollect
       _tone
   _dispExact
     _flashLED
     _noTone
     _tone
   _flashLED
   _flashing
   _noTone
   _random_TMR0
   _result
     ___lwdiv
     ___lwmod
     _flashLED
     _noTone
     _tone
   _shiftL
     _tone
   _shiftR
     _tone
   _tone

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      61       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     39      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       4       8        5.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      61      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May  5 22:08:31 2023

                                      l22 0FA8                                        l25 0F9D  
                                      l19 0FEE                                        l54 07BC  
                                      l76 0FDE                                        l98 07FC  
                         _timer0ReloadVal 007C                                       l101 0FBB  
                                     l200 076B                                       l114 0FAE  
                                     l202 0781                                       l211 0539  
                                     l220 0314                                       l141 07EA  
                                     l205 0FD1                                       l150 0714  
                                     l223 04E4                                       l144 07FF  
                                     l234 0693                                       l243 0585  
                                     l228 0484                                       l229 0488  
                                     l190 0718                                       l238 055B  
                                     l246 040F                                       l262 0127  
                                     l183 06E0                                       l175 06B4  
                                     l191 0738                                       l263 0143  
                                     l255 00D1                                       l192 073C  
                                     l273 018A                                       l186 06EB  
                                     l178 06BF                                       l274 01A6  
                                     l266 0162                                       l259 016C  
                                     l197 07A3                                       l277 01C5  
                                     l376 05F7                                       l642 05C1  
                                     l580 0758                                       l652 062C  
                                     l582 075F                                       l823 0FC5  
                                     l826 0661                                       u850 0738  
                                     u851 0737                                       u845 0724  
                                     u855 0734                                       u880 0529  
                                     u864 04FB                                       u881 0528  
                                     u865 04F8                                       u970 0FCD  
                                     u971 0FCB                                       u875 0509  
                                     u980 0FCE                                       u885 0525  
                                     u990 0418                                       u991 0416  
                                     wreg 0009                                      l2000 0742  
                                    l2010 075E                                      l2002 0743  
                                    l2004 074E                                      l2020 070C  
                                    l2100 0107                                      l2030 06A3  
                                    l2006 0750                                      l2014 06ED  
                                    l2110 0124                                      l2102 010B  
                                    l2032 06A6                                      l2024 0694  
                                    l2008 0756                                      l2016 06FB  
                                    l2120 0154                                      l2112 0131  
                                    l2104 0110                                      l2050 06D2  
                                    l2042 06C0                                      l2034 06B8  
                                    l2026 0699                                      l1410 072D  
                                    l2018 0707                                      l2130 0187  
                                    l2122 0170                                      l2114 0135  
                                    l2106 011A                                      l1420 07E8  
                                    l2052 06E4                                      l2044 06C5  
                                    l2036 06BD                                      l2028 069E  
                                    l1412 0FA9                                      l1404 0715  
                                    l2140 01B7                                      l2132 0194  
                                    l2116 014D                                      l2108 0120  
                                    l2060 0043                                      l1414 07D6  
                                    l2054 06E9                                      l2046 06CA  
                                    l1406 071A                                      l1430 0529  
                                    l2150 01F6                                      l2142 01CF  
                                    l2134 0198                                      l2126 017E  
                                    l2118 0150                                      l2070 006B  
                                    l2062 004F                                      l1424 07FD  
                                    l1416 07D8                                      l2048 06CF  
                                    l1408 0728                                      l1432 0534  
                                    l2144 01E4                                      l2136 01B0  
                                    l2128 0183                                      l2080 0077  
                                    l2072 006F                                      l2064 0062  
                                    l1418 07E6                                      l1530 04BB  
                                    l1522 0489                                      l1450 07A4  
                                    l1426 04E5                                      l2138 01B3  
                                    l2146 01ED                                      l2090 00DA  
                                    l2082 0083                                      l2074 0073  
                                    l2066 0065                                      l2058 0039  
                                    l1532 04CD                                      l1524 0490  
                                    l1460 07B3                                      l1452 07A8  
                                    l1428 051F                                      l1620 0596  
                                    l1612 0586                                      l2148 01F0  
                                    l2092 00E6                                      l2084 0097  
                                    l2076 0075                                      l2068 0068  
                                    l1534 04D4                                      l1526 049E  
                                    l1518 0FC6                                      l1470 0FA3  
                                    l1462 07B5                                      l1454 07AB  
                                    l1550 041C                                      l1542 0410  
                                    l1630 05B2                                      l1622 059A  
                                    l1614 0588                                      l2086 00A1  
                                    l2094 00FB                                      l2078 0076  
                                    l1536 04DF                                      l1528 04B0  
                                    l1480 0FD8                                      l1472 0FA6  
                                    l1464 07B7                                      l1456 07AD  
                                    l1560 043D                                      l1552 041F  
                                    l1800 02DF                                      l1632 05B7  
                                    l1624 059E                                      l1616 058E  
                                    l1640 05FF                                      l1720 0792  
                                    l2096 0101                                      l2088 00AF  
                                    l1538 04E2                                      l1482 0FD9  
                                    l1466 07B8                                      l1458 07AF  
                                    l1490 07F0                                      l1474 0F9A  
                                    l1570 0470                                      l1562 044D  
                                    l1554 0426                                      l1810 0308  
                                    l1802 02EE                                      l1626 05AD  
                                    l1618 0591                                      l1634 05BD  
                                    l1650 0619                                      l1642 0602  
                                    l1722 0796                                      l1714 0782  
                                    l1730 0765                                      l2098 0104  
                                    l1484 0FDA                                      l1476 0FD2  
                                    l1468 07BA                                      l1492 07F2  
                                    l1660 0FDF                                      l1572 0476  
                                    l1564 0458                                      l1556 042F  
                                    l1548 0412                                      l1580 0662  
                                    l1820 054A                                      l1812 0311  
                                    l1804 02F5                                      l1740 01FC  
                                    l1628 05B1                                      l1652 061D  
                                    l1644 0607                                      l1724 079C  
                                    l1716 0787                                      l1732 0770  
                                    l1486 0FDD                                      l1478 0FD7  
                                    l1494 07F3                                      l1574 0479  
                                    l1566 045B                                      l1558 043A  
                                    l1590 0676                                      l1830 056B  
                                    l1822 0550                                      l1806 0301  
                                    l1742 01FF                                      l1654 0622  
                                    l1646 060B                                      l1638 05F8  
                                    l1718 078D                                      l1734 0774  
                                    l1496 07F4                                      l1488 07EB  
                                    l1576 0480                                      l1568 0462  
                                    l1592 0689                                      l1832 0577  
                                    l1824 0557                                      l1816 053A  
                                    l1808 0306                                      l1760 0253  
                                    l1752 021D                                      l1744 0217  
                                    l1648 060F                                      l1656 0628  
                                    l1840 0315                                      l1736 077A  
                                    l1728 0760                                      l1498 07F5  
                                    l1594 068D                                      l1586 0663  
                                    l1834 057C                                      l1818 0547  
                                    l1826 0566                                      l1762 0254  
                                    l1754 0233                                      l1746 0219  
                                    l1850 0392                                      l1842 0356  
                                    l1588 066A                                      l1836 0580  
                                    l1828 0569                                      l1780 0295  
                                    l1772 025F                                      l1764 025A  
                                    l1756 0242                                      l1860 03D6  
                                    l1852 039F                                      l1844 0363  
                                    l1838 0584                                      l1790 02C5  
                                    l1782 0296                                      l1774 0275  
                                    l1766 025B                                      l1758 024E  
                                    l1862 03DD                                      l1854 03B3  
                                    l1846 0377                                      l1792 02C8  
                                    l1784 029C                                      l1776 0284  
                                    l1864 03F0                                      l1856 03BA  
                                    l1848 037E                                      l1786 02A5  
                                    l1778 0290                                      l1866 03FF  
                                    l1858 03C7                                      l1788 02B1  
                                    l1980 05DF                                      l1972 05C2  
                                    l1868 040C                                      l1798 02CC  
                                    l1982 05EE                                      l1974 05CB  
                                    l1990 0FBC                                      l1976 05CF  
                                    l1992 062D                                      l1986 0FB5  
                                    l1978 05D8                                      l1994 064E  
                                    l1998 073E                                      _N1OE 24F6  
                                    u1000 0419                                      u1010 0436  
                                    u1011 0434                                      u1020 0437  
                                    u1030 0454                                      u1110 058E  
                                    u1031 0452                                      u1111 058D  
                                    u1040 0455                                      u1200 060F  
                                    u1201 060E                                      u1050 0476  
                                    u1130 059E                                      u1210 0619  
                                    u1051 0475                                      u1131 059D  
                                    u1211 0618                                      u1060 0480  
                                    u1061 047F                                      u1125 0592  
                                    u1070 0693                                      u1150 05AD  
                                    u1230 0628                                      u1071 0692  
                                    u1151 05AC                                      u1231 0627  
                                    u1215 0615                                      u2007 00DE  
                                    u1400 025A                                      u1401 0259  
                                    u1145 059F                                      u1225 061E  
                                    u2017 00EA                                      u1410 029C  
                                    u1170 05BD                                      u1411 029B  
                                    u1171 05BC                                      u1155 05A9  
                                    u2107 03AC                                      u2027 0139  
                                    u1420 0311                                      u1180 05FF  
                                    u1340 0787                                      u1421 0310  
                                    u1165 05B3                                      u1181 05FE  
                                    u2117 03C0                                      u1341 0786  
                                    u2037 0158                                      _LATA 010C  
                                    u1430 0547                                      _LATB 010D  
                                    u1431 0546                                      u2207 028A  
                                    u2127 03D0                                      u2047 019C  
                                    _LATC 010E                                      u1440 0550  
                                    u1504 033F                                      u1360 0796  
                                    u1441 054F                                      u2217 02A0  
                                    u2137 03E3                                      u1505 033C  
                                    u1361 0795                                      u2057 01BB  
                                    u1450 0557                                      u1370 0765  
                                    u2307 06AC                                      u1451 0556  
                                    u2227 02BE                                      u1195 0603  
                                    u2147 03F6                                      u2067 035C  
                                    u1355 078E                                      u1371 0764  
                                    u1460 0561                                      u1700 05EE  
                                    u2317 06D8                                      u1461 055F  
                                    u2237 02E8                                      u1701 05ED  
                                    u2157 0405                                      u2077 0370  
                                    u1470 0562                                      u1710 065B  
                                    u1390 0774                                      u2327 0495  
                                    u2247 02FB                                      u2167 0210  
                                    u2087 0384                                      u1391 0773  
                                    u1800 06C5                                      u1480 0577  
                                    u2337 04A3                                      u1801 06C4  
                                    u2257 066F                                      u1481 0576  
                                    u2177 0239                                      u2097 0398  
                                    u1385 076C                                      u1810 06CA  
                                    u1490 0584                                      u1730 0756  
                                    u2347 04B5                                      u1811 06C9  
                                    u2267 0682                                      u1491 0583  
                                    u2187 0248                                      u1731 0755  
                                    u1715 0657                                      u1820 06E4  
                                    u1740 075E                                      u1900 016C  
                                    u2357 04C7                                      u1821 06E3  
                                    u2277 042A                                      u2197 027B  
                                    u1741 075D                                      u1725 0746  
                                    u1901 016B                                      u1830 06E9  
                                    u1670 05CF                                      u1750 06FB  
                                    u1910 0170                                      u2367 04D9  
                                    u1831 06E8                                      u2287 0448  
                                    u1671 05CE                                      u1751 06FA  
                                    u1911 016F                                      u1760 0699  
                                    u1920 017D                                      u1840 00A1  
                                    u1761 0698                                      u2297 0466  
                                    u1921 017C                                      u1905 0168  
                                    u1841 00A0                                      u1770 069E  
                                    u1930 0183                                      u1850 00AC  
                                    u1771 069D                                      u1931 0182  
                                    u1780 06B8                                      u1940 01B0  
                                    u1860 00CF                                      u1781 06B7  
                                    u1685 05D9                                      u1941 01AF  
                                    u1790 06BD                                      u1950 01CF  
                                    u1870 0101                                      u1791 06BC  
                                    u1695 05E0                                      u1951 01CE  
                                    u1871 0100                                      u1855 00AA  
                                    u1960 01ED                                      u1880 0120  
                                    u1961 01EC                                      u1945 01AC  
                                    u1881 011F                                      u1865 00CD  
                                    u1970 01F6                                      u1890 014D  
                                    u1971 01F5                                      u1955 01CB  
                                    u1891 014C                                      u1895 0149  
                                    u1987 0049                                      u1997 005C  
                                    _TMR0 0015                                      _WPUA 020C  
                                    _WPUB 020D                                      _main 0039  
                                    _life 006F                                      _rand 062D  
                                    _seed 0067                                      fsr0h 0005  
                                    indf0 0000                                      fsr0l 0004  
                                    _tone 07D6                                      btemp 007E  
                                    start 0013                          ?_NCO1_Initialize 0070  
                 __end_of_TMR0_Initialize 07FD            ??_TMR0_DefaultInterruptHandler 0070  
           __end_of_OSCILLATOR_Initialize 0FA9                                     ?_main 0070  
                                   ?_rand 0024                           __end_of___lbmod 0760  
                                   ?_tone 0071                           __end_of___lwdiv 05C2  
                                   i1l111 0FFF                                     i1l120 07D5  
                         __end_of___lwmod 062D                                     i1l294 0011  
                       random_TMR0@reSeed 007B                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                                   u93_20 07CA                                     u93_21 07C9  
                                   u94_20 07D1                                     u94_21 07CF  
                                   u95_20 07D2                       ___lmul@multiplicand 0075  
               ?_TMR0_SetInterruptHandler 0071                          __end_of_TMR0_ISR 1000  
                         __end_of_collect 0489                            _WDT_Initialize 0F9A  
                                   _great 0060                                     _point 005B  
                                   _srand 0FBC                                     _start 0489  
                           flashing@bdisp 0059                                     main@i 004F  
                                   main@t 0057                            B_BTN_run@bflag 005D  
                          B_BTN_run@ffptr 0077                                     pclath 000A  
                          B_BTN_run@lfptr 0079                                     status 0003  
                                   wtemp0 007E  TMR0_DefaultInterruptHandler@isrTMR0count 0065  
                            ?_random_TMR0 002A                           __initialization 0015  
                            __end_of_main 01FC                              __end_of_rand 0662  
                            __end_of_tone 07EB               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 004D                                    ??_rand 0026  
                                  ??_tone 0073                    __end_of_WDT_Initialize 0F9E  
                       __end_of_B_BTN_run 06EC                                    _APFCON 011D  
                                  ?_srand 0073                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  ?_start 0070                                    _BORCON 0116  
                                  i1l1504 07BD                                    i1l1506 07CA  
                                  i1l1508 07CB                                    i1l1662 0FEF  
                                  i1l1664 0FF0                                    i1l1666 0FF3  
                                  i1l1668 0FFA                                    i1l1970 000E  
                                  i1l1966 0006                                    u124_20 0FFA  
                                  i1l1968 000A                                    u124_21 0FF9  
                                  u165_20 000A                                    u165_21 0009  
                                  u166_20 000E                                    u166_21 000D  
                                  _OSCCON 0099                                    _WDTCON 0097  
                        __end_of_checkHit 0586                          __end_of_flashLED 073D  
                        __end_of_flashing 053A                                    ___lmul 05C2  
                               ??___lbmod 0072                                 ??___lwdiv 0075  
                               ??___lwmod 0030                          ?_TMR0_Initialize 0070  
                                  _noTone 07FD                                    _cursor 006D  
                                  _inloop 0063                                    _shiftL 0782  
                                  _target 00A2                                    _shiftR 0760  
                                  _result 0315                                 ??_collect 0049  
                        __end_of_shiftInv 0FD2                           ?_WDT_Initialize 0070  
                                  srand@s 0073                         __end_of_R_BTN_run 06C0  
TMR0_SetInterruptHandler@InterruptHandler 0071                         _SYSTEM_Initialize 0FDF  
                         ___lbmod@divisor 0071                   __end_of__initialization 0035  
                         ___lbmod@counter 0075                        ?_SYSTEM_Initialize 0070  
                          __pcstackCOMMON 0070                              __pidataBANK0 0F9E  
                            __pidataBANK1 0002                       ??_SYSTEM_Initialize 0073  
                               ?_TMR0_ISR 0070                             __end_of_srand 0FC6  
                           __end_of_start 04E5                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 0FEF                                   ??_srand 0075  
                                 ??_start 0075                                __pbssBANK0 0059  
                              __pmaintext 0039          __end_of_TMR0_SetInterruptHandler 0FAF  
                                 ?___lmul 0071                                ??_TMR0_ISR 0071  
                              __pintentry 0004                                   ?_noTone 0070  
                          ___lmul@product 0020                                   ?_shiftL 0070  
                                 ?_shiftR 0070                                   ?_result 0070  
                                 _NCO1CLK 049F                                   _NCO1CON 049E  
                               ?_checkHit 0070                                _brightflip 0061  
                               ?_flashLED 0032                                 ?_flashing 0070  
                          random_TMR0@now 0064                         __end_of_dispExact 0315  
                               ?_shiftInv 0070                                   ___lbmod 073D  
                                 ___lwdiv 0586                                   ___lwmod 05F8  
                                 __ptext1 0760                                   __ptext2 0782  
                                 __ptext3 0315                                   __ptext4 05F8  
                                 __ptext5 0586                                   __ptext6 06EC  
                                 __ptext7 0FBC                                   __ptext8 062D  
                                 __ptext9 05C2                                   _collect 0410  
                       __end_of_incollect 0694                     _OSCILLATOR_Initialize 0FA3  
                              ??_checkHit 004B                  ??_PIN_MANAGER_Initialize 0071  
                              ??_flashLED 0036                                   clrloop0 0FB0  
                              ??_flashing 0038                      end_of_initialization 0035  
                          R_BTN_run@ffptr 0077                                 _B_BTN_run 06C0  
                          R_BTN_run@lfptr 0079                            R_BTN_run@rflag 005E  
                         flashing@nowdisp 0047                                ??_shiftInv 0071  
                   TMR0_ReadTimer@readVal 0072                            _TMR0_ReadTimer 0FB5  
                        ??_WDT_Initialize 0071                  _TMR0_SetInterruptHandler 0FA9  
                               _PORTCbits 000E                                dispExact@i 003E  
                              dispExact@m 003F                          ___lbmod@dividend 0074  
                              ?_B_BTN_run 0077                                 _R_BTN_run 0694  
                             ___lbmod@rem 0076                    __end_of_TMR0_ReadTimer 0FBC  
                          __end_of___lmul 05F8                    ?_OSCILLATOR_Initialize 0070  
                          __end_of_noTone 0800                            __end_of_shiftL 07A4  
                          __end_of_shiftR 0782                            __end_of_result 0410  
                     start_initialization 0015                         ??_NCO1_Initialize 0071  
                              ?_R_BTN_run 0077                                incollect@i 0077  
                         ?_TMR0_ReadTimer 0070                                  ??___lmul 0079  
                             __pdataBANK0 006B                               __pdataBANK1 00A2  
                                ??_noTone 0071                                  ??_shiftL 0075  
                                ??_shiftR 0075                                  ??_result 0038  
                             __pbssCOMMON 007C                                 ___latbits 0002  
                           __pcstackBANK0 0020                               ??_B_BTN_run 0020  
                   _TMR0_InterruptHandler 00A0                                 __pnvBANK1 00A0  
                           ??_random_TMR0 0079                          ___lwdiv@dividend 0073  
                  _PIN_MANAGER_Initialize 07A4                                  ?___lbmod 0071  
                                ?___lwdiv 0071                                  ?___lwmod 002C  
                               _dispExact 01FC              ??_INTERRUPT_InterruptManager 0071  
                                ?_collect 0070                                 _incollect 0662  
                             _NCO1CONbits 049E                          ___lwdiv@quotient 0076  
                                _NCO1ACCH 0499                                  _NCO1ACCL 0498  
                                _NCO1ACCU 049A                                  _NCO1INCH 049C  
                                _NCO1INCL 049B                               ??_R_BTN_run 0020  
                       ??_TMR0_Initialize 0073                                 clear_ram0 0FAF  
              ??_TMR0_SetInterruptHandler 0073                                  _TMR0_ISR 0FEF  
                               flashLED@i 0037                                ?_dispExact 0070  
                     __end_of_random_TMR0 0715                                 main@i_342 0051  
                               main@i_344 0053                                 main@i_345 0055  
                              ?_incollect 0070                         ___lmul@multiplier 0071  
                 ??_OSCILLATOR_Initialize 0071                           _NCO1_Initialize 0FD2  
                                _checkHit 053A                           ___lwdiv@divisor 0071  
                                _gameflag 0062                           ___lwdiv@counter 0078  
                                __ptext10 073D                                  __ptext11 0FB5  
                                __ptext20 07EB                                  __ptext12 01FC  
                                __ptext21 0FA9                                  __ptext13 053A  
                                __ptext30 07FD                                  __ptext22 07A4  
                                __ptext14 0662                                  __ptext23 0FA3  
                                __ptext15 0410                                  __ptext32 0FEF  
                                __ptext24 0FD2                                  __ptext16 04E5  
                                __ptext33 07BD                                  __ptext25 0694  
                                __ptext17 0715                                  __ptext26 06C0  
                                __ptext18 0FDF                                  __ptext27 0FC6  
                                __ptext19 0F9A                                  __ptext28 0489  
                                __ptext29 07D6                                  _flashLED 0715  
                                _flashing 04E5                          ??_TMR0_ReadTimer 0071  
    __end_of_TMR0_DefaultInterruptHandler 07D6              _TMR0_DefaultInterruptHandler 07BD  
                                _shiftInv 0FC6                                  _shiftToL 005F  
                             _random_TMR0 06EC                                  _velocity 006B  
                                int$flags 007E                               ??_dispExact 0038  
                                collect@i 004A        __end_of_INTERRUPT_InterruptManager 0013  
              _INTERRUPT_InterruptManager 0004                            dispExact@i_314 0040  
                          dispExact@i_316 003A                            dispExact@m_315 0041  
                              _INTCONbits 000B                               ??_incollect 0075  
                                intlevel1 0000                          ___lwmod@dividend 002E  
                 ?_PIN_MANAGER_Initialize 0070                   __end_of_NCO1_Initialize 0FDF  
                            flashLED@disp 0032             ?_TMR0_DefaultInterruptHandler 0070  
                            flashLED@segs 0034                                  tone@freq 0071  
                           dispExact@disp 003C                                _OPTION_REG 0095  
                             _TMR0flipper 0066                           ___lwmod@divisor 002C  
                         _TMR0_Initialize 07EB                           ___lwmod@counter 0031  
          __end_of_PIN_MANAGER_Initialize 07BD  
